{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { Children, cloneElement, isValidElement, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { Divider } from '@mui/material';\nimport { Outlet, Routes, Route } from 'react-router-dom';\nimport { useRecordContext, OptionalRecordContextProvider } from 'ra-core';\nimport { TabbedShowLayoutTabs, getShowLayoutTabFullPath } from './TabbedShowLayoutTabs';\n/**\n * Layout for a Show view showing fields grouped in tabs and laid out in a single column.\n *\n * It pulls the record from the RecordContext. It renders a set of `<Tabs>`,\n * each of which contains a list of record fields in a single-column layout\n * (via MUI's `<Stack>` component).\n * `<TabbedShowLayout>` delegates the actual rendering of fields to its children,\n * which should be `<Tab>` components.\n * `<Tab>` wraps each field inside a <Labeled> component to add a label.\n *\n * @example\n * // in src/posts.js\n * import * as React from \"react\";\n * import { Show, TabbedShowLayout, Tab, TextField } from 'react-admin';\n *\n * export const PostShow = () => (\n *     <Show>\n *         <TabbedShowLayout>\n *             <Tab label=\"Content\">\n *                 <TextField source=\"title\" />\n *                 <TextField source=\"subtitle\" />\n *            </Tab>\n *             <Tab label=\"Metadata\">\n *                 <TextField source=\"category\" />\n *            </Tab>\n *         </TabbedShowLayout>\n *     </Show>\n * );\n *\n * // in src/App.js\n * import * as React from \"react\";\n * import { Admin, Resource } from 'react-admin';\n *\n * import { PostShow } from './posts';\n *\n * const App = () => (\n *     <Admin dataProvider={...}>\n *         <Resource name=\"posts\" show={PostShow} />\n *     </Admin>\n * );\n *\n * @param {TabbedShowLayoutProps} props\n * @param {string} props.className A className to apply to the page content.\n * @param {ElementType} props.component The component to use as root component (div by default).\n * @param {ReactNode} props.divider An optional divider between each field, passed to `<Stack>`.\n * @param {number} props.spacing The spacing to use between each field, passed to `<Stack>`. Defaults to 1.\n * @param {Object} props.sx Custom style object.\n * @param {boolean} props.syncWithLocation Whether to update the URL when the tab changes. Defaults to true.\n * @param {ElementType} props.tabs A custom component for rendering tabs.\n */\nexport var TabbedShowLayout = function (props) {\n  var children = props.children,\n    className = props.className,\n    spacing = props.spacing,\n    divider = props.divider,\n    _a = props.syncWithLocation,\n    syncWithLocation = _a === void 0 ? true : _a,\n    _b = props.tabs,\n    tabs = _b === void 0 ? DefaultTabs : _b,\n    value = props.value,\n    rest = __rest(props, [\"children\", \"className\", \"spacing\", \"divider\", \"syncWithLocation\", \"tabs\", \"value\"]);\n  var record = useRecordContext(props);\n  var nonNullChildren = Children.toArray(children).filter(function (child) {\n    return child !== null;\n  });\n  var _c = useState(0),\n    tabValue = _c[0],\n    setTabValue = _c[1];\n  var handleTabChange = function (event, value) {\n    if (!syncWithLocation) {\n      setTabValue(value);\n    }\n  };\n  if (!record) {\n    return null;\n  }\n  var renderTabHeaders = function () {\n    return cloneElement(tabs, {\n      onChange: handleTabChange,\n      syncWithLocation: syncWithLocation,\n      value: tabValue\n    }, nonNullChildren);\n  };\n  return React.createElement(OptionalRecordContextProvider, {\n    value: props.record\n  }, React.createElement(Root, __assign({\n    className: className\n  }, sanitizeRestProps(rest)), syncWithLocation ? React.createElement(Routes, null, React.createElement(Route, {\n    path: \"/*\",\n    element: React.createElement(React.Fragment, null, renderTabHeaders(), React.createElement(Divider, null), React.createElement(\"div\", {\n      className: TabbedShowLayoutClasses.content\n    }, React.createElement(Outlet, null)))\n  }, Children.map(nonNullChildren, function (tab, index) {\n    return isValidElement(tab) ? React.createElement(Route, {\n      path: getShowLayoutTabFullPath(tab, index),\n      element: cloneElement(tab, {\n        context: 'content',\n        spacing: spacing,\n        divider: divider\n      })\n    }) : null;\n  }))) : React.createElement(React.Fragment, null, renderTabHeaders(), React.createElement(Divider, null), React.createElement(\"div\", {\n    className: TabbedShowLayoutClasses.content\n  }, Children.map(nonNullChildren, function (tab, index) {\n    if (!isValidElement(tab) || tabValue !== index) {\n      return null;\n    }\n    return cloneElement(tab, {\n      context: 'content',\n      spacing: spacing,\n      divider: divider\n    });\n  })))));\n};\nTabbedShowLayout.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  record: PropTypes.object,\n  spacing: PropTypes.any,\n  sx: PropTypes.any,\n  syncWithLocation: PropTypes.bool,\n  tabs: PropTypes.element,\n  value: PropTypes.number\n};\nvar DefaultTabs = React.createElement(TabbedShowLayoutTabs, null);\nvar PREFIX = 'RaTabbedShowLayout';\nexport var TabbedShowLayoutClasses = {\n  content: \"\".concat(PREFIX, \"-content\")\n};\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {\n    flex: 1\n  }, _b[\"& .\".concat(TabbedShowLayoutClasses.content)] = {\n    padding: \"\".concat(theme.spacing(1), \" \").concat(theme.spacing(2))\n  }, _b;\n});\nvar sanitizeRestProps = function (_a) {\n  var record = _a.record,\n    resource = _a.resource,\n    initialValues = _a.initialValues,\n    staticContext = _a.staticContext,\n    translate = _a.translate,\n    tabs = _a.tabs,\n    rest = __rest(_a, [\"record\", \"resource\", \"initialValues\", \"staticContext\", \"translate\", \"tabs\"]);\n  return rest;\n};","map":{"version":3,"mappings":"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","names":["React","Children","cloneElement","isValidElement","useState","PropTypes","styled","Divider","Outlet","Routes","Route","useRecordContext","OptionalRecordContextProvider","TabbedShowLayoutTabs","getShowLayoutTabFullPath","TabbedShowLayout","props","className","spacing","divider","_a","syncWithLocation","_b","tabs","DefaultTabs","value","rest","record","nonNullChildren","toArray","children","filter","tabValue","setTabValue","handleTabChange","event","renderTabHeaders","onChange","Root","sanitizeRestProps","path","element","TabbedShowLayoutClasses","content","map","tab","index","context","propTypes","node","string","object","any","sx","bool","number","PREFIX","name","overridesResolver","styles","root","theme","flex","padding","resource","initialValues","staticContext","translate"],"sourceRoot":"","sources":["../../../src/detail/TabbedShowLayout.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
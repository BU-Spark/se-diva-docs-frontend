{"ast":null,"code":"import { useContext, useMemo } from 'react';\nimport defaults from 'lodash/defaults';\nimport { ShowContext } from './ShowContext';\n/**\n * Hook to read the show controller props from the ShowContext.\n *\n * Mostly used within a <ShowContext.Provider> (e.g. as a descendent of <Show>).\n *\n * But you can also use it without a <ShowContext.Provider>. In this case, it is up to you\n * to pass all the necessary props.\n *\n * The given props will take precedence over context values.\n *\n * @typedef {Object} ShowControllerResult\n *\n * @returns {ShowControllerResult} create controller props\n *\n * @see useShowController for how it is filled\n *\n */\nexport var useShowContext = function (props) {\n  // Can't find a way to specify the RecordType when ShowContext is declared\n  // @ts-ignore\n  var context = useContext(ShowContext);\n  // Props take precedence over the context\n  return useMemo(function () {\n    return defaults({}, props != null ? extractShowContextProps(props) : {}, context);\n  }, [context, props]);\n};\n/**\n * Extract only the show controller props\n *\n * @param {Object} props props passed to the useShowContext hook\n *\n * @returns {ShowControllerResult} show controller props\n */\nvar extractShowContextProps = function (_a) {\n  var record = _a.record,\n    data = _a.data,\n    defaultTitle = _a.defaultTitle,\n    isFetching = _a.isFetching,\n    isLoading = _a.isLoading,\n    resource = _a.resource;\n  return {\n    // Necessary for actions (EditActions) which expect a data prop containing the record\n    // @deprecated - to be removed in 4.0d\n    record: record || data,\n    data: record || data,\n    defaultTitle: defaultTitle,\n    isFetching: isFetching,\n    isLoading: isLoading,\n    resource: resource\n  };\n};","map":{"version":3,"mappings":"AAAA,SAASA,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,iBAAiB;AAGtC,SAASC,WAAW,QAAQ,eAAe;AAG3C;;;;;;;;;;;;;;;;;AAiBA,OAAO,IAAMC,cAAc,GAAG,UAC1BC,KAAiD;EAEjD;EACA;EACA,IAAMC,OAAO,GAAGN,UAAU,CAAmCG,WAAW,CAAC;EAEzE;EACA,OAAOF,OAAO,CACV;IACI,eAAQ,CACJ,EAAE,EACFI,KAAK,IAAI,IAAI,GAAGE,uBAAuB,CAACF,KAAK,CAAC,GAAG,EAAE,EACnDC,OAAO,CACV;EAJD,CAIC,EACL,CAACA,OAAO,EAAED,KAAK,CAAC,CACnB;AACL,CAAC;AAED;;;;;;;AAOA,IAAME,uBAAuB,GAAG,UAACC,EAO3B;MANFC,MAAM;IACNC,IAAI;IACJC,YAAY;IACZC,UAAU;IACVC,SAAS;IACTC,QAAQ;EACD,OAAC;IACR;IACA;IACAL,MAAM,EAAEA,MAAM,IAAIC,IAAI;IACtBA,IAAI,EAAED,MAAM,IAAIC,IAAI;IACpBC,YAAY;IACZC,UAAU;IACVC,SAAS;IACTC,QAAQ;GACX;AATU,CAST","names":["useContext","useMemo","defaults","ShowContext","useShowContext","props","context","extractShowContextProps","_a","record","data","defaultTitle","isFetching","isLoading","resource"],"sources":["/Users/paigedeveau/node_modules/ra-core/src/controller/show/useShowContext.tsx"],"sourcesContent":["import { useContext, useMemo } from 'react';\nimport defaults from 'lodash/defaults';\n\nimport { RaRecord } from '../../types';\nimport { ShowContext } from './ShowContext';\nimport { ShowControllerResult } from './useShowController';\n\n/**\n * Hook to read the show controller props from the ShowContext.\n *\n * Mostly used within a <ShowContext.Provider> (e.g. as a descendent of <Show>).\n *\n * But you can also use it without a <ShowContext.Provider>. In this case, it is up to you\n * to pass all the necessary props.\n *\n * The given props will take precedence over context values.\n *\n * @typedef {Object} ShowControllerResult\n *\n * @returns {ShowControllerResult} create controller props\n *\n * @see useShowController for how it is filled\n *\n */\nexport const useShowContext = <RecordType extends RaRecord = any>(\n    props?: Partial<ShowControllerResult<RecordType>>\n): ShowControllerResult<RecordType> => {\n    // Can't find a way to specify the RecordType when ShowContext is declared\n    // @ts-ignore\n    const context = useContext<ShowControllerResult<RecordType>>(ShowContext);\n\n    // Props take precedence over the context\n    return useMemo(\n        () =>\n            defaults(\n                {},\n                props != null ? extractShowContextProps(props) : {},\n                context\n            ),\n        [context, props]\n    );\n};\n\n/**\n * Extract only the show controller props\n *\n * @param {Object} props props passed to the useShowContext hook\n *\n * @returns {ShowControllerResult} show controller props\n */\nconst extractShowContextProps = ({\n    record,\n    data,\n    defaultTitle,\n    isFetching,\n    isLoading,\n    resource,\n}: any) => ({\n    // Necessary for actions (EditActions) which expect a data prop containing the record\n    // @deprecated - to be removed in 4.0d\n    record: record || data,\n    data: record || data,\n    defaultTitle,\n    isFetching,\n    isLoading,\n    resource,\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
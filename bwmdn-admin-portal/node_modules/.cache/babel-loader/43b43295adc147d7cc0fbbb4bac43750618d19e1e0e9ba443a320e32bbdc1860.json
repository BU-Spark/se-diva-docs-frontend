{"ast":null,"code":"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport ActionHide from '@mui/icons-material/HighlightOff';\nimport clsx from 'clsx';\nimport { useResourceContext, useTranslate } from 'ra-core';\nexport var FilterFormInput = function (props) {\n  var filterElement = props.filterElement,\n    handleHide = props.handleHide,\n    className = props.className;\n  var resource = useResourceContext(props);\n  var translate = useTranslate();\n  return React.createElement(Root, {\n    \"data-source\": filterElement.props.source,\n    className: clsx('filter-field', className)\n  }, !filterElement.props.alwaysOn && React.createElement(IconButton, {\n    className: clsx('hide-filter', FilterFormInputClasses.hideButton),\n    onClick: handleHide,\n    \"data-key\": filterElement.props.source,\n    title: translate('ra.action.remove_filter'),\n    size: \"small\"\n  }, React.createElement(ActionHide, null)), React.cloneElement(filterElement, {\n    resource: resource,\n    record: emptyRecord,\n    size: 'small',\n    helperText: false,\n    // ignore defaultValue in Field because it was already set in Form (via mergedInitialValuesWithDefaultValues)\n    defaultValue: undefined\n  }), React.createElement(\"div\", {\n    className: FilterFormInputClasses.spacer\n  }, \"\\u00A0\"));\n};\nFilterFormInput.propTypes = {\n  filterElement: PropTypes.node,\n  handleHide: PropTypes.func,\n  resource: PropTypes.string,\n  className: PropTypes.string\n};\nvar PREFIX = 'RaFilterFormInput';\nexport var FilterFormInputClasses = {\n  spacer: \"\".concat(PREFIX, \"-spacer\"),\n  hideButton: \"\".concat(PREFIX, \"-hideButton\")\n};\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {\n    display: 'flex',\n    alignItems: 'flex-end',\n    pointerEvents: 'auto'\n  }, _b[\"& .\".concat(FilterFormInputClasses.spacer)] = {\n    width: theme.spacing(2)\n  }, _b[\"& .\".concat(FilterFormInputClasses.hideButton)] = {\n    marginBottom: theme.spacing(1)\n  }, _b;\n});\nvar emptyRecord = {};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,UAAU,MAAM,kCAAkC;AACzD,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,kBAAkB,EAAEC,YAAY,QAAQ,SAAS;AAE1D,OAAO,IAAMC,eAAe,GAAG,eAAK;EACxB,iBAAa,GAA4BC,KAAK,cAAjC;IAAEC,UAAU,GAAgBD,KAAK,WAArB;IAAEE,SAAS,GAAKF,KAAK,UAAV;EAC5C,IAAMG,QAAQ,GAAGN,kBAAkB,CAACG,KAAK,CAAC;EAC1C,IAAMI,SAAS,GAAGN,YAAY,EAAE;EAEhC,OACIP,oBAACc,IAAI;IAAA,eACYC,aAAa,CAACN,KAAK,CAACO,MAAM;IACvCL,SAAS,EAAEN,IAAI,CAAC,cAAc,EAAEM,SAAS;EAAC,GAEzC,CAACI,aAAa,CAACN,KAAK,CAACQ,QAAQ,IAC1BjB,oBAACG,UAAU;IACPQ,SAAS,EAAEN,IAAI,CACX,aAAa,EACba,sBAAsB,CAACC,UAAU,CACpC;IACDC,OAAO,EAAEV,UAAU;IAAA,YACTK,aAAa,CAACN,KAAK,CAACO,MAAM;IACpCK,KAAK,EAAER,SAAS,CAAC,yBAAyB,CAAC;IAC3CS,IAAI,EAAC;EAAO,GAEZtB,oBAACI,UAAU,OAAG,CAErB,EACAJ,KAAK,CAACuB,YAAY,CAACR,aAAa,EAAE;IAC/BH,QAAQ;IACRY,MAAM,EAAEC,WAAW;IACnBH,IAAI,EAAE,OAAO;IACbI,UAAU,EAAE,KAAK;IACjB;IACAC,YAAY,EAAEC;GACjB,CAAC,EACF5B;IAAKW,SAAS,EAAEO,sBAAsB,CAACW;EAAM,YAAc,CACxD;AAEf,CAAC;AAEDrB,eAAe,CAACsB,SAAS,GAAG;EACxBf,aAAa,EAAEb,SAAS,CAAC6B,IAAI;EAC7BrB,UAAU,EAAER,SAAS,CAAC8B,IAAI;EAC1BpB,QAAQ,EAAEV,SAAS,CAAC+B,MAAM;EAC1BtB,SAAS,EAAET,SAAS,CAAC+B;CACxB;AAED,IAAMC,MAAM,GAAG,mBAAmB;AAElC,OAAO,IAAMhB,sBAAsB,GAAG;EAClCW,MAAM,EAAE,UAAGK,MAAM,YAAS;EAC1Bf,UAAU,EAAE,UAAGe,MAAM;CACxB;AAED,IAAMpB,IAAI,GAAGb,MAAM,CAAC,KAAK,EAAE;EACvBkC,IAAI,EAAED,MAAM;EACZE,iBAAiB,EAAE,UAAC3B,KAAK,EAAE4B,MAAM;IAAK,aAAM,CAACC,IAAI;EAAX;CACzC,CAAC,CAAC,UAACC,EAAS;;MAAPC,KAAK;EAAO;IACdC,OAAO,EAAE,MAAM;IACfC,UAAU,EAAE,UAAU;IACtBC,aAAa,EAAE;KAEfC,GAAC,aAAM1B,sBAAsB,CAACW,MAAM,CAAE,IAAG;IAAEgB,KAAK,EAAEL,KAAK,CAACM,OAAO,CAAC,CAAC;EAAC,CAAE,EACpEF,GAAC,aAAM1B,sBAAsB,CAACC,UAAU,CAAE,IAAG;IACzC4B,YAAY,EAAEP,KAAK,CAACM,OAAO,CAAC,CAAC;GAChC;AARa,CAShB,CAAC;AAEH,IAAMrB,WAAW,GAAG,EAAE","names":["React","styled","PropTypes","IconButton","ActionHide","clsx","useResourceContext","useTranslate","FilterFormInput","props","handleHide","className","resource","translate","Root","filterElement","source","alwaysOn","FilterFormInputClasses","hideButton","onClick","title","size","cloneElement","record","emptyRecord","helperText","defaultValue","undefined","spacer","propTypes","node","func","string","PREFIX","name","overridesResolver","styles","root","_a","theme","display","alignItems","pointerEvents","_b","width","spacing","marginBottom"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/ra-ui-materialui/src/list/filter/FilterFormInput.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport ActionHide from '@mui/icons-material/HighlightOff';\nimport clsx from 'clsx';\nimport { useResourceContext, useTranslate } from 'ra-core';\n\nexport const FilterFormInput = props => {\n    const { filterElement, handleHide, className } = props;\n    const resource = useResourceContext(props);\n    const translate = useTranslate();\n\n    return (\n        <Root\n            data-source={filterElement.props.source}\n            className={clsx('filter-field', className)}\n        >\n            {!filterElement.props.alwaysOn && (\n                <IconButton\n                    className={clsx(\n                        'hide-filter',\n                        FilterFormInputClasses.hideButton\n                    )}\n                    onClick={handleHide}\n                    data-key={filterElement.props.source}\n                    title={translate('ra.action.remove_filter')}\n                    size=\"small\"\n                >\n                    <ActionHide />\n                </IconButton>\n            )}\n            {React.cloneElement(filterElement, {\n                resource,\n                record: emptyRecord,\n                size: 'small',\n                helperText: false,\n                // ignore defaultValue in Field because it was already set in Form (via mergedInitialValuesWithDefaultValues)\n                defaultValue: undefined,\n            })}\n            <div className={FilterFormInputClasses.spacer}>&nbsp;</div>\n        </Root>\n    );\n};\n\nFilterFormInput.propTypes = {\n    filterElement: PropTypes.node,\n    handleHide: PropTypes.func,\n    resource: PropTypes.string,\n    className: PropTypes.string,\n};\n\nconst PREFIX = 'RaFilterFormInput';\n\nexport const FilterFormInputClasses = {\n    spacer: `${PREFIX}-spacer`,\n    hideButton: `${PREFIX}-hideButton`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'flex-end',\n    pointerEvents: 'auto',\n\n    [`& .${FilterFormInputClasses.spacer}`]: { width: theme.spacing(2) },\n    [`& .${FilterFormInputClasses.hideButton}`]: {\n        marginBottom: theme.spacing(1),\n    },\n}));\n\nconst emptyRecord = {};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as React from 'react';\nimport { useMemo } from 'react';\nimport { useInRouterContext } from 'react-router-dom';\nimport { createHashHistory } from 'history';\nimport { HistoryRouter } from './HistoryRouter';\nimport { BasenameContextProvider } from './BasenameContextProvider';\n/**\n * Creates a react-router Router unless the app is already inside existing router.\n * Also creates a BasenameContext with the basename prop\n */\nexport var AdminRouter = function (_a) {\n  var history = _a.history,\n    _b = _a.basename,\n    basename = _b === void 0 ? '' : _b,\n    children = _a.children;\n  var isInRouter = useInRouterContext();\n  var Router = isInRouter ? DummyRouter : InternalRouter;\n  return React.createElement(BasenameContextProvider, {\n    basename: isInRouter ? basename : ''\n  }, React.createElement(Router, {\n    basename: basename,\n    history: history\n  }, children));\n};\nvar DummyRouter = function (_a) {\n  var children = _a.children;\n  return React.createElement(React.Fragment, null, children);\n};\nvar InternalRouter = function (_a) {\n  var children = _a.children,\n    history = _a.history;\n  var finalHistory = useMemo(function () {\n    return history || createHashHistory();\n  }, [history]);\n  return React.createElement(HistoryRouter, {\n    history: finalHistory\n  }, children);\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAoBC,OAAO,QAAQ,OAAO;AAC1C,SAASC,kBAAkB,QAAQ,kBAAkB;AACrD,SAASC,iBAAiB,QAAiB,SAAS;AAEpD,SAASC,aAAa,QAA4B,iBAAiB;AACnE,SAASC,uBAAuB,QAAQ,2BAA2B;AAEnE;;;;AAIA,OAAO,IAAMC,WAAW,GAAG,UAACC,EAIT;MAHfC,OAAO;IACPC,gBAAa;IAAbC,QAAQ,mBAAG,EAAE;IACbC,QAAQ;EAER,IAAMC,UAAU,GAAGV,kBAAkB,EAAE;EACvC,IAAMW,MAAM,GAAGD,UAAU,GAAGE,WAAW,GAAGC,cAAc;EAExD,OACIf,oBAACK,uBAAuB;IAACK,QAAQ,EAAEE,UAAU,GAAGF,QAAQ,GAAG;EAAE,GACzDV,oBAACa,MAAM;IAACH,QAAQ,EAAEA,QAAQ;IAAEF,OAAO,EAAEA;EAAO,GACvCG,QAAQ,CACJ,CACa;AAElC,CAAC;AAQD,IAAMG,WAAW,GAAG,UAACP,EAAqC;MAAnCI,QAAQ;EAAgC,iDAAGA,QAAQ,CAAI;AAAf,CAAe;AAE9E,IAAMI,cAAc,GAAG,UAACR,EAKe;MAJnCI,QAAQ;IACRH,OAAO;EAIP,IAAMQ,YAAY,GAAGf,OAAO,CAAC;IAAM,cAAO,IAAIE,iBAAiB,EAAE;EAA9B,CAA8B,EAAE,CAC/DK,OAAO,CACV,CAAC;EAEF,OAAOR,oBAACI,aAAa;IAACI,OAAO,EAAEQ;EAAY,GAAGL,QAAQ,CAAiB;AAC3E,CAAC","names":["React","useMemo","useInRouterContext","createHashHistory","HistoryRouter","BasenameContextProvider","AdminRouter","_a","history","_b","basename","children","isInRouter","Router","DummyRouter","InternalRouter","finalHistory"],"sources":["/Users/paigedeveau/node_modules/ra-core/src/routing/AdminRouter.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactNode, useMemo } from 'react';\nimport { useInRouterContext } from 'react-router-dom';\nimport { createHashHistory, History } from 'history';\n\nimport { HistoryRouter, HistoryRouterProps } from './HistoryRouter';\nimport { BasenameContextProvider } from './BasenameContextProvider';\n\n/**\n * Creates a react-router Router unless the app is already inside existing router.\n * Also creates a BasenameContext with the basename prop\n */\nexport const AdminRouter = ({\n    history,\n    basename = '',\n    children,\n}: AdminRouterProps) => {\n    const isInRouter = useInRouterContext();\n    const Router = isInRouter ? DummyRouter : InternalRouter;\n\n    return (\n        <BasenameContextProvider basename={isInRouter ? basename : ''}>\n            <Router basename={basename} history={history}>\n                {children}\n            </Router>\n        </BasenameContextProvider>\n    );\n};\n\nexport interface AdminRouterProps {\n    history?: History;\n    basename?: string;\n    children: React.ReactNode;\n}\n\nconst DummyRouter = ({ children }: { children: ReactNode }) => <>{children}</>;\n\nconst InternalRouter = ({\n    children,\n    history,\n}: {\n    history?: History;\n} & Omit<HistoryRouterProps, 'history'>) => {\n    const finalHistory = useMemo(() => history || createHashHistory(), [\n        history,\n    ]);\n\n    return <HistoryRouter history={finalHistory}>{children}</HistoryRouter>;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroupContextProvider } from 'ra-core';\nimport { Stack } from '@mui/material';\nimport { FormTabHeader } from './FormTabHeader';\nexport var FormTab = function (props) {\n  var children = props.children,\n    className = props.className,\n    contentClassName = props.contentClassName,\n    count = props.count,\n    hidden = props.hidden,\n    icon = props.icon,\n    intent = props.intent,\n    label = props.label,\n    onChange = props.onChange,\n    path = props.path,\n    resource = props.resource,\n    syncWithLocation = props.syncWithLocation,\n    value = props.value,\n    rest = __rest(props, [\"children\", \"className\", \"contentClassName\", \"count\", \"hidden\", \"icon\", \"intent\", \"label\", \"onChange\", \"path\", \"resource\", \"syncWithLocation\", \"value\"]);\n  var renderHeader = function () {\n    return React.createElement(FormTabHeader, __assign({\n      label: label,\n      count: count,\n      value: value,\n      icon: icon,\n      className: className,\n      syncWithLocation: syncWithLocation,\n      onChange: onChange\n    }, sanitizeRestProps(rest)));\n  };\n  var renderContent = function () {\n    return React.createElement(FormGroupContextProvider, {\n      name: value.toString()\n    }, React.createElement(Stack, __assign({\n      alignItems: \"flex-start\",\n      style: hidden ? hiddenStyle : null,\n      className: contentClassName,\n      id: \"tabpanel-\".concat(value),\n      \"aria-labelledby\": \"tabheader-\".concat(value),\n      \"aria-hidden\": hidden || undefined\n    }, rest), children));\n  };\n  return intent === 'header' ? renderHeader() : renderContent();\n};\nFormTab.propTypes = {\n  className: PropTypes.string,\n  contentClassName: PropTypes.string,\n  children: PropTypes.node,\n  count: PropTypes.node,\n  intent: PropTypes.oneOf(['header', 'content']),\n  hidden: PropTypes.bool,\n  icon: PropTypes.element,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  path: PropTypes.string,\n  // @ts-ignore\n  resource: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nFormTab.displayName = 'FormTab';\nvar hiddenStyle = {\n  display: 'none'\n};\nvar sanitizeRestProps = function (_a) {\n  var classes = _a.classes,\n    ref = _a.ref,\n    margin = _a.margin,\n    rest = __rest(_a, [\"classes\", \"ref\", \"margin\"]);\n  return rest;\n};","map":{"version":3,"mappings":"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","names":["React","PropTypes","FormGroupContextProvider","Stack","FormTabHeader","FormTab","props","className","contentClassName","count","hidden","icon","intent","label","onChange","path","resource","syncWithLocation","value","rest","renderHeader","sanitizeRestProps","renderContent","name","toString","alignItems","style","hiddenStyle","id","undefined","children","propTypes","string","node","oneOf","bool","element","oneOfType","isRequired","number","displayName","display","_a","ref","margin"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/ra-ui-materialui/src/form/FormTab.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroupContextProvider } from 'ra-core';\nimport { Stack, StackProps, TabProps as MuiTabProps } from '@mui/material';\n\nimport { FormTabHeader } from './FormTabHeader';\n\nexport const FormTab = (props: FormTabProps) => {\n    const {\n        children,\n        className,\n        contentClassName,\n        count,\n        hidden,\n        icon,\n        intent,\n        label,\n        onChange,\n        path,\n        resource,\n        syncWithLocation,\n        value,\n        ...rest\n    } = props;\n\n    const renderHeader = () => (\n        <FormTabHeader\n            label={label}\n            count={count}\n            value={value}\n            icon={icon}\n            className={className}\n            syncWithLocation={syncWithLocation}\n            onChange={onChange}\n            {...sanitizeRestProps(rest)}\n        />\n    );\n\n    const renderContent = () => (\n        <FormGroupContextProvider name={value.toString()}>\n            <Stack\n                alignItems=\"flex-start\"\n                style={hidden ? hiddenStyle : null}\n                className={contentClassName}\n                id={`tabpanel-${value}`}\n                aria-labelledby={`tabheader-${value}`}\n                // Set undefined instead of false because WAI-ARIA Authoring Practices 1.1\n                // notes that aria-hidden=\"false\" currently behaves inconsistently across browsers.\n                aria-hidden={hidden || undefined}\n                {...rest}\n            >\n                {children}\n            </Stack>\n        </FormGroupContextProvider>\n    );\n\n    return intent === 'header' ? renderHeader() : renderContent();\n};\n\nFormTab.propTypes = {\n    className: PropTypes.string,\n    contentClassName: PropTypes.string,\n    children: PropTypes.node,\n    count: PropTypes.node,\n    intent: PropTypes.oneOf(['header', 'content']),\n    hidden: PropTypes.bool,\n    icon: PropTypes.element,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n        .isRequired,\n    path: PropTypes.string,\n    // @ts-ignore\n    resource: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport interface FormTabProps\n    extends Omit<StackProps, 'color'>,\n        Omit<MuiTabProps, 'children' | 'classes' | 'ref'> {\n    className?: string;\n    children?: ReactNode;\n    contentClassName?: string;\n    count?: ReactNode;\n    hidden?: boolean;\n    icon?: ReactElement;\n    intent?: 'header' | 'content';\n    label: string | ReactElement;\n    path?: string;\n    resource?: string;\n    syncWithLocation?: boolean;\n    value?: string | number;\n}\n\nFormTab.displayName = 'FormTab';\n\nconst hiddenStyle = { display: 'none' };\n\nconst sanitizeRestProps = ({\n    classes,\n    ref,\n    margin,\n    ...rest\n}: Omit<\n    FormTabProps,\n    | 'className'\n    | 'contentClassName'\n    | 'children'\n    | 'hidden'\n    | 'icon'\n    | 'intent'\n    | 'label'\n    | 'onChange'\n    | 'path'\n    | 'resource'\n    | 'syncWithLocation'\n    | 'value'\n>) => rest;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
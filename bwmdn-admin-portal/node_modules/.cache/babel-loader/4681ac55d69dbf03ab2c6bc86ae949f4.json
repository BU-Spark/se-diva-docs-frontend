{"ast":null,"code":"import { defaultDataProvider } from './defaultDataProvider';\n/**\n * Combine multiple data providers into one.\n *\n * @param dataProviderMatcher A function that returns a data provider for a given resource.\n *\n * @example\n * const dataProvider = combineDataProviders(resource => {\n *    switch(resource) {\n *       case 'posts':\n *       case 'comments':\n *          return dataProvider1;\n *       case 'users':\n *          return dataProvider2;\n *       default:\n *         throw new Error('Unknown resource');\n *    }\n * });\n */\nexport var combineDataProviders = function (dataProviderMatcher) {\n  return new Proxy(defaultDataProvider, {\n    get: function (target, name) {\n      return function (resource, params) {\n        if (typeof name === 'symbol' || name === 'then') {\n          return;\n        }\n        return dataProviderMatcher(resource)[name](resource, params);\n      };\n    }\n  });\n};","map":{"version":3,"mappings":"AACA,SAASA,mBAAmB,QAAQ,uBAAuB;AAI3D;;;;;;;;;;;;;;;;;;AAkBA,OAAO,IAAMC,oBAAoB,GAAG,UAChCC,mBAAwC;EAExC,WAAIC,KAAK,CAACH,mBAAmB,EAAE;IAC3BI,GAAG,EAAE,UAACC,MAAM,EAAEC,IAAI;MACd,OAAO,UAACC,QAAQ,EAAEC,MAAM;QACpB,IAAI,OAAOF,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,MAAM,EAAE;UAC7C;;QAEJ,OAAOJ,mBAAmB,CAACK,QAAQ,CAAC,CAACD,IAAI,CAAC,CAACC,QAAQ,EAAEC,MAAM,CAAC;MAChE,CAAC;IACL;GACH,CAAC;AATF,CASE","names":["defaultDataProvider","combineDataProviders","dataProviderMatcher","Proxy","get","target","name","resource","params"],"sourceRoot":"","sources":["../../../src/dataProvider/combineDataProviders.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
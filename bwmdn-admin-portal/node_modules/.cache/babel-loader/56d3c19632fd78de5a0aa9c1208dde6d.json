{"ast":null,"code":"/**\n * Helper function for calling the dataProvider.getMany() method,\n * and getting a Promise for the records indexed by id in return.\n *\n * @example\n *     fetchRelatedRecords(dataProvider)(records, 'post_id', 'posts').then(posts =>\n *         posts.map(record => ({\n *             ...record,\n *             post_title: posts[record.post_id].title,\n *         }))\n *     );\n */\nvar fetchRelatedRecords = function (dataProvider) {\n  return function (data, field, resource) {\n    return dataProvider.getMany(resource, {\n      ids: getRelatedIds(data, field)\n    }).then(function (_a) {\n      var data = _a.data;\n      return data.reduce(function (acc, post) {\n        acc[post.id] = post;\n        return acc;\n      }, {});\n    });\n  };\n};\n/**\n * Extracts, aggregates and deduplicates the ids of related records\n *\n * @example\n *     const books = [\n *         { id: 1, author_id: 123, title: 'Pride and Prejudice' },\n *         { id: 2, author_id: 123, title: 'Sense and Sensibility' },\n *         { id: 3, author_id: 456, title: 'War and Peace' },\n *     ];\n *     getRelatedIds(books, 'author_id'); => [123, 456]\n *\n * @example\n *     const books = [\n *         { id: 1, tag_ids: [1, 2], title: 'Pride and Prejudice' },\n *         { id: 2, tag_ids: [2, 3], title: 'Sense and Sensibility' },\n *         { id: 3, tag_ids: [4], title: 'War and Peace' },\n *     ];\n *     getRelatedIds(records, 'tag_ids'); => [1, 2, 3, 4]\n *\n * @param {Object[]} records An array of records\n * @param {string} field the identifier of the record field to use\n */\nexport var getRelatedIds = function (records, field) {\n  return Array.from(new Set(records.filter(function (record) {\n    return record[field] != null;\n  }).map(function (record) {\n    return record[field];\n  }).reduce(function (ids, value) {\n    return ids.concat(value);\n  }, [])));\n};\nexport default fetchRelatedRecords;","map":{"version":3,"mappings":"AAEA;;;;;;;;;;;;AAYA,IAAMA,mBAAmB,GAAG,UAACC,YAA0B;EAAK,iBACxDC,IAAI,EACJC,KAAK,EACLC,QAAQ;IAER,mBAAY,CACPC,OAAO,CAACD,QAAQ,EAAE;MAAEE,GAAG,EAAEC,aAAa,CAACL,IAAI,EAAEC,KAAK;IAAC,CAAE,CAAC,CACtDK,IAAI,CAAC,UAACC,EAAQ;UAANP,IAAI;MACT,WAAI,CAACQ,MAAM,CAAC,UAACC,GAAG,EAAEC,IAAI;QAClBD,GAAG,CAACC,IAAI,CAACC,EAAE,CAAC,GAAGD,IAAI;QACnB,OAAOD,GAAG;MACd,CAAC,EAAE,EAAE,CAAC;IAHN,CAGM,CACT;EAPL,CAOK;AAZmD,CAYnD;AAET;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAO,IAAMJ,aAAa,GAAG,UACzBO,OAAmB,EACnBX,KAAa;EAEb,YAAK,CAACY,IAAI,CACN,IAAIC,GAAG,CACHF,OAAO,CACFG,MAAM,CAAC,gBAAM;IAAI,aAAM,CAACd,KAAK,CAAC,IAAI,IAAI;EAArB,CAAqB,CAAC,CACvCe,GAAG,CAAC,gBAAM;IAAI,aAAM,CAACf,KAAK,CAAC;EAAb,CAAa,CAAC,CAC5BO,MAAM,CAAC,UAACJ,GAAG,EAAEa,KAAK;IAAK,UAAG,CAACC,MAAM,CAACD,KAAK,CAAC;EAAjB,CAAiB,EAAE,EAAE,CAAC,CACrD,CACJ;AAPD,CAOC;AAEL,eAAenB,mBAAmB","names":["fetchRelatedRecords","dataProvider","data","field","resource","getMany","ids","getRelatedIds","then","_a","reduce","acc","post","id","records","from","Set","filter","map","value","concat"],"sourceRoot":"","sources":["../../../src/export/fetchRelatedRecords.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
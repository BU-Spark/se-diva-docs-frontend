{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRecordContext, useSaveContext } from 'ra-core';\nimport { DeleteWithUndoButton } from './DeleteWithUndoButton';\nimport { DeleteWithConfirmButton } from './DeleteWithConfirmButton';\n/**\n * Button used to delete a single record. Added by default by the <Toolbar> of edit and show views.\n *\n * @typedef {Object} Props The props you can use (other props are injected if you used it in the <Toolbar>)\n * @prop {boolean} mutationMode Either 'pessimistic', 'optimistic' or 'undoable'. Determine whether the deletion uses an undo button in a notification or a confirmation dialog. Defaults to 'undoable'.\n * @prop {Object} record The current resource record\n * @prop {string} className\n * @prop {string} label Button label. Defaults to 'ra.action.delete, translated.\n * @prop {boolean} disabled Disable the button.\n * @prop {string} variant MUI variant for the button. Defaults to 'contained'.\n * @prop {ReactElement} icon Override the icon. Defaults to the Delete icon from MUI.\n *\n * @param {Props} props\n *\n * @example Usage in the <TopToolbar> of an <Edit> form\n *\n * import * as React from 'react';\n * import { Edit, DeleteButton, TopToolbar } from 'react-admin';\n *\n * const EditActions = props => {\n *     const { data, resource } = props;\n *     return (\n *         <TopToolbar>\n *             <DeleteButton\n *                 mutationMode=\"pessimistic\" // Renders the <DeleteWithConfirmButton>\n *             />\n *         </TopToolbar>\n *     );\n * };\n *\n * const Edit = props => {\n *     return <Edit actions={<EditActions />} {...props} />;\n * };\n */\nexport var DeleteButton = function (props) {\n  var mutationMode = props.mutationMode,\n    rest = __rest(props, [\"mutationMode\"]);\n  var record = useRecordContext(props);\n  var saveContext = useSaveContext(props);\n  if (!record || record.id == null) {\n    return null;\n  }\n  var finalMutationMode = mutationMode ? mutationMode : (saveContext === null || saveContext === void 0 ? void 0 : saveContext.mutationMode) ? saveContext.mutationMode : 'undoable';\n  return finalMutationMode === 'undoable' ?\n  // @ts-ignore I looked for the error for one hour without finding it\n  React.createElement(DeleteWithUndoButton, __assign({\n    record: record\n  }, rest)) : React.createElement(DeleteWithConfirmButton, __assign({\n    // @ts-ignore I looked for the error for one hour without finding it\n    mutationMode: finalMutationMode,\n    record: record\n  }, rest));\n};\nDeleteButton.propTypes = {\n  label: PropTypes.string,\n  mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n  record: PropTypes.any,\n  // @ts-ignore\n  redirect: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n  resource: PropTypes.string,\n  icon: PropTypes.element\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,OAAOC,SAAS,MAAM,YAAY;AAElC,SAIIC,gBAAgB,EAChBC,cAAc,QAGX,SAAS;AAGhB,SAASC,oBAAoB,QAAQ,wBAAwB;AAC7D,SAASC,uBAAuB,QAAQ,2BAA2B;AAEnE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAO,IAAMC,YAAY,GAAG,UACxBC,KAAoC;EAE5B,gBAAY,GAAcA,KAAK,aAAnB;IAAKC,IAAI,UAAKD,KAAK,EAAjC,gBAAyB,CAAF;EAC7B,IAAME,MAAM,GAAGP,gBAAgB,CAACK,KAAK,CAAC;EACtC,IAAMG,WAAW,GAAGP,cAAc,CAACI,KAAK,CAAC;EACzC,IAAI,CAACE,MAAM,IAAIA,MAAM,CAACE,EAAE,IAAI,IAAI,EAAE;IAC9B,OAAO,IAAI;;EAGf,IAAMC,iBAAiB,GAAGC,YAAY,GAChCA,YAAY,GACZ,YAAW,aAAXH,WAAW,uBAAXA,WAAW,CAAEG,YAAY,IACzBH,WAAW,CAACG,YAAY,GACxB,UAAU;EAEhB,OAAOD,iBAAiB,KAAK,UAAU;EACnC;EACAZ,oBAACI,oBAAoB;IAAaK,MAAM,EAAEA;EAAM,GAAMD,IAAI,EAAI,GAE9DR,oBAACK,uBAAuB;IACpB;IACAQ,YAAY,EAAED,iBAAiB;IAC/BH,MAAM,EAAEA;EAAM,GACVD,IAAI,EAEf;AACL,CAAC;AAqBDF,YAAY,CAACQ,SAAS,GAAG;EACrBC,KAAK,EAAEd,SAAS,CAACe,MAAM;EACvBH,YAAY,EAAEZ,SAAS,CAACgB,KAAK,CAAC,CAAC,aAAa,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;EACxER,MAAM,EAAER,SAAS,CAACiB,GAAG;EACrB;EACAC,QAAQ,EAAElB,SAAS,CAACmB,SAAS,CAAC,CAC1BnB,SAAS,CAACe,MAAM,EAChBf,SAAS,CAACoB,IAAI,EACdpB,SAAS,CAACqB,IAAI,CACjB,CAAC;EACFC,QAAQ,EAAEtB,SAAS,CAACe,MAAM;EAC1BQ,IAAI,EAAEvB,SAAS,CAACwB;CACnB","names":["React","PropTypes","useRecordContext","useSaveContext","DeleteWithUndoButton","DeleteWithConfirmButton","DeleteButton","props","rest","record","saveContext","id","finalMutationMode","mutationMode","propTypes","label","string","oneOf","any","redirect","oneOfType","bool","func","resource","icon","element"],"sourceRoot":"","sources":["../../../src/button/DeleteButton.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
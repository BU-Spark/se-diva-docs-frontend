{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { Datagrid } from './datagrid';\nimport { SingleFieldList } from './SingleFieldList';\nimport { ArrayField, BooleanField, ChipField, DateField, EmailField, NumberField, ReferenceField, ReferenceArrayField, TextField, UrlField } from '../field';\nexport var listFieldTypes = {\n  table: {\n    component: function (props) {\n      return React.createElement(Datagrid, __assign({\n        rowClick: \"edit\"\n      }, props));\n    },\n    representation: function (_, children) {\n      return \"        <Datagrid rowClick=\\\"edit\\\">\\n\".concat(children.map(function (child) {\n        return \"            \".concat(child.getRepresentation());\n      }).join('\\n'), \"\\n        </Datagrid>\");\n    }\n  },\n  array: {\n    // eslint-disable-next-line react/display-name\n    component: function (_a) {\n      var children = _a.children,\n        props = __rest(_a, [\"children\"]);\n      return React.createElement(ArrayField, __assign({}, props), React.createElement(SingleFieldList, null, React.createElement(ChipField, {\n        source: children.length > 0 && children[0].props.source\n      })));\n    },\n    representation: function (props, children) {\n      return \"<ArrayField source=\\\"\".concat(props.source, \"\\\"><SingleFieldList><ChipField source=\\\"\").concat(children.length > 0 && children[0].getProps().source, \"\\\" /></SingleFieldList></ArrayField>\");\n    }\n  },\n  boolean: {\n    component: BooleanField,\n    representation: function (props) {\n      return \"<BooleanField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  },\n  date: {\n    component: DateField,\n    representation: function (props) {\n      return \"<DateField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  },\n  email: {\n    component: EmailField,\n    representation: function (props) {\n      return \"<EmailField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  },\n  id: {\n    component: TextField,\n    representation: function (props) {\n      return \"<TextField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  },\n  number: {\n    component: NumberField,\n    representation: function (props) {\n      return \"<NumberField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  },\n  reference: {\n    component: ReferenceField,\n    representation: function (props) {\n      return \"<ReferenceField source=\\\"\".concat(props.source, \"\\\" reference=\\\"\").concat(props.reference, \"\\\" />\");\n    }\n  },\n  referenceChild: {\n    component: function () {\n      return React.createElement(TextField, {\n        source: \"id\"\n      });\n    },\n    representation: function () {\n      return \"<TextField source=\\\"id\\\" />\";\n    }\n  },\n  referenceArray: {\n    component: ReferenceArrayField,\n    representation: function (props) {\n      return \"<ReferenceArrayField source=\\\"\".concat(props.source, \"\\\" reference=\\\"\").concat(props.reference, \"\\\" />\");\n    }\n  },\n  referenceArrayChild: {\n    component: function () {\n      return React.createElement(SingleFieldList, null, React.createElement(ChipField, {\n        source: \"id\"\n      }));\n    },\n    representation: function () {\n      return \"<SingleFieldList><ChipField source=\\\"id\\\" /></SingleFieldList>\";\n    }\n  },\n  richText: undefined,\n  string: {\n    component: TextField,\n    representation: function (props) {\n      return \"<TextField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  },\n  url: {\n    component: UrlField,\n    representation: function (props) {\n      return \"<UrlField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["React","Datagrid","SingleFieldList","ArrayField","BooleanField","ChipField","DateField","EmailField","NumberField","ReferenceField","ReferenceArrayField","TextField","UrlField","listFieldTypes","table","component","rowClick","props","representation","_","children","map","child","getRepresentation","join","array","_a","source","length","getProps","boolean","date","email","id","number","reference","referenceChild","referenceArray","referenceArrayChild","richText","undefined","string","url"],"sourceRoot":"","sources":["../../../src/list/listFieldTypes.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import * as React from 'react';\nimport lodashGet from 'lodash/get';\nimport { I18nContextProvider } from './I18nContextProvider';\nexport var TestTranslationProvider = function (_a) {\n  var translate = _a.translate,\n    messages = _a.messages,\n    children = _a.children;\n  return React.createElement(I18nContextProvider, {\n    value: {\n      translate: messages ? function (key, options) {\n        var message = lodashGet(messages, key);\n        return message ? typeof message === 'function' ? message(options) : message : options._;\n      } : translate,\n      changeLocale: function () {\n        return Promise.resolve();\n      },\n      getLocale: function () {\n        return 'en';\n      }\n    }\n  }, children);\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,mBAAmB,QAAQ,uBAAuB;AAE3D,OAAO,IAAMC,uBAAuB,GAAG,UAACC,EAIlC;MAHFC,SAAS;IACTC,QAAQ;IACRC,QAAQ;EACD,OACPP,oBAACE,mBAAmB;IAChBM,KAAK,EAAE;MACHH,SAAS,EAAEC,QAAQ,GACb,UAACG,GAAW,EAAEC,OAAa;QACvB,IAAMC,OAAO,GAAGV,SAAS,CAACK,QAAQ,EAAEG,GAAG,CAAC;QACxC,OAAOE,OAAO,GACR,OAAOA,OAAO,KAAK,UAAU,GACzBA,OAAO,CAACD,OAAO,CAAC,GAChBC,OAAO,GACXD,OAAO,CAACE,CAAC;MACnB,CAAC,GACDP,SAAS;MACfQ,YAAY,EAAE;QAAM,cAAO,CAACC,OAAO,EAAE;MAAjB,CAAiB;MACrCC,SAAS,EAAE;QAAM,WAAI;MAAJ;;EACpB,GAEAR,QAAQ,CACS;AAlBf,CAmBV","names":["React","lodashGet","I18nContextProvider","TestTranslationProvider","_a","translate","messages","children","value","key","options","message","_","changeLocale","resolve","getLocale"],"sources":["/Users/paigedeveau/node_modules/ra-core/src/i18n/TestTranslationProvider.tsx"],"sourcesContent":["import * as React from 'react';\nimport lodashGet from 'lodash/get';\n\nimport { I18nContextProvider } from './I18nContextProvider';\n\nexport const TestTranslationProvider = ({\n    translate,\n    messages,\n    children,\n}: any) => (\n    <I18nContextProvider\n        value={{\n            translate: messages\n                ? (key: string, options?: any) => {\n                      const message = lodashGet(messages, key);\n                      return message\n                          ? typeof message === 'function'\n                              ? message(options)\n                              : message\n                          : options._;\n                  }\n                : translate,\n            changeLocale: () => Promise.resolve(),\n            getLocale: () => 'en',\n        }}\n    >\n        {children}\n    </I18nContextProvider>\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { useMemo } from 'react';\nimport { useI18nProvider } from './useI18nProvider';\nimport { useStore } from '../store/useStore';\n/**\n * Get the current locale and the ability to change it\n *\n * @example\n *\n * import { useLocaleState } from 'react-admin';\n *\n * const availableLanguages = {\n *     en: 'English',\n *     fr: 'FranÃ§ais',\n * }\n * const LocaleSwitcher = () => {\n *     const [locale, setLocale] = useLocaleState();\n *     return (\n *         <div>\n *             <div>Language</div>\n *             <Button disabled={locale === 'fr'} onClick={() => setLocale('fr')}>\n *                 English\n *             </Button>\n *             <Button disabled={locale === 'en'} onClick={() => setLocale('en')}>\n *                 French\n *             </Button>\n *         </div>\n *     );\n * };\n */\nexport var useLocaleState = function () {\n  var i18nProvider = useI18nProvider();\n  var defaultLocale = useMemo(function () {\n    return i18nProvider.getLocale();\n  }, [i18nProvider]);\n  return useStore('locale', defaultLocale);\n};","map":{"version":3,"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,QAAQ,QAAQ,mBAAmB;AAE5C;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAO,IAAMC,cAAc,GAAG;EAC1B,IAAMC,YAAY,GAAGH,eAAe,EAAE;EACtC,IAAMI,aAAa,GAAGL,OAAO,CAAC;IAAM,mBAAY,CAACM,SAAS,EAAE;EAAxB,CAAwB,EAAE,CAC1DF,YAAY,CACf,CAAC;EACF,OAAOF,QAAQ,CAAS,QAAQ,EAAEG,aAAa,CAAC;AACpD,CAAC","names":["useMemo","useI18nProvider","useStore","useLocaleState","i18nProvider","defaultLocale","getLocale"],"sourceRoot":"","sources":["../../../src/i18n/useLocaleState.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
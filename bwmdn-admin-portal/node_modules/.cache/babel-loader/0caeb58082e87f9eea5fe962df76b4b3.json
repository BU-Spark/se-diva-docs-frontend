{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { Toolbar as MuiToolbar, useMediaQuery } from '@mui/material';\nimport clsx from 'clsx';\nimport { SaveButton, DeleteButton } from '../button';\n/**\n * The Toolbar displayed at the bottom of forms.\n *\n * @example Always enable the <SaveButton />\n *\n * import * as React from 'react';\n * import {\n *     Create,\n *     DateInput,\n *     TextInput,\n *     SimpleForm,\n *     Toolbar,\n *     SaveButton,\n *     required,\n * } from 'react-admin';\n *\n * const now = new Date();\n * const defaultSort = { field: 'title', order: 'ASC' };\n *\n * const MyToolbar = props => (\n *     <Toolbar {...props} >\n *         <SaveButton alwaysEnable />\n *     </Toolbar>\n * );\n *\n * const CommentCreate = () => (\n *     <Create>\n *         <SimpleForm redirect={false} toolbar={<MyToolbar />}>\n *             <TextInput\n *                 source=\"author.name\"\n *                 fullWidth\n *             />\n *             <DateInput source=\"created_at\" defaultValue={now} />\n *             <TextInput source=\"body\" fullWidth={true} multiline={true} />\n *         </SimpleForm>\n *     </Create>\n * );\n *\n * @typedef {Object} Props the props you can use (other props are injected by the <SimpleForm>)\n * @prop {ReactElement[]} children Customize the buttons you want to display in the <Toolbar>.\n *\n */\nexport var Toolbar = function (props) {\n  var _a;\n  var children = props.children,\n    className = props.className,\n    resource = props.resource,\n    rest = __rest(props, [\"children\", \"className\", \"resource\"]);\n  var isXs = useMediaQuery(function (theme) {\n    return theme.breakpoints.down('sm');\n  });\n  return React.createElement(StyledToolbar, __assign({\n    className: clsx((_a = {}, _a[ToolbarClasses.mobileToolbar] = isXs, _a[ToolbarClasses.desktopToolbar] = !isXs, _a), className),\n    role: \"toolbar\"\n  }, rest), Children.count(children) === 0 ? React.createElement(\"div\", {\n    className: ToolbarClasses.defaultToolbar\n  }, React.createElement(SaveButton, null), React.createElement(DeleteButton, {\n    resource: resource\n  })) : children);\n};\nToolbar.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  resource: PropTypes.string\n};\nvar PREFIX = 'RaToolbar';\nexport var ToolbarClasses = {\n  desktopToolbar: \"\".concat(PREFIX, \"-desktopToolbar\"),\n  mobileToolbar: \"\".concat(PREFIX, \"-mobileToolbar\"),\n  defaultToolbar: \"\".concat(PREFIX, \"-defaultToolbar\")\n};\nvar StyledToolbar = styled(MuiToolbar, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {\n    backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[900]\n  }, _b[\"&.\".concat(ToolbarClasses.desktopToolbar)] = {}, _b[\"&.\".concat(ToolbarClasses.mobileToolbar)] = {\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: '16px',\n    width: '100%',\n    boxSizing: 'border-box',\n    flexShrink: 0,\n    zIndex: 2\n  }, _b[\"& .\".concat(ToolbarClasses.defaultToolbar)] = {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'space-between'\n  }, _b;\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,QAAQ,QAAmB,OAAO;AAC3C,OAAOC,SAAS,MAAM,YAAY;AAClC,SACIC,OAAO,IAAIC,UAAU,EAErBC,aAAa,QAEV,eAAe;AACtB,OAAOC,IAAI,MAAM,MAAM;AAEvB,SAASC,UAAU,EAAEC,YAAY,QAAQ,WAAW;AAEpD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,OAAO,IAAML,OAAO,GAAG,UAACM,KAAmB;;EAC/B,YAAQ,GAAmCA,KAAK,SAAxC;IAAEC,SAAS,GAAwBD,KAAK,UAA7B;IAAEE,QAAQ,GAAcF,KAAK,SAAnB;IAAKG,IAAI,UAAKH,KAAK,EAAlD,qCAA0C,CAAF;EAE9C,IAAMI,IAAI,GAAGR,aAAa,CAAQ,eAAK;IAAI,YAAK,CAACS,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAA5B,CAA4B,CAAC;EAExE,OACIhB,oBAACiB,aAAa;IACVN,SAAS,EAAEJ,IAAI,WAEPW,GAACC,cAAc,CAACC,aAAa,IAAGN,IAAI,EACpCI,GAACC,cAAc,CAACE,cAAc,IAAG,CAACP,IAAI,OAE1CH,SAAS,CACZ;IACDW,IAAI,EAAC;EAAS,GACVT,IAAI,GAEPX,QAAQ,CAACqB,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC,GAC3BxB;IAAKW,SAAS,EAAEQ,cAAc,CAACM;EAAc,GACzCzB,oBAACQ,UAAU,OAAG,EACdR,oBAACS,YAAY;IAACG,QAAQ,EAAEA;EAAQ,EAAI,CAClC,GAENY,QACH,CACW;AAExB,CAAC;AAQDpB,OAAO,CAACsB,SAAS,GAAG;EAChBF,QAAQ,EAAErB,SAAS,CAACwB,IAAI;EACxBhB,SAAS,EAAER,SAAS,CAACyB,MAAM;EAE3BhB,QAAQ,EAAET,SAAS,CAACyB;CACvB;AAED,IAAMC,MAAM,GAAG,WAAW;AAE1B,OAAO,IAAMV,cAAc,GAAG;EAC1BE,cAAc,EAAE,UAAGQ,MAAM,oBAAiB;EAC1CT,aAAa,EAAE,UAAGS,MAAM,mBAAgB;EACxCJ,cAAc,EAAE,UAAGI,MAAM;CAC5B;AAED,IAAMZ,aAAa,GAAGhB,MAAM,CAACI,UAAU,EAAE;EACrCyB,IAAI,EAAED,MAAM;EACZE,iBAAiB,EAAE,UAACrB,KAAK,EAAEsB,MAAM;IAAK,aAAM,CAACC,IAAI;EAAX;CACzC,CAAC,CAAC,UAACf,EAAS;;MAAPgB,KAAK;EAAO;IACdC,eAAe,EACXD,KAAK,CAACE,OAAO,CAACC,IAAI,KAAK,OAAO,GACxBH,KAAK,CAACE,OAAO,CAACE,IAAI,CAAC,GAAG,CAAC,GACvBJ,KAAK,CAACE,OAAO,CAACE,IAAI,CAAC,GAAG;KAEhCC,GAAC,YAAKpB,cAAc,CAACE,cAAc,CAAE,IAAG,EAAE,EAE1CkB,GAAC,YAAKpB,cAAc,CAACC,aAAa,CAAE,IAAG;IACnCoB,QAAQ,EAAE,OAAO;IACjBC,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,OAAO,EAAE,MAAM;IACfC,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE,YAAY;IACvBC,UAAU,EAAE,CAAC;IACbC,MAAM,EAAE;GACX,EAEDT,GAAC,aAAMpB,cAAc,CAACM,cAAc,CAAE,IAAG;IACrCwB,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE;GACnB;AAxBa,CAyBhB,CAAC","names":["React","styled","Children","PropTypes","Toolbar","MuiToolbar","useMediaQuery","clsx","SaveButton","DeleteButton","props","className","resource","rest","isXs","breakpoints","down","StyledToolbar","_a","ToolbarClasses","mobileToolbar","desktopToolbar","role","count","children","defaultToolbar","propTypes","node","string","PREFIX","name","overridesResolver","styles","root","theme","backgroundColor","palette","mode","grey","_b","position","bottom","left","right","padding","width","boxSizing","flexShrink","zIndex","flex","display","justifyContent"],"sourceRoot":"","sources":["../../../src/form/Toolbar.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
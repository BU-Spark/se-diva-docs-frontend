{"ast":null,"code":"import * as React from 'react';\nimport { useCallback } from 'react';\n// allow the hook to work in SSR\nvar useLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n/**\n * Alternative to useCallback that doesn't update the callback when dependencies change\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback\n * @see https://github.com/facebook/react/issues/14099#issuecomment-440013892\n */\nexport var useEvent = function (fn) {\n  var ref = React.useRef(function () {\n    throw new Error('Cannot call an event handler while rendering.');\n  });\n  useLayoutEffect(function () {\n    ref.current = fn;\n  });\n  return useCallback(function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    return ref.current.apply(ref, args);\n  }, []);\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,WAAW,QAAQ,OAAO;AAEnC;AACA,IAAMC,eAAe,GACjB,OAAOC,MAAM,KAAK,WAAW,GAAGH,KAAK,CAACE,eAAe,GAAGF,KAAK,CAACI,SAAS;AAE3E;;;;;;AAMA,OAAO,IAAMC,QAAQ,GAAG,UACpBC,EAA6B;EAE7B,IAAMC,GAAG,GAAGP,KAAK,CAACQ,MAAM,CAA4B;IAChD,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;EACpE,CAAC,CAAC;EAEFP,eAAe,CAAC;IACZK,GAAG,CAACG,OAAO,GAAGJ,EAAE;EACpB,CAAC,CAAC;EAEF,OAAOL,WAAW,CAAC;IAAC;SAAA,UAAa,EAAbU,qBAAa,EAAbA,IAAa;MAAbC;;IAAkB,UAAG,CAACF,OAAO,OAAXH,GAAG,EAAYK,IAAI;EAAnB,CAAoB,EAAE,EAAE,CAAC;AACnE,CAAC","names":["React","useCallback","useLayoutEffect","window","useEffect","useEvent","fn","ref","useRef","Error","current","_i","args"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/ra-core/src/util/useEvent.ts"],"sourcesContent":["import * as React from 'react';\nimport { useCallback } from 'react';\n\n// allow the hook to work in SSR\nconst useLayoutEffect =\n    typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\n/**\n * Alternative to useCallback that doesn't update the callback when dependencies change\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback\n * @see https://github.com/facebook/react/issues/14099#issuecomment-440013892\n */\nexport const useEvent = <Args extends unknown[], Return>(\n    fn: (...args: Args) => Return\n): ((...args: Args) => Return) => {\n    const ref = React.useRef<(...args: Args) => Return>(() => {\n        throw new Error('Cannot call an event handler while rendering.');\n    });\n\n    useLayoutEffect(() => {\n        ref.current = fn;\n    });\n\n    return useCallback((...args: Args) => ref.current(...args), []);\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
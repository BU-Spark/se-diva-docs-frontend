{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport useAuthState from './useAuthState';\n/**\n * Restrict access to authenticated users.\n * Redirect anonymous users to the login page.\n *\n * Use it in your custom page components to require\n * authentication.\n *\n * You can set additional `authParams` at will if your authProvider\n * requires it.\n *\n * @example\n *     import { Admin, CustomRoutes, useAuthenticated } from 'react-admin';\n *     const FooPage = () => {\n *         useAuthenticated();\n *         return <Foo />;\n *     }\n *     const customRoutes = [\n *         <Route path=\"/foo\" element={<FooPage />} />\n *     ];\n *     const App = () => (\n *         <Admin>\n *             <CustomRoutes>{customRoutes}</CustomRoutes>\n *         </Admin>\n *     );\n */\nexport var useAuthenticated = function (_a) {\n  if (_a === void 0) {\n    _a = {};\n  }\n  var params = _a.params,\n    options = __rest(_a, [\"params\"]);\n  useAuthState(params !== null && params !== void 0 ? params : emptyParams, true, options);\n};\nvar emptyParams = {};","map":{"version":3,"mappings":";;;;;;;;AACA,OAAOA,YAAY,MAAM,gBAAgB;AAEzC;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAO,IAAMC,gBAAgB,GAAG,UAAmBC,EAGR;EAHQ;IAAAA,OAGR;EAAA;EAFvC,UAAM;IACHC,OAAO,cAFqC,UAGlD,CADa;EAEVH,YAAY,CAACI,MAAM,aAANA,MAAM,cAANA,MAAM,GAAIC,WAAW,EAAE,IAAI,EAAEF,OAAO,CAAC;AACtD,CAAC;AASD,IAAME,WAAW,GAAG,EAAE","names":["useAuthState","useAuthenticated","_a","options","params","emptyParams"],"sources":["/Users/paigedeveau/node_modules/ra-core/src/auth/useAuthenticated.ts"],"sourcesContent":["import { UseQueryOptions } from 'react-query';\nimport useAuthState from './useAuthState';\n\n/**\n * Restrict access to authenticated users.\n * Redirect anonymous users to the login page.\n *\n * Use it in your custom page components to require\n * authentication.\n *\n * You can set additional `authParams` at will if your authProvider\n * requires it.\n *\n * @example\n *     import { Admin, CustomRoutes, useAuthenticated } from 'react-admin';\n *     const FooPage = () => {\n *         useAuthenticated();\n *         return <Foo />;\n *     }\n *     const customRoutes = [\n *         <Route path=\"/foo\" element={<FooPage />} />\n *     ];\n *     const App = () => (\n *         <Admin>\n *             <CustomRoutes>{customRoutes}</CustomRoutes>\n *         </Admin>\n *     );\n */\nexport const useAuthenticated = <ParamsType = any>({\n    params,\n    ...options\n}: UseAuthenticatedOptions<ParamsType> = {}) => {\n    useAuthState(params ?? emptyParams, true, options);\n};\n\nexport type UseAuthenticatedOptions<ParamsType> = UseQueryOptions<\n    boolean,\n    any\n> & {\n    params?: ParamsType;\n};\n\nconst emptyParams = {};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
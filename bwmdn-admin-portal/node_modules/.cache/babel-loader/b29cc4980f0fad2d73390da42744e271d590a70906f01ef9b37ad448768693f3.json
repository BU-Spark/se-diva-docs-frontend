{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { memo } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Pagination } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { useTranslate } from 'ra-core';\nexport var PaginationActions = memo(function (props) {\n  var page = props.page,\n    rowsPerPage = props.rowsPerPage,\n    count = props.count,\n    onPageChange = props.onPageChange,\n    _a = props.size,\n    size = _a === void 0 ? 'small' : _a,\n    className = props.className,\n    rest = __rest(props, [\"page\", \"rowsPerPage\", \"count\", \"onPageChange\", \"size\", \"className\"]);\n  var translate = useTranslate();\n  var nbPages = Math.ceil(count / rowsPerPage) || 1;\n  if (nbPages === 1) {\n    return React.createElement(Root, {\n      className: className\n    });\n  }\n  var getItemAriaLabel = function (type, page, selected) {\n    if (type === 'page') {\n      return selected ? translate('ra.navigation.current_page', {\n        page: page,\n        _: \"page \".concat(page)\n      }) : translate('ra.navigation.page', {\n        page: page,\n        _: \"Go to page \".concat(page)\n      });\n    }\n    return translate(\"ra.navigation.\".concat(type), {\n      _: \"Go to \".concat(type, \" page\")\n    });\n  };\n  return React.createElement(Root, {\n    className: className\n  }, React.createElement(Pagination, __assign({\n    size: size,\n    count: nbPages,\n    // <TablePagination>, the parent, uses 0-based pagination\n    // while <Pagination> uses 1-based pagination\n    page: page + 1,\n    onChange: function (e, page) {\n      return onPageChange(e, page - 1);\n    }\n  }, sanitizeRestProps(rest), {\n    getItemAriaLabel: getItemAriaLabel\n  })));\n});\n/**\n * PaginationActions propTypes are copied over from MUI’s\n * TablePaginationActions propTypes. See\n * https://github.com/mui-org/material-ui/blob/869692ecf3812bc4577ed4dde81a9911c5949695/packages/material-ui/src/TablePaginationActions/TablePaginationActions.js#L53-L85\n * for reference.\n */\nPaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  color: PropTypes.oneOf(['primary', 'secondary', 'standard']),\n  size: PropTypes.oneOf(['small', 'medium', 'large'])\n};\nvar PREFIX = 'RaPaginationActions';\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var theme = _a.theme;\n  return {\n    flexShrink: 0,\n    ml: 4\n  };\n});\nvar sanitizeRestProps = function (_a) {\n  var nextIconButtonProps = _a.nextIconButtonProps,\n    backIconButtonProps = _a.backIconButtonProps,\n    rest = __rest(_a, [\"nextIconButtonProps\", \"backIconButtonProps\"]);\n  return rest;\n};","map":{"version":3,"mappings":"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","names":["React","memo","styled","Pagination","PropTypes","useTranslate","PaginationActions","props","rowsPerPage","count","onPageChange","_a","size","className","rest","translate","nbPages","Math","ceil","Root","getItemAriaLabel","type","page","selected","_","onChange","e","sanitizeRestProps","propTypes","number","isRequired","func","color","oneOf","PREFIX","name","overridesResolver","styles","root","theme","flexShrink","ml","backIconButtonProps"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/ra-ui-materialui/src/list/pagination/PaginationActions.tsx"],"sourcesContent":["import * as React from 'react';\nimport { memo, FC } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Pagination, PaginationProps } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { useTranslate } from 'ra-core';\n\nexport const PaginationActions: FC<PaginationActionsProps> = memo(props => {\n    const {\n        page,\n        rowsPerPage,\n        count,\n        onPageChange,\n        size = 'small',\n        className,\n        ...rest\n    } = props;\n    const translate = useTranslate();\n\n    const nbPages = Math.ceil(count / rowsPerPage) || 1;\n\n    if (nbPages === 1) {\n        return <Root className={className} />;\n    }\n\n    const getItemAriaLabel = (\n        type: 'page' | 'first' | 'last' | 'next' | 'previous',\n        page: number,\n        selected: boolean\n    ) => {\n        if (type === 'page') {\n            return selected\n                ? translate('ra.navigation.current_page', {\n                      page,\n                      _: `page ${page}`,\n                  })\n                : translate('ra.navigation.page', {\n                      page,\n                      _: `Go to page ${page}`,\n                  });\n        }\n        return translate(`ra.navigation.${type}`, { _: `Go to ${type} page` });\n    };\n\n    return (\n        <Root className={className}>\n            <Pagination\n                size={size}\n                count={nbPages}\n                // <TablePagination>, the parent, uses 0-based pagination\n                // while <Pagination> uses 1-based pagination\n                page={page + 1}\n                onChange={(e: any, page) => onPageChange(e, page - 1)}\n                {...sanitizeRestProps(rest)}\n                getItemAriaLabel={getItemAriaLabel}\n            />\n        </Root>\n    );\n});\n\nexport interface PaginationActionsProps extends PaginationProps {\n    page: number;\n    rowsPerPage: number;\n    count: number;\n    onPageChange: (event: MouseEvent, page: number) => void;\n}\n/**\n * PaginationActions propTypes are copied over from MUI’s\n * TablePaginationActions propTypes. See\n * https://github.com/mui-org/material-ui/blob/869692ecf3812bc4577ed4dde81a9911c5949695/packages/material-ui/src/TablePaginationActions/TablePaginationActions.js#L53-L85\n * for reference.\n */\nPaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n    color: PropTypes.oneOf(['primary', 'secondary', 'standard']),\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n};\n\nconst PREFIX = 'RaPaginationActions';\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    flexShrink: 0,\n    ml: 4,\n}));\n\nconst sanitizeRestProps = ({\n    nextIconButtonProps,\n    backIconButtonProps,\n    ...rest\n}: any) => rest;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
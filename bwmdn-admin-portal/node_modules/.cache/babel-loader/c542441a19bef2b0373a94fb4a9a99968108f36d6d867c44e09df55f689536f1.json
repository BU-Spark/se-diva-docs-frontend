{"ast":null,"code":"import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Button } from './Button';\nimport { useTranslate } from 'ra-core';\nexport var SkipNavigationButton = function () {\n  var translate = useTranslate();\n  return React.createElement(StyledButton, {\n    onClick: skipToContent,\n    className: 'skip-nav-button',\n    label: translate('ra.navigation.skip_nav'),\n    variant: \"contained\"\n  });\n};\nvar PREFIX = 'RaSkipNavigationButton';\nvar StyledButton = styled(Button, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var theme = _a.theme;\n  return {\n    position: 'fixed',\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.background.default,\n    color: theme.palette.getContrastText(theme.palette.background.default),\n    transition: theme.transitions.create(['top', 'opacity'], {\n      easing: theme.transitions.easing.easeIn,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    left: theme.spacing(2),\n    top: theme.spacing(-10),\n    zIndex: 5000,\n    '&:hover': {\n      opacity: 0.8,\n      backgroundColor: theme.palette.background.default\n    },\n    '&:focus': {\n      top: theme.spacing(2),\n      transition: theme.transitions.create(['top', 'opacity'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    }\n  };\n});\nvar skipToContent = function () {\n  if (typeof document === 'undefined') return;\n  var element = document.getElementById('main-content');\n  if (!element) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('No element with id \"main-content\" was found. Ensure the element that contains your main content has an id of \"main-content\".');\n    }\n    return;\n  }\n  element.setAttribute('tabIndex', '-1');\n  element.focus();\n  element.blur();\n  element.removeAttribute('tabIndex');\n};","map":{"version":3,"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,YAAY,QAAQ,SAAS;AAEtC,OAAO,IAAMC,oBAAoB,GAAG;EAChC,IAAMC,SAAS,GAAGF,YAAY,EAAE;EAEhC,OACIH,oBAACM,YAAY;IACTC,OAAO,EAAEC,aAAa;IACtBC,SAAS,EAAE,iBAAiB;IAC5BC,KAAK,EAAEL,SAAS,CAAC,wBAAwB,CAAC;IAC1CM,OAAO,EAAC;EAAW,EACrB;AAEV,CAAC;AAED,IAAMC,MAAM,GAAG,wBAAwB;AAEvC,IAAMN,YAAY,GAAGL,MAAM,CAACC,MAAM,EAAE;EAChCW,IAAI,EAAED,MAAM;EACZE,iBAAiB,EAAE,UAACC,KAAK,EAAEC,MAAM;IAAK,aAAM,CAACC,IAAI;EAAX;CACzC,CAAC,CAAC,UAACC,EAAS;MAAPC,KAAK;EAAO,OAAC;IACfC,QAAQ,EAAE,OAAO;IACjBC,OAAO,EAAEF,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC;IACzBC,eAAe,EAAEJ,KAAK,CAACK,OAAO,CAACC,UAAU,CAACC,OAAO;IACjDC,KAAK,EAAER,KAAK,CAACK,OAAO,CAACI,eAAe,CAACT,KAAK,CAACK,OAAO,CAACC,UAAU,CAACC,OAAO,CAAC;IACtEG,UAAU,EAAEV,KAAK,CAACW,WAAW,CAACC,MAAM,CAAC,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE;MACrDC,MAAM,EAAEb,KAAK,CAACW,WAAW,CAACE,MAAM,CAACC,MAAM;MACvCC,QAAQ,EAAEf,KAAK,CAACW,WAAW,CAACI,QAAQ,CAACC;KACxC,CAAC;IACFC,IAAI,EAAEjB,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC;IACtBe,GAAG,EAAElB,KAAK,CAACG,OAAO,CAAC,CAAC,EAAE,CAAC;IACvBgB,MAAM,EAAE,IAAI;IACZ,SAAS,EAAE;MACPC,OAAO,EAAE,GAAG;MACZhB,eAAe,EAAEJ,KAAK,CAACK,OAAO,CAACC,UAAU,CAACC;KAC7C;IACD,SAAS,EAAE;MACPW,GAAG,EAAElB,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC;MACrBO,UAAU,EAAEV,KAAK,CAACW,WAAW,CAACC,MAAM,CAAC,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE;QACrDC,MAAM,EAAEb,KAAK,CAACW,WAAW,CAACE,MAAM,CAACQ,OAAO;QACxCN,QAAQ,EAAEf,KAAK,CAACW,WAAW,CAACI,QAAQ,CAACO;OACxC;;GAER;AAvBiB,CAuBhB,CAAC;AAEH,IAAMjC,aAAa,GAAG;EAClB,IAAI,OAAOkC,QAAQ,KAAK,WAAW,EAAE;EACrC,IAAMC,OAAO,GAAGD,QAAQ,CAACE,cAAc,CAAC,cAAc,CAAC;EAEvD,IAAI,CAACD,OAAO,EAAE;IACV,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvCC,OAAO,CAACC,IAAI,CACR,8HAA8H,CACjI;;IAGL;;EAGJN,OAAO,CAACO,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC;EACtCP,OAAO,CAACQ,KAAK,EAAE;EACfR,OAAO,CAACS,IAAI,EAAE;EACdT,OAAO,CAACU,eAAe,CAAC,UAAU,CAAC;AACvC,CAAC","names":["React","styled","Button","useTranslate","SkipNavigationButton","translate","StyledButton","onClick","skipToContent","className","label","variant","PREFIX","name","overridesResolver","props","styles","root","_a","theme","position","padding","spacing","backgroundColor","palette","background","default","color","getContrastText","transition","transitions","create","easing","easeIn","duration","leavingScreen","left","top","zIndex","opacity","easeOut","enteringScreen","document","element","getElementById","process","env","NODE_ENV","console","warn","setAttribute","focus","blur","removeAttribute"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/ra-ui-materialui/src/button/SkipNavigationButton.tsx"],"sourcesContent":["import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Button } from './Button';\nimport { useTranslate } from 'ra-core';\n\nexport const SkipNavigationButton = () => {\n    const translate = useTranslate();\n\n    return (\n        <StyledButton\n            onClick={skipToContent}\n            className={'skip-nav-button'}\n            label={translate('ra.navigation.skip_nav')}\n            variant=\"contained\"\n        />\n    );\n};\n\nconst PREFIX = 'RaSkipNavigationButton';\n\nconst StyledButton = styled(Button, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    position: 'fixed',\n    padding: theme.spacing(1),\n    backgroundColor: theme.palette.background.default,\n    color: theme.palette.getContrastText(theme.palette.background.default),\n    transition: theme.transitions.create(['top', 'opacity'], {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    left: theme.spacing(2),\n    top: theme.spacing(-10),\n    zIndex: 5000,\n    '&:hover': {\n        opacity: 0.8,\n        backgroundColor: theme.palette.background.default,\n    },\n    '&:focus': {\n        top: theme.spacing(2),\n        transition: theme.transitions.create(['top', 'opacity'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n}));\n\nconst skipToContent = () => {\n    if (typeof document === 'undefined') return;\n    const element = document.getElementById('main-content');\n\n    if (!element) {\n        if (process.env.NODE_ENV !== 'production') {\n            console.warn(\n                'No element with id \"main-content\" was found. Ensure the element that contains your main content has an id of \"main-content\".'\n            );\n        }\n\n        return;\n    }\n\n    element.setAttribute('tabIndex', '-1');\n    element.focus();\n    element.blur();\n    element.removeAttribute('tabIndex');\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
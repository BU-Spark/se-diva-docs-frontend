{"ast":null,"code":"import * as React from 'react';\nimport useAuthState from './useAuthState';\n/**\n * Restrict access to children to authenticated users.\n * Redirects anonymous users to the login page.\n *\n * Use it to decorate your custom page components to require\n * authentication.\n *\n * By default this component is optimistic: it does not block\n * rendering children when checking authentication, but this mode\n * can be turned off by setting `requireAuth` to true.\n *\n * You can set additional `authParams` at will if your authProvider\n * requires it.\n *\n * @see useAuthState\n *\n * @example\n *     import { Admin, CustomRoutes, Authenticated } from 'react-admin';\n *\n *     const customRoutes = [\n *         <Route\n *             path=\"/foo\"\n *             element={\n *                 <Authenticated authParams={{ foo: 'bar' }}>\n *                     <Foo />\n *                 </Authenticated>\n *             }\n *         />\n *     ];\n *     const App = () => (\n *         <Admin>\n *             <CustomRoutes>{customRoutes}</CustomRoutes>\n *         </Admin>\n *     );\n */\nexport var Authenticated = function (props) {\n  var authParams = props.authParams,\n    children = props.children,\n    _a = props.requireAuth,\n    requireAuth = _a === void 0 ? false : _a;\n  // this hook will log out if the authProvider doesn't validate that the user is authenticated\n  var _b = useAuthState(authParams, true),\n    isLoading = _b.isLoading,\n    authenticated = _b.authenticated;\n  // in pessimistic mode don't render the children until authenticated\n  if (requireAuth && isLoading || !authenticated) {\n    return null;\n  }\n  // render the children in optimistic rendering or after authenticated\n  return React.createElement(React.Fragment, null, children);\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAG9B,OAAOC,YAAY,MAAM,gBAAgB;AAEzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,OAAO,IAAMC,aAAa,GAAG,UAACC,KAAyB;EAC3C,cAAU,GAAoCA,KAAK,WAAzC;IAAEC,QAAQ,GAA0BD,KAAK,SAA/B;IAAEE,KAAwBF,KAAK,YAAV;IAAnBG,WAAW,mBAAG,KAAK;EAEjD;EACM,SAA+BL,YAAY,CAACM,UAAU,EAAE,IAAI,CAAC;IAA3DC,SAAS;IAAEC,aAAa,mBAAmC;EAEnE;EACA,IAAKH,WAAW,IAAIE,SAAS,IAAK,CAACC,aAAa,EAAE;IAC9C,OAAO,IAAI;;EAGf;EACA,OAAOT,0CAAGI,QAAQ,CAAI;AAC1B,CAAC","names":["React","useAuthState","Authenticated","props","children","_a","requireAuth","authParams","isLoading","authenticated"],"sourceRoot":"","sources":["../../../src/auth/Authenticated.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
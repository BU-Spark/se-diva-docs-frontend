{"ast":null,"code":"import * as React from 'react';\nimport { styled, Tooltip } from '@mui/material';\nimport BookmarkIcon from '@mui/icons-material/BookmarkBorder';\nimport HelpIcon from '@mui/icons-material/HelpOutline';\nimport { useListContext, useTranslate } from 'ra-core';\nimport isEqual from 'lodash/isEqual';\nimport { extractValidSavedQueries, useSavedQueries } from './useSavedQueries';\nimport { RemoveSavedQueryIconButton } from './RemoveSavedQueryIconButton';\nimport { AddSavedQueryIconButton } from './AddSavedQueryIconButton';\nimport { SavedQueryFilterListItem } from './SavedQueryFilterListItem';\nimport { FilterList } from './FilterList';\n/**\n * FilterList-like component allowing to save and restore a query (filters, sort, perPage).\n *\n * Use this component in a Filter sidebar to let users store custom queries\n * that they can reuse later. The saved queries will appear as FilterListItems,\n * and can be removed.\n *\n * This component uses useStore under the hood to store saved queries in\n * localStorage, one set of saved queries per resource.\n *\n * @example\n *\n * import { FilterList, FilterListItem, List, Datagrid, SavedQueriesList } from 'react-admin';\n * import { Card, CardContent } from '@mui/material';\n *\n * const PostFilterSidebar = () => (\n *     <Card>\n *         <CardContent>\n *             <SavedQueriesList />\n *             <FilterList label=\"Category\" icon={<CategoryIcon />}>\n *                 ...\n *             </FilterList>\n *             <FilterList label=\"Published\" icon={<DateRangeIcon />}>\n *                ...\n *             </FilterList>\n *             <FilterList label=\"Popularity\" icon={<DateRangeIcon />}>\n *                ...\n *             </FilterList>\n *         </CardContent>\n *     </Card>\n * );\n *\n * const PostList = () => (\n *     <List aside={<PostFilterSidebar />}>\n *         <Datagrid>\n *             ...\n *         </Datagrid>\n *     </List>\n * );\n *\n */\nexport var SavedQueriesList = function (_a) {\n  var _b = _a.icon,\n    icon = _b === void 0 ? defaultIcon : _b;\n  var translate = useTranslate();\n  var _c = useListContext(),\n    resource = _c.resource,\n    filterValues = _c.filterValues,\n    displayedFilters = _c.displayedFilters,\n    sort = _c.sort,\n    perPage = _c.perPage;\n  var savedQueries = useSavedQueries(resource)[0];\n  var validSavedQueries = extractValidSavedQueries(savedQueries);\n  var hasSavedCurrentFilterValue = validSavedQueries.some(function (savedQuery) {\n    return isEqual(savedQuery.value, {\n      filter: filterValues,\n      sort: sort,\n      perPage: perPage,\n      displayedFilters: displayedFilters\n    });\n  });\n  var hasFilterValues = !isEqual(filterValues, {});\n  return React.createElement(Root, {\n    label: \"ra.saved_queries.label\",\n    icon: icon\n  }, hasSavedCurrentFilterValue ? React.createElement(RemoveSavedQueryIconButton, {\n    className: SavedQueriesListClasses.floatingIcon\n  }) : hasFilterValues ? React.createElement(AddSavedQueryIconButton, {\n    className: SavedQueriesListClasses.floatingIcon\n  }) : React.createElement(Tooltip, {\n    title: translate('ra.saved_queries.help'),\n    className: SavedQueriesListClasses.floatingTooltip\n  }, React.createElement(HelpIcon, null)), validSavedQueries.map(function (savedQuery, index) {\n    return React.createElement(SavedQueryFilterListItem, {\n      label: savedQuery.label,\n      value: savedQuery.value,\n      key: index\n    });\n  }));\n};\nvar PREFIX = 'RaSavedQueriesList';\nexport var SavedQueriesListClasses = {\n  floatingIcon: \"\".concat(PREFIX, \"-floatingIcon\"),\n  floatingTooltip: \"\".concat(PREFIX, \"-floatingTooltip\"),\n  titleContainer: \"\".concat(PREFIX, \"-titleContainer\"),\n  titleIcon: \"\".concat(PREFIX, \"-titleIcon\")\n};\nvar Root = styled(FilterList, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .\".concat(SavedQueriesListClasses.floatingIcon)] = {\n    position: 'absolute',\n    top: '-1.8em',\n    right: 0\n  }, _b[\"& .\".concat(SavedQueriesListClasses.floatingTooltip)] = {\n    position: 'absolute',\n    top: '-1.2em',\n    right: 3,\n    color: theme.palette.action.disabled\n  }, _b;\n});\nvar defaultIcon = React.createElement(BookmarkIcon, null);","map":{"version":3,"mappings":"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","names":["React","styled","Tooltip","BookmarkIcon","HelpIcon","useListContext","useTranslate","isEqual","extractValidSavedQueries","useSavedQueries","RemoveSavedQueryIconButton","AddSavedQueryIconButton","SavedQueryFilterListItem","FilterList","SavedQueriesList","_a","_b","icon","defaultIcon","translate","resource","filterValues","displayedFilters","sort","perPage","validSavedQueries","savedQueries","hasSavedCurrentFilterValue","some","savedQuery","value","filter","hasFilterValues","Root","label","className","SavedQueriesListClasses","floatingIcon","title","floatingTooltip","map","index","key","PREFIX","titleContainer","titleIcon","name","overridesResolver","props","styles","root","theme","position","top","right","color","palette","action","disabled"],"sourceRoot":"","sources":["../../../../src/list/filter/SavedQueriesList.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
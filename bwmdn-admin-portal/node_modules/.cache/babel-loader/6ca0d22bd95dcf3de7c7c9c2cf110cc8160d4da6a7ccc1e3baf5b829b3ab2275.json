{"ast":null,"code":"/**\n * Remove empty strings from form state\n *\n * @example\n * sanitizeEmptyValues({ foo: '', bar: 'baz' }) // { bar: 'baz' }\n */\nexport var sanitizeEmptyValues = function (values, record) {\n  if (record === void 0) {\n    record = {};\n  }\n  var sanitizedValues = {};\n  Object.keys(values).forEach(function (key) {\n    if (values[key] == null || values[key] === '') {\n      if (record.hasOwnProperty(key)) {\n        // user has emptied a field, make the value null\n        sanitizedValues[key] = null;\n      } else {\n        // user has emptied a field, but the initial value was undefined\n        // so we don't include it in the sanitized values\n      }\n    } else {\n      // this is a non-empty value, so we include it in the sanitized values\n      sanitizedValues[key] = values[key];\n    }\n  });\n  return sanitizedValues;\n};","map":{"version":3,"mappings":"AAAA;;;;;;AAMA,OAAO,IAAMA,mBAAmB,GAAG,UAACC,MAAW,EAAEC,MAAgB;EAAhB;IAAAA,WAAgB;EAAA;EAC7D,IAAMC,eAAe,GAAG,EAAE;EAC1BC,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACK,OAAO,CAAC,aAAG;IAC3B,IAAIL,MAAM,CAACM,GAAG,CAAC,IAAI,IAAI,IAAIN,MAAM,CAACM,GAAG,CAAC,KAAK,EAAE,EAAE;MAC3C,IAAIL,MAAM,CAACM,cAAc,CAACD,GAAG,CAAC,EAAE;QAC5B;QACAJ,eAAe,CAACI,GAAG,CAAC,GAAG,IAAI;OAC9B,MAAM;QACH;QACA;MAAA;KAEP,MAAM;MACH;MACAJ,eAAe,CAACI,GAAG,CAAC,GAAGN,MAAM,CAACM,GAAG,CAAC;;EAE1C,CAAC,CAAC;EACF,OAAOJ,eAAe;AAC1B,CAAC","names":["sanitizeEmptyValues","values","record","sanitizedValues","Object","keys","forEach","key","hasOwnProperty"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/ra-core/src/form/sanitizeEmptyValues.ts"],"sourcesContent":["/**\n * Remove empty strings from form state\n *\n * @example\n * sanitizeEmptyValues({ foo: '', bar: 'baz' }) // { bar: 'baz' }\n */\nexport const sanitizeEmptyValues = (values: any, record: any = {}): any => {\n    const sanitizedValues = {};\n    Object.keys(values).forEach(key => {\n        if (values[key] == null || values[key] === '') {\n            if (record.hasOwnProperty(key)) {\n                // user has emptied a field, make the value null\n                sanitizedValues[key] = null;\n            } else {\n                // user has emptied a field, but the initial value was undefined\n                // so we don't include it in the sanitized values\n            }\n        } else {\n            // this is a non-empty value, so we include it in the sanitized values\n            sanitizedValues[key] = values[key];\n        }\n    });\n    return sanitizedValues;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { useMemo } from 'react';\nimport { useI18nProvider } from './useI18nProvider';\n/**\n * A hook that gets the available locales from the i18nProvider.\n * @example\n *\n * import { useLocales } from 'react-admin';\n *\n * const LocaleSelector = () => {\n *     const locales = useLocales();\n *     const [currentLocale, setCurrentLocale] = useLocaleState();\n *\n *     return (\n *         <select onChange={event => setCurrentLocale(event.target.value)}>\n *             {locales.map(locale => (\n *                 <option key={locale.locale} value={locale.locale}>\n *                     {locale.name}\n *                 </option>\n *             )}\n *         </select>\n *     );\n * }\n */\nexport var useLocales = function (options) {\n  var _a;\n  var i18nProvider = useI18nProvider();\n  var locales = useMemo(function () {\n    return (i18nProvider === null || i18nProvider === void 0 ? void 0 : i18nProvider.getLocales) ? i18nProvider === null || i18nProvider === void 0 ? void 0 : i18nProvider.getLocales() : [];\n  }, [i18nProvider]);\n  return (_a = options === null || options === void 0 ? void 0 : options.locales) !== null && _a !== void 0 ? _a : locales;\n};","map":{"version":3,"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,eAAe,QAAQ,mBAAmB;AAEnD;;;;;;;;;;;;;;;;;;;;;AAqBA,OAAO,IAAMC,UAAU,GAAG,UAACC,OAA2B;;EAClD,IAAMC,YAAY,GAAGH,eAAe,EAAE;EACtC,IAAMI,OAAO,GAAGL,OAAO,CACnB;IAAM,OAAC,aAAY,aAAZI,YAAY,uBAAZA,YAAY,CAAEE,UAAU,IAAGF,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEE,UAAU,EAAE,GAAG,EAAE;EAA3D,CAA4D,EAClE,CAACF,YAAY,CAAC,CACjB;EACD,OAAO,aAAO,aAAPD,OAAO,uBAAPA,OAAO,CAAEE,OAAO,mCAAIA,OAAO;AACtC,CAAC","names":["useMemo","useI18nProvider","useLocales","options","i18nProvider","locales","getLocales"],"sourceRoot":"","sources":["../../../src/i18n/useLocales.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { memo } from 'react';\nimport get from 'lodash/get';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { Typography, Link } from '@mui/material';\nimport { useRecordContext, useTranslate } from 'ra-core';\nimport { fieldPropTypes } from './types';\nexport var UrlField = memo(function (props) {\n  var className = props.className,\n    emptyText = props.emptyText,\n    source = props.source,\n    rest = __rest(props, [\"className\", \"emptyText\", \"source\"]);\n  var record = useRecordContext(props);\n  var value = get(record, source);\n  var translate = useTranslate();\n  if (value == null) {\n    return React.createElement(Typography, __assign({\n      component: \"span\",\n      variant: \"body2\",\n      className: className\n    }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, {\n      _: emptyText\n    }));\n  }\n  return React.createElement(Link, __assign({\n    className: className,\n    href: value,\n    variant: \"body2\"\n  }, sanitizeFieldRestProps(rest)), value);\n});\nUrlField.propTypes = fieldPropTypes;\nUrlField.displayName = 'UrlField';","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAA+BC,IAAI,QAAY,OAAO;AACtD,OAAOC,GAAG,MAAM,YAAY;AAC5B,SAASC,sBAAsB,QAAQ,0BAA0B;AACjE,SAASC,UAAU,EAAEC,IAAI,QAAQ,eAAe;AAChD,SAASC,gBAAgB,EAAEC,YAAY,QAAQ,SAAS;AACxD,SAA+CC,cAAc,QAAQ,SAAS;AAE9E,OAAO,IAAMC,QAAQ,GAAsBR,IAAI,CAAC,eAAK;EACzC,aAAS,GAAiCS,KAAK,UAAtC;IAAEC,SAAS,GAAsBD,KAAK,UAA3B;IAAEE,MAAM,GAAcF,KAAK,OAAnB;IAAKG,IAAI,UAAKH,KAAK,EAAjD,oCAAyC,CAAF;EAC7C,IAAMI,MAAM,GAAGR,gBAAgB,CAACI,KAAK,CAAC;EACtC,IAAMK,KAAK,GAAGb,GAAG,CAACY,MAAM,EAAEF,MAAM,CAAC;EACjC,IAAMI,SAAS,GAAGT,YAAY,EAAE;EAEhC,IAAIQ,KAAK,IAAI,IAAI,EAAE;IACf,OACIf,oBAACI,UAAU;MACPa,SAAS,EAAC,MAAM;MAChBC,OAAO,EAAC,OAAO;MACfC,SAAS,EAAEA;IAAS,GAChBhB,sBAAsB,CAACU,IAAI,CAAC,GAE/BF,SAAS,IAAIK,SAAS,CAACL,SAAS,EAAE;MAAES,CAAC,EAAET;IAAS,CAAE,CAAC,CAC3C;;EAIrB,OACIX,oBAACK,IAAI;IACDc,SAAS,EAAEA,SAAS;IACpBE,IAAI,EAAEN,KAAK;IACXG,OAAO,EAAC;EAAO,GACXf,sBAAsB,CAACU,IAAI,CAAC,GAE/BE,KAAK,CACH;AAEf,CAAC,CAAC;AAEFN,QAAQ,CAACa,SAAS,GAAGd,cAAc;AACnCC,QAAQ,CAACc,WAAW,GAAG,UAAU","names":["React","memo","get","sanitizeFieldRestProps","Typography","Link","useRecordContext","useTranslate","fieldPropTypes","UrlField","props","emptyText","source","rest","record","value","translate","component","variant","className","_","href","propTypes","displayName"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/ra-ui-materialui/src/field/UrlField.tsx"],"sourcesContent":["import * as React from 'react';\nimport { AnchorHTMLAttributes, memo, FC } from 'react';\nimport get from 'lodash/get';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { Typography, Link } from '@mui/material';\nimport { useRecordContext, useTranslate } from 'ra-core';\nimport { PublicFieldProps, InjectedFieldProps, fieldPropTypes } from './types';\n\nexport const UrlField: FC<UrlFieldProps> = memo(props => {\n    const { className, emptyText, source, ...rest } = props;\n    const record = useRecordContext(props);\n    const value = get(record, source);\n    const translate = useTranslate();\n\n    if (value == null) {\n        return (\n            <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={className}\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {emptyText && translate(emptyText, { _: emptyText })}\n            </Typography>\n        );\n    }\n\n    return (\n        <Link\n            className={className}\n            href={value}\n            variant=\"body2\"\n            {...sanitizeFieldRestProps(rest)}\n        >\n            {value}\n        </Link>\n    );\n});\n\nUrlField.propTypes = fieldPropTypes;\nUrlField.displayName = 'UrlField';\n\nexport interface UrlFieldProps\n    extends PublicFieldProps,\n        InjectedFieldProps,\n        AnchorHTMLAttributes<HTMLAnchorElement> {}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
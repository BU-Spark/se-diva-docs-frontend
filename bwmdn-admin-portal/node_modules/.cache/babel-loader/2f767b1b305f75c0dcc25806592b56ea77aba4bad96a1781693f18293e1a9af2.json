{"ast":null,"code":"import * as React from 'react';\nimport { createContext } from 'react';\n/**\n * Context to store a record.\n *\n * @see RecordContextProvider\n * @see useRecordContext\n */\nexport var RecordContext = createContext(undefined);\nRecordContext.displayName = 'RecordContext';\n/**\n * Provider for the Record Context, to store a record.\n *\n * Use the useRecordContext() hook to read the context.\n * That's what the Edit and Show components do in react-admin.\n *\n * Many react-admin components read the RecordContext, including all Field\n * components.\n *\n * @example\n *\n * import { useGetOne, RecordContextProvider } from 'ra-core';\n *\n * const Show = ({ resource, id }) => {\n *     const { data } = useGetOne(resource, { id });\n *     return (\n *         <RecordContextProvider value={data}>\n *             ...\n *         </RecordContextProvider>\n *     );\n * };\n */\nexport var RecordContextProvider = function (_a) {\n  var children = _a.children,\n    value = _a.value;\n  return React.createElement(RecordContext.Provider, {\n    value: value\n  }, children);\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAmB,OAAO;AAGhD;;;;;;AAMA,OAAO,IAAMC,aAAa,GAAGD,aAAa,CACtCE,SAAS,CACZ;AAEDD,aAAa,CAACE,WAAW,GAAG,eAAe;AAE3C;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAO,IAAMC,qBAAqB,GAAG,UAEnCC,EAGuC;MAFrCC,QAAQ;IACRC,KAAK;EACqC,OAC1CR,oBAACE,aAAa,CAACO,QAAQ;IAACD,KAAK,EAAEA;EAAK,GAAGD,QAAQ,CAA0B;AAD/B,CAE7C","names":["React","createContext","RecordContext","undefined","displayName","RecordContextProvider","_a","children","value","Provider"],"sources":["/Users/paigedeveau/node_modules/ra-core/src/controller/record/RecordContext.tsx"],"sourcesContent":["import * as React from 'react';\nimport { createContext, ReactNode } from 'react';\nimport { RaRecord } from '../../types';\n\n/**\n * Context to store a record.\n *\n * @see RecordContextProvider\n * @see useRecordContext\n */\nexport const RecordContext = createContext<RaRecord | Omit<RaRecord, 'id'>>(\n    undefined\n);\n\nRecordContext.displayName = 'RecordContext';\n\n/**\n * Provider for the Record Context, to store a record.\n *\n * Use the useRecordContext() hook to read the context.\n * That's what the Edit and Show components do in react-admin.\n *\n * Many react-admin components read the RecordContext, including all Field\n * components.\n *\n * @example\n *\n * import { useGetOne, RecordContextProvider } from 'ra-core';\n *\n * const Show = ({ resource, id }) => {\n *     const { data } = useGetOne(resource, { id });\n *     return (\n *         <RecordContextProvider value={data}>\n *             ...\n *         </RecordContextProvider>\n *     );\n * };\n */\nexport const RecordContextProvider = <\n    RecordType extends RaRecord | Omit<RaRecord, 'id'> = RaRecord\n>({\n    children,\n    value,\n}: RecordContextProviderProps<RecordType>) => (\n    <RecordContext.Provider value={value}>{children}</RecordContext.Provider>\n);\n\nexport interface RecordContextProviderProps<RecordType> {\n    children: ReactNode;\n    value?: RecordType;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { useCallback } from 'react';\nimport { useStoreContext } from './useStoreContext';\n/**\n * Get a callback to remove all item with a certain key prefix from the store\n *\n * @example\n * import { useRemoveItemsFromStore } from 'react-admin';\n *\n * const ResetDatagridPrefs = () {\n *    const removeItems = useRemoveItemsFromStore();\n *\n *    const hancleClick = () => {\n *        removeItems('datagrid.prefs');\n *    };\n *\n *    return <Button onClick={hancleClick}>Reset datagrid preferences</Button>;\n * }\n */\nexport var useRemoveItemsFromStore = function (hookTimeKeyPrefix) {\n  var removeItems = useStoreContext().removeItems;\n  return useCallback(function (keyPrefix) {\n    if (typeof keyPrefix === 'undefined' && typeof hookTimeKeyPrefix === 'undefined') {\n      throw new Error('You must provide a key to remove an item from the store');\n    }\n    // @ts-ignore\n    return removeItems(keyPrefix !== null && keyPrefix !== void 0 ? keyPrefix : hookTimeKeyPrefix);\n  }, [removeItems, hookTimeKeyPrefix]);\n};","map":{"version":3,"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,SAASC,eAAe,QAAQ,mBAAmB;AAEnD;;;;;;;;;;;;;;;;AAgBA,OAAO,IAAMC,uBAAuB,GAAG,UAACC,iBAA0B;EACtD,eAAW,GAAKF,eAAe,EAAE,YAAtB;EACnB,OAAOD,WAAW,CACd,UAACI,SAAkB;IACf,IACI,OAAOA,SAAS,KAAK,WAAW,IAChC,OAAOD,iBAAiB,KAAK,WAAW,EAC1C;MACE,MAAM,IAAIE,KAAK,CACX,yDAAyD,CAC5D;;IAEL;IACA,OAAOC,WAAW,CAACF,SAAS,aAATA,SAAS,cAATA,SAAS,GAAID,iBAAiB,CAAC;EACtD,CAAC,EACD,CAACG,WAAW,EAAEH,iBAAiB,CAAC,CACnC;AACL,CAAC","names":["useCallback","useStoreContext","useRemoveItemsFromStore","hookTimeKeyPrefix","keyPrefix","Error","removeItems"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/ra-core/src/store/useRemoveItemsFromStore.ts"],"sourcesContent":["import { useCallback } from 'react';\n\nimport { useStoreContext } from './useStoreContext';\n\n/**\n * Get a callback to remove all item with a certain key prefix from the store\n *\n * @example\n * import { useRemoveItemsFromStore } from 'react-admin';\n *\n * const ResetDatagridPrefs = () {\n *    const removeItems = useRemoveItemsFromStore();\n *\n *    const hancleClick = () => {\n *        removeItems('datagrid.prefs');\n *    };\n *\n *    return <Button onClick={hancleClick}>Reset datagrid preferences</Button>;\n * }\n */\nexport const useRemoveItemsFromStore = (hookTimeKeyPrefix?: string) => {\n    const { removeItems } = useStoreContext();\n    return useCallback(\n        (keyPrefix?: string) => {\n            if (\n                typeof keyPrefix === 'undefined' &&\n                typeof hookTimeKeyPrefix === 'undefined'\n            ) {\n                throw new Error(\n                    'You must provide a key to remove an item from the store'\n                );\n            }\n            // @ts-ignore\n            return removeItems(keyPrefix ?? hookTimeKeyPrefix);\n        },\n        [removeItems, hookTimeKeyPrefix]\n    );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
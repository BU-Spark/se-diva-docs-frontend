{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport HttpError from './HttpError';\nimport { stringify } from 'query-string';\nexport var createHeadersFromOptions = function (options) {\n  var requestHeaders = options.headers || new Headers({\n    Accept: 'application/json'\n  });\n  if (!requestHeaders.has('Content-Type') && !(options && (!options.method || options.method === 'GET')) && !(options && options.body && options.body instanceof FormData)) {\n    requestHeaders.set('Content-Type', 'application/json');\n  }\n  if (options.user && options.user.authenticated && options.user.token) {\n    requestHeaders.set('Authorization', options.user.token);\n  }\n  return requestHeaders;\n};\nexport var fetchJson = function (url, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var requestHeaders = createHeadersFromOptions(options);\n  return fetch(url, __assign(__assign({}, options), {\n    headers: requestHeaders\n  })).then(function (response) {\n    return response.text().then(function (text) {\n      return {\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers,\n        body: text\n      };\n    });\n  }).then(function (_a) {\n    var status = _a.status,\n      statusText = _a.statusText,\n      headers = _a.headers,\n      body = _a.body;\n    var json;\n    try {\n      json = JSON.parse(body);\n    } catch (e) {\n      // not json, no big deal\n    }\n    if (status < 200 || status >= 300) {\n      return Promise.reject(new HttpError(json && json.message || statusText, status, json));\n    }\n    return Promise.resolve({\n      status: status,\n      headers: headers,\n      body: body,\n      json: json\n    });\n  });\n};\nexport var queryParameters = stringify;\nvar isValidObject = function (value) {\n  if (!value) {\n    return false;\n  }\n  var isArray = Array.isArray(value);\n  var isBuffer = typeof Buffer !== 'undefined' && Buffer.isBuffer(value);\n  var isObject = Object.prototype.toString.call(value) === '[object Object]';\n  var hasKeys = !!Object.keys(value).length;\n  return !isArray && !isBuffer && isObject && hasKeys;\n};\nexport var flattenObject = function (value, path) {\n  var _a;\n  if (path === void 0) {\n    path = [];\n  }\n  if (isValidObject(value)) {\n    return Object.assign.apply(Object, __spreadArray([{}], Object.keys(value).map(function (key) {\n      return flattenObject(value[key], path.concat([key]));\n    }), false));\n  } else {\n    return path.length ? (_a = {}, _a[path.join('.')] = value, _a) : value;\n  }\n};","map":{"version":3,"mappings":"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","names":["HttpError","stringify","createHeadersFromOptions","options","requestHeaders","headers","Headers","Accept","has","method","body","FormData","set","user","authenticated","token","fetchJson","url","fetch","then","text","status","response","statusText","_a","json","JSON","parse","e","Promise","reject","message","resolve","queryParameters","isValidObject","value","isArray","Array","isBuffer","Buffer","isObject","Object","prototype","toString","call","hasKeys","keys","length","flattenObject","path","assign","map","key","concat","join"],"sourceRoot":"","sources":["../../../src/dataProvider/fetch.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
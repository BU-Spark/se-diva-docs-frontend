{"ast":null,"code":"import * as React from 'react';\nimport { isValidElement } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { ResourceContextProvider } from './ResourceContextProvider';\nexport var Resource = function (props) {\n  var Create = props.create,\n    Edit = props.edit,\n    List = props.list,\n    name = props.name,\n    Show = props.show;\n  return React.createElement(ResourceContextProvider, {\n    value: name\n  }, React.createElement(Routes, null, Create && React.createElement(Route, {\n    path: \"create/*\",\n    element: isValidElement(Create) ? Create : React.createElement(Create, null)\n  }), Show && React.createElement(Route, {\n    path: \":id/show/*\",\n    element: isValidElement(Show) ? Show : React.createElement(Show, null)\n  }), Edit && React.createElement(Route, {\n    path: \":id/*\",\n    element: isValidElement(Edit) ? Edit : React.createElement(Edit, null)\n  }), List && React.createElement(Route, {\n    path: \"/*\",\n    element: isValidElement(List) ? List : React.createElement(List, null)\n  }), props.children));\n};\nResource.raName = 'Resource';\nResource.registerResource = function (_a) {\n  var create = _a.create,\n    edit = _a.edit,\n    icon = _a.icon,\n    list = _a.list,\n    name = _a.name,\n    options = _a.options,\n    show = _a.show,\n    recordRepresentation = _a.recordRepresentation,\n    hasCreate = _a.hasCreate,\n    hasEdit = _a.hasEdit,\n    hasShow = _a.hasShow;\n  return {\n    name: name,\n    options: options,\n    hasList: !!list,\n    hasCreate: !!create || !!hasCreate,\n    hasEdit: !!edit || !!hasEdit,\n    hasShow: !!show || !!hasShow,\n    icon: icon,\n    recordRepresentation: recordRepresentation\n  };\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,cAAc,QAAQ,OAAO;AACtC,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAGhD,SAASC,uBAAuB,QAAQ,2BAA2B;AAEnE,OAAO,IAAMC,QAAQ,GAAG,UAACC,KAAoB;EACjC,IAAQC,MAAM,GAA+CD,KAAK,OAApD;IAAQE,IAAI,GAAmCF,KAAK,KAAxC;IAAQG,IAAI,GAAuBH,KAAK,KAA5B;IAAEI,IAAI,GAAiBJ,KAAK,KAAtB;IAAQK,IAAI,GAAKL,KAAK,KAAV;EAEhE,OACIN,oBAACI,uBAAuB;IAACQ,KAAK,EAAEF;EAAI,GAChCV,oBAACG,MAAM,QACFI,MAAM,IACHP,oBAACE,KAAK;IACFW,IAAI,EAAC,UAAU;IACfC,OAAO,EAAEb,cAAc,CAACM,MAAM,CAAC,GAAGA,MAAM,GAAGP,oBAACO,MAAM;EAAG,EAE5D,EACAI,IAAI,IACDX,oBAACE,KAAK;IACFW,IAAI,EAAC,YAAY;IACjBC,OAAO,EAAEb,cAAc,CAACU,IAAI,CAAC,GAAGA,IAAI,GAAGX,oBAACW,IAAI;EAAG,EAEtD,EACAH,IAAI,IACDR,oBAACE,KAAK;IACFW,IAAI,EAAC,OAAO;IACZC,OAAO,EAAEb,cAAc,CAACO,IAAI,CAAC,GAAGA,IAAI,GAAGR,oBAACQ,IAAI;EAAG,EAEtD,EACAC,IAAI,IACDT,oBAACE,KAAK;IACFW,IAAI,EAAC,IAAI;IACTC,OAAO,EAAEb,cAAc,CAACQ,IAAI,CAAC,GAAGA,IAAI,GAAGT,oBAACS,IAAI;EAAG,EAEtD,EACAH,KAAK,CAACS,QAAQ,CACV,CACa;AAElC,CAAC;AAEDV,QAAQ,CAACW,MAAM,GAAG,UAAU;AAE5BX,QAAQ,CAACY,gBAAgB,GAAG,UAACC,EAYb;MAXZC,MAAM;IACNC,IAAI;IACJC,IAAI;IACJC,IAAI;IACJZ,IAAI;IACJa,OAAO;IACPC,IAAI;IACJC,oBAAoB;IACpBC,SAAS;IACTC,OAAO;IACPC,OAAO;EACU,OAAC;IAClBlB,IAAI;IACJa,OAAO;IACPM,OAAO,EAAE,CAAC,CAACP,IAAI;IACfI,SAAS,EAAE,CAAC,CAACP,MAAM,IAAI,CAAC,CAACO,SAAS;IAClCC,OAAO,EAAE,CAAC,CAACP,IAAI,IAAI,CAAC,CAACO,OAAO;IAC5BC,OAAO,EAAE,CAAC,CAACJ,IAAI,IAAI,CAAC,CAACI,OAAO;IAC5BP,IAAI;IACJI,oBAAoB;GACvB;AAToB,CASnB","names":["React","isValidElement","Route","Routes","ResourceContextProvider","Resource","props","Create","Edit","List","name","Show","value","path","element","children","raName","registerResource","_a","create","edit","icon","list","options","show","recordRepresentation","hasCreate","hasEdit","hasShow","hasList"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/ra-core/src/core/Resource.tsx"],"sourcesContent":["import * as React from 'react';\nimport { isValidElement } from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\nimport { ResourceProps } from '../types';\nimport { ResourceContextProvider } from './ResourceContextProvider';\n\nexport const Resource = (props: ResourceProps) => {\n    const { create: Create, edit: Edit, list: List, name, show: Show } = props;\n\n    return (\n        <ResourceContextProvider value={name}>\n            <Routes>\n                {Create && (\n                    <Route\n                        path=\"create/*\"\n                        element={isValidElement(Create) ? Create : <Create />}\n                    />\n                )}\n                {Show && (\n                    <Route\n                        path=\":id/show/*\"\n                        element={isValidElement(Show) ? Show : <Show />}\n                    />\n                )}\n                {Edit && (\n                    <Route\n                        path=\":id/*\"\n                        element={isValidElement(Edit) ? Edit : <Edit />}\n                    />\n                )}\n                {List && (\n                    <Route\n                        path=\"/*\"\n                        element={isValidElement(List) ? List : <List />}\n                    />\n                )}\n                {props.children}\n            </Routes>\n        </ResourceContextProvider>\n    );\n};\n\nResource.raName = 'Resource';\n\nResource.registerResource = ({\n    create,\n    edit,\n    icon,\n    list,\n    name,\n    options,\n    show,\n    recordRepresentation,\n    hasCreate,\n    hasEdit,\n    hasShow,\n}: ResourceProps) => ({\n    name,\n    options,\n    hasList: !!list,\n    hasCreate: !!create || !!hasCreate,\n    hasEdit: !!edit || !!hasEdit,\n    hasShow: !!show || !!hasShow,\n    icon,\n    recordRepresentation,\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
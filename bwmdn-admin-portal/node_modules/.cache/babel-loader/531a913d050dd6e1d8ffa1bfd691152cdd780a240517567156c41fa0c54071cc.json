{"ast":null,"code":"import { useStore } from 'ra-core';\nimport { useTheme as useThemeMUI } from '@mui/material';\nexport var useTheme = function (themeOverride) {\n  var themeMUI = useThemeMUI();\n  var _a = useStore('theme', themeOverride),\n    theme = _a[0],\n    setter = _a[1];\n  return [theme || themeMUI, setter];\n};","map":{"version":3,"mappings":"AAAA,SAASA,QAAQ,QAAQ,SAAS;AAClC,SAAuBC,QAAQ,IAAIC,WAAW,QAAQ,eAAe;AAIrE,OAAO,IAAMD,QAAQ,GAAG,UACpBE,aAA4B;EAE5B,IAAMC,QAAQ,GAAGF,WAAW,EAAE;EACxB,SAAkBF,QAAQ,CAAC,OAAO,EAAEG,aAAa,CAAC;IAAjDE,KAAK;IAAEC,MAAM,QAAoC;EACxD,OAAO,CAACD,KAAK,IAAID,QAAQ,EAAEE,MAAM,CAAC;AACtC,CAAC","names":["useStore","useTheme","useThemeMUI","themeOverride","themeMUI","theme","setter"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/ra-ui-materialui/src/layout/Theme/useTheme.ts"],"sourcesContent":["import { useStore } from 'ra-core';\nimport { ThemeOptions, useTheme as useThemeMUI } from '@mui/material';\n\nexport type ThemeSetter = (theme: ThemeOptions) => void;\n\nexport const useTheme = (\n    themeOverride?: ThemeOptions\n): [ThemeOptions, ThemeSetter] => {\n    const themeMUI = useThemeMUI();\n    const [theme, setter] = useStore('theme', themeOverride);\n    return [theme || themeMUI, setter];\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
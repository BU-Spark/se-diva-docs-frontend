{"ast":null,"code":"import { createContext } from 'react';\n/**\n * Context to store the result of the useEditController() hook.\n *\n * Use the useEditContext() hook to read the context. That's what the Edit components do in react-admin.\n *\n * @example\n *\n * import { useEditController, EditContextProvider } from 'ra-core';\n *\n * const Edit = props => {\n *     const controllerProps = useEditController(props);\n *     return (\n *         <EditContextProvider value={controllerProps}>\n *             ...\n *         </EditContextProvider>\n *     );\n * };\n */\nexport var EditContext = createContext({\n  record: null,\n  defaultTitle: null,\n  isFetching: null,\n  isLoading: null,\n  mutationMode: null,\n  redirect: null,\n  refetch: null,\n  resource: null,\n  save: null,\n  saving: null,\n  registerMutationMiddleware: null,\n  unregisterMutationMiddleware: null\n});\nEditContext.displayName = 'EditContext';","map":{"version":3,"mappings":"AAAA,SAASA,aAAa,QAAQ,OAAO;AAGrC;;;;;;;;;;;;;;;;;;AAkBA,OAAO,IAAMC,WAAW,GAAGD,aAAa,CAAuB;EAC3DE,MAAM,EAAE,IAAI;EACZC,YAAY,EAAE,IAAI;EAClBC,UAAU,EAAE,IAAI;EAChBC,SAAS,EAAE,IAAI;EACfC,YAAY,EAAE,IAAI;EAClBC,QAAQ,EAAE,IAAI;EACdC,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE,IAAI;EACdC,IAAI,EAAE,IAAI;EACVC,MAAM,EAAE,IAAI;EACZC,0BAA0B,EAAE,IAAI;EAChCC,4BAA4B,EAAE;CACjC,CAAC;AAEFZ,WAAW,CAACa,WAAW,GAAG,aAAa","names":["createContext","EditContext","record","defaultTitle","isFetching","isLoading","mutationMode","redirect","refetch","resource","save","saving","registerMutationMiddleware","unregisterMutationMiddleware","displayName"],"sources":["/Users/paigedeveau/node_modules/ra-core/src/controller/edit/EditContext.tsx"],"sourcesContent":["import { createContext } from 'react';\nimport { EditControllerResult } from './useEditController';\n\n/**\n * Context to store the result of the useEditController() hook.\n *\n * Use the useEditContext() hook to read the context. That's what the Edit components do in react-admin.\n *\n * @example\n *\n * import { useEditController, EditContextProvider } from 'ra-core';\n *\n * const Edit = props => {\n *     const controllerProps = useEditController(props);\n *     return (\n *         <EditContextProvider value={controllerProps}>\n *             ...\n *         </EditContextProvider>\n *     );\n * };\n */\nexport const EditContext = createContext<EditControllerResult>({\n    record: null,\n    defaultTitle: null,\n    isFetching: null,\n    isLoading: null,\n    mutationMode: null,\n    redirect: null,\n    refetch: null,\n    resource: null,\n    save: null,\n    saving: null,\n    registerMutationMiddleware: null,\n    unregisterMutationMiddleware: null,\n});\n\nEditContext.displayName = 'EditContext';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
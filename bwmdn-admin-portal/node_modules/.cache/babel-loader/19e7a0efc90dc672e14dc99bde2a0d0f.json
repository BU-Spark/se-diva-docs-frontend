{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { memo } from 'react';\nimport get from 'lodash/get';\nimport Typography from '@mui/material/Typography';\nimport { useRecordContext } from 'ra-core';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\nexport var TextField = memo(function (props) {\n  var className = props.className,\n    source = props.source,\n    emptyText = props.emptyText,\n    rest = __rest(props, [\"className\", \"source\", \"emptyText\"]);\n  var record = useRecordContext(props);\n  var value = get(record, source);\n  return React.createElement(Typography, __assign({\n    component: \"span\",\n    variant: \"body2\",\n    className: className\n  }, sanitizeFieldRestProps(rest)), value != null && typeof value !== 'string' ? JSON.stringify(value) : value || emptyText);\n});\n// what? TypeScript loses the displayName if we don't set it explicitly\nTextField.displayName = 'TextField';\nTextField.propTypes = __assign(__assign({}, Typography.propTypes), fieldPropTypes);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,IAAI,QAAyB,OAAO;AAC7C,OAAOC,GAAG,MAAM,YAAY;AAC5B,OAAOC,UAA+B,MAAM,0BAA0B;AACtE,SAASC,gBAAgB,QAAQ,SAAS;AAE1C,SAASC,sBAAsB,QAAQ,0BAA0B;AACjE,SAA+CC,cAAc,QAAQ,SAAS;AAE9E,OAAO,IAAMC,SAAS,GAAuBN,IAAI,CAAC,eAAK;EAC3C,aAAS,GAAiCO,KAAK,UAAtC;IAAEC,MAAM,GAAyBD,KAAK,OAA9B;IAAEE,SAAS,GAAcF,KAAK,UAAnB;IAAKG,IAAI,UAAKH,KAAK,EAAjD,oCAAyC,CAAF;EAC7C,IAAMI,MAAM,GAAGR,gBAAgB,CAACI,KAAK,CAAC;EACtC,IAAMK,KAAK,GAAGX,GAAG,CAACU,MAAM,EAAEH,MAAM,CAAC;EAEjC,OACIT,oBAACG,UAAU;IACPW,SAAS,EAAC,MAAM;IAChBC,OAAO,EAAC,OAAO;IACfC,SAAS,EAAEA;EAAS,GAChBX,sBAAsB,CAACM,IAAI,CAAC,GAE/BE,KAAK,IAAI,IAAI,IAAI,OAAOA,KAAK,KAAK,QAAQ,GACrCI,IAAI,CAACC,SAAS,CAACL,KAAK,CAAC,GACrBA,KAAK,IAAIH,SAAS,CACf;AAErB,CAAC,CAAC;AAEF;AACAH,SAAS,CAACY,WAAW,GAAG,WAAW;AAEnCZ,SAAS,CAACa,SAAS,yBAEZjB,UAAU,CAACiB,SAAS,GACpBd,cAAc,CACpB","names":["React","memo","get","Typography","useRecordContext","sanitizeFieldRestProps","fieldPropTypes","TextField","props","source","emptyText","rest","record","value","component","variant","className","JSON","stringify","displayName","propTypes"],"sourceRoot":"","sources":["../../../src/field/TextField.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
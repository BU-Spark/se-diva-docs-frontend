{"ast":null,"code":"import { useLocaleState } from './useLocaleState';\n/**\n * Set the current locale in the I18nContext and re-render the app when the locale changes.\n *\n * @example\n *\n * import { useSetLocale } from 'react-admin';\n *\n * const availableLanguages = {\n *     en: 'English',\n *     fr: 'FranÃ§ais',\n * }\n * const LanguageSwitcher = () => {\n *     const setLocale = useSetLocale();\n *     return (\n *         <ul>{\n *             Object.keys(availableLanguages).map(locale => {\n *                  <li key={locale} onClick={() => setLocale(locale)}>\n *                      {availableLanguages[locale]}\n *                  </li>\n *              })\n *         }</ul>\n *     );\n * }\n *\n * @deprecated use useLocaleState instead\n */\nexport var useSetLocale = function () {\n  var _a = useLocaleState(),\n    setLocale = _a[1];\n  return setLocale;\n};","map":{"version":3,"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AAEjD;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAO,IAAMC,YAAY,GAAG;EAClB,SAAgBD,cAAc,EAAE;IAA7BE,SAAS,QAAoB;EACtC,OAAOA,SAAS;AACpB,CAAC","names":["useLocaleState","useSetLocale","setLocale"],"sourceRoot":"","sources":["../../../src/i18n/useSetLocale.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
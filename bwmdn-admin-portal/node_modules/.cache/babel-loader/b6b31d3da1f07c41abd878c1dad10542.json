{"ast":null,"code":"import * as React from 'react';\nimport { useState } from 'react';\nimport { useLocaleState, useLocales } from 'ra-core';\nimport { Box, Button, Menu, MenuItem, styled } from '@mui/material';\nimport LanguageIcon from '@mui/icons-material/Translate';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n/**\n * Language selector. Changes the locale in the app and persists it in\n * preferences so that the app opens with the right locale in the future.\n *\n * @example\n *\n *     const MyAppBar: FC = props => (\n *         <AppBar {...props}>\n *             <Box flex=\"1\">\n *                 <Typography variant=\"h6\" id=\"react-admin-title\"></Typography>\n *             </Box>\n *             <LocalesMenuButton\n *                 languages={[\n *                     { locale: 'en', name: 'English' },\n *                     { locale: 'fr', name: 'FranÃ§ais' },\n *                 ]}\n *             />\n *         </AppBar>\n *     );\n */\nexport var LocalesMenuButton = function (props) {\n  var _a = useState(null),\n    anchorEl = _a[0],\n    setAnchorEl = _a[1];\n  var languages = useLocales({\n    locales: props.languages\n  });\n  var _b = useLocaleState(),\n    locale = _b[0],\n    setLocale = _b[1];\n  var getNameForLocale = function (locale) {\n    var language = languages.find(function (language) {\n      return language.locale === locale;\n    });\n    return language ? language.name : '';\n  };\n  var changeLocale = function (locale) {\n    return function () {\n      setLocale(locale);\n      setAnchorEl(null);\n    };\n  };\n  var handleLanguageClick = function (event) {\n    setAnchorEl(event.currentTarget);\n  };\n  var handleClose = function () {\n    setAnchorEl(null);\n  };\n  return React.createElement(Root, {\n    component: \"span\"\n  }, React.createElement(Button, {\n    color: \"inherit\",\n    \"aria-controls\": \"simple-menu\",\n    \"aria-label\": \"\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleLanguageClick,\n    startIcon: React.createElement(LanguageIcon, null),\n    endIcon: React.createElement(ExpandMoreIcon, {\n      fontSize: \"small\"\n    })\n  }, getNameForLocale(locale)), React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose\n  }, languages.map(function (language) {\n    return React.createElement(MenuItem, {\n      key: language.locale,\n      onClick: changeLocale(language.locale),\n      selected: language.locale === locale\n    }, language.name);\n  })));\n};\nvar PREFIX = 'RaLocalesMenuButton';\nexport var LocalesMenuButtonClasses = {};\nvar Root = styled(Box, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})({});","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAqBC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,cAAc,EAAEC,UAAU,QAAQ,SAAS;AACpD,SAASC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,eAAe;AACnE,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,cAAc,MAAM,gCAAgC;AAE3D;;;;;;;;;;;;;;;;;;;;AAoBA,OAAO,IAAMC,iBAAiB,GAAG,UAACC,KAA6B;EACrD,SAA0BX,QAAQ,CAAqB,IAAI,CAAC;IAA3DY,QAAQ;IAAEC,WAAW,QAAsC;EAClE,IAAMC,SAAS,GAAGZ,UAAU,CAAC;IAAEa,OAAO,EAAEJ,KAAK,CAACG;EAAS,CAAE,CAAC;EACpD,SAAsBb,cAAc,EAAE;IAArCe,MAAM;IAAEC,SAAS,QAAoB;EAE5C,IAAMC,gBAAgB,GAAG,UAACF,MAAc;IACpC,IAAMG,QAAQ,GAAGL,SAAS,CAACM,IAAI,CAAC,kBAAQ;MAAI,eAAQ,CAACJ,MAAM,KAAKA,MAAM;IAA1B,CAA0B,CAAC;IACvE,OAAOG,QAAQ,GAAGA,QAAQ,CAACE,IAAI,GAAG,EAAE;EACxC,CAAC;EAED,IAAMC,YAAY,GAAG,UAACN,MAAc;IAAK;MACrCC,SAAS,CAACD,MAAM,CAAC;MACjBH,WAAW,CAAC,IAAI,CAAC;IACrB,CAAC;EAHwC,CAGxC;EAED,IAAMU,mBAAmB,GAAG,UAACC,KAA8B;IACvDX,WAAW,CAACW,KAAK,CAACC,aAAa,CAAC;EACpC,CAAC;EAED,IAAMC,WAAW,GAAG;IAChBb,WAAW,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,OACId,oBAAC4B,IAAI;IAACC,SAAS,EAAC;EAAM,GAClB7B,oBAACK,MAAM;IACHyB,KAAK,EAAC,SAAS;IAAA,iBACD,aAAa;IAAA,cAChB,EAAE;IAAA,iBACC,MAAM;IACpBC,OAAO,EAAEP,mBAAmB;IAC5BQ,SAAS,EAAEhC,oBAACS,YAAY,OAAG;IAC3BwB,OAAO,EAAEjC,oBAACU,cAAc;MAACwB,QAAQ,EAAC;IAAO;EAAG,GAE3Cf,gBAAgB,CAACF,MAAM,CAAC,CACpB,EACTjB,oBAACM,IAAI;IACD6B,EAAE,EAAC,aAAa;IAChBtB,QAAQ,EAAEA,QAAQ;IAClBuB,WAAW;IACXC,IAAI,EAAEC,OAAO,CAACzB,QAAQ,CAAC;IACvB0B,OAAO,EAAEZ;EAAW,GAEnBZ,SAAS,CAACyB,GAAG,CAAC,kBAAQ;IAAI,OACvBxC,oBAACO,QAAQ;MACLkC,GAAG,EAAErB,QAAQ,CAACH,MAAM;MACpBc,OAAO,EAAER,YAAY,CAACH,QAAQ,CAACH,MAAM,CAAC;MACtCyB,QAAQ,EAAEtB,QAAQ,CAACH,MAAM,KAAKA;IAAM,GAEnCG,QAAQ,CAACE,IAAI,CACP;EAPY,CAQ1B,CAAC,CACC,CACJ;AAEf,CAAC;AAED,IAAMqB,MAAM,GAAG,qBAAqB;AAEpC,OAAO,IAAMC,wBAAwB,GAAG,EAAE;AAE1C,IAAMhB,IAAI,GAAGpB,MAAM,CAACJ,GAAG,EAAE;EACrBkB,IAAI,EAAEqB,MAAM;EACZE,iBAAiB,EAAE,UAACjC,KAAK,EAAEkC,MAAM;IAAK,aAAM,CAACC,IAAI;EAAX;CACzC,CAAC,CAAC,EAAE,CAAC","names":["React","useState","useLocaleState","useLocales","Box","Button","Menu","MenuItem","styled","LanguageIcon","ExpandMoreIcon","LocalesMenuButton","props","anchorEl","setAnchorEl","languages","locales","locale","setLocale","getNameForLocale","language","find","name","changeLocale","handleLanguageClick","event","currentTarget","handleClose","Root","component","color","onClick","startIcon","endIcon","fontSize","id","keepMounted","open","Boolean","onClose","map","key","selected","PREFIX","LocalesMenuButtonClasses","overridesResolver","styles","root"],"sourceRoot":"","sources":["../../../src/button/LocalesMenuButton.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
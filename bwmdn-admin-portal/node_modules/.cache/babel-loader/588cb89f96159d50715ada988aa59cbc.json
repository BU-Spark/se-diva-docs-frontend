{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { Children, cloneElement, isValidElement, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Routes, Route, matchPath, useResolvedPath, useLocation } from 'react-router-dom';\nimport { CardContent, Divider } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useResourceContext } from 'ra-core';\nimport { Toolbar } from './Toolbar';\nimport { TabbedFormTabs, getTabbedFormTabFullPath } from './TabbedFormTabs';\nexport var TabbedFormView = function (props) {\n  var children = props.children,\n    className = props.className,\n    _a = props.component,\n    Component = _a === void 0 ? DefaultComponent : _a,\n    formRootPathname = props.formRootPathname,\n    _b = props.syncWithLocation,\n    syncWithLocation = _b === void 0 ? true : _b,\n    _c = props.tabs,\n    tabs = _c === void 0 ? DefaultTabs : _c,\n    _d = props.toolbar,\n    toolbar = _d === void 0 ? DefaultToolbar : _d,\n    rest = __rest(props, [\"children\", \"className\", \"component\", \"formRootPathname\", \"syncWithLocation\", \"tabs\", \"toolbar\"]);\n  var location = useLocation();\n  var resolvedPath = useResolvedPath('');\n  var resource = useResourceContext(props);\n  var _e = useState(0),\n    tabValue = _e[0],\n    setTabValue = _e[1];\n  var handleTabChange = function (event, value) {\n    if (!syncWithLocation) {\n      setTabValue(value);\n    }\n  };\n  var renderTabHeaders = function () {\n    return cloneElement(tabs, {\n      onChange: handleTabChange,\n      syncWithLocation: syncWithLocation,\n      url: formRootPathname,\n      value: tabValue\n    }, children);\n  };\n  return React.createElement(Root, __assign({\n    className: clsx('tabbed-form', className)\n  }, sanitizeRestProps(rest)), syncWithLocation ? React.createElement(Routes, null, React.createElement(Route, {\n    path: \"/*\",\n    element: renderTabHeaders()\n  })) : renderTabHeaders(), React.createElement(Divider, null), React.createElement(Component, null, Children.map(children, function (tab, index) {\n    if (!tab) {\n      return null;\n    }\n    var tabPath = getTabbedFormTabFullPath(tab, index);\n    var hidden = syncWithLocation ? !matchPath(\"\".concat(resolvedPath.pathname, \"/\").concat(tabPath), location.pathname) : tabValue !== index;\n    return isValidElement(tab) ? React.cloneElement(tab, {\n      intent: 'content',\n      resource: resource,\n      hidden: hidden,\n      value: syncWithLocation ? tabPath : index\n    }) : null;\n  })), toolbar !== false ? toolbar : null);\n};\nTabbedFormView.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  location: PropTypes.object,\n  match: PropTypes.object,\n  // @ts-ignore\n  resource: PropTypes.string,\n  tabs: PropTypes.element,\n  toolbar: PropTypes.oneOfType([PropTypes.element, PropTypes.oneOf([false])]),\n  validate: PropTypes.func,\n  value: PropTypes.number\n};\nvar DefaultTabs = React.createElement(TabbedFormTabs, null);\nvar DefaultComponent = function (_a) {\n  var children = _a.children;\n  return React.createElement(CardContent, null, children);\n};\nvar DefaultToolbar = React.createElement(Toolbar, null);\nvar PREFIX = 'RaTabbedForm';\nexport var TabbedFormClasses = {\n  errorTabButton: \"\".concat(PREFIX, \"-errorTabButton\")\n};\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .MuiTab-root.\".concat(TabbedFormClasses.errorTabButton)] = {\n    color: theme.palette.error.main\n  }, _b;\n});\nvar sanitizeRestProps = function (_a) {\n  var record = _a.record,\n    resource = _a.resource,\n    rest = __rest(_a, [\"record\", \"resource\"]);\n  return rest;\n};","map":{"version":3,"mappings":"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","names":["React","Children","cloneElement","isValidElement","useState","PropTypes","clsx","Routes","Route","matchPath","useResolvedPath","useLocation","CardContent","Divider","styled","useResourceContext","Toolbar","TabbedFormTabs","getTabbedFormTabFullPath","TabbedFormView","props","className","_a","Component","DefaultComponent","formRootPathname","_b","syncWithLocation","_c","tabs","DefaultTabs","_d","toolbar","DefaultToolbar","rest","location","resolvedPath","resource","tabValue","setTabValue","handleTabChange","event","value","renderTabHeaders","onChange","url","children","Root","sanitizeRestProps","path","element","map","tab","index","tabPath","hidden","pathname","intent","propTypes","node","string","object","match","oneOfType","oneOf","validate","func","number","PREFIX","TabbedFormClasses","errorTabButton","name","overridesResolver","styles","root","theme","color","palette","error","main"],"sourceRoot":"","sources":["../../../src/form/TabbedFormView.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
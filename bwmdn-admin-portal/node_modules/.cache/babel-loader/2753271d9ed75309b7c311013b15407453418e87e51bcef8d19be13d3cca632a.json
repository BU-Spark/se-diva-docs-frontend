{"ast":null,"code":"import * as React from 'react';\nimport { useCallback, useMemo, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { useAuthProvider, useGetIdentity, useTranslate } from 'ra-core';\nimport { Tooltip, IconButton, Menu, Button, Avatar, useMediaQuery } from '@mui/material';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport { UserMenuContextProvider } from './UserMenuContextProvider';\nimport { Logout } from '../auth/Logout';\n/**\n * The UserMenu component renders a Mui Button that shows a Menu.\n * It accepts children that must be Mui MenuItem components.\n *\n * @example\n * import { Logout, UserMenu, useUserMenu } from 'react-admin';\n * import MenuItem from '@mui/material/MenuItem';\n * import ListItemIcon from '@mui/material/ListItemIcon';\n * import ListItemText from '@mui/material/ListItemText';\n * import SettingsIcon from '@mui/icons-material/Settings';\n\n * const ConfigurationMenu = React.forwardRef((props, ref) => {\n *     const { onClose } = useUserMenu();\n *     return (\n *         <MenuItem\n *             ref={ref}\n *             {...props}\n *             to=\"/configuration\"\n *             onClick={onClose}\n *         >\n *             <ListItemIcon>\n *                 <SettingsIcon />\n *             </ListItemIcon>\n *             <ListItemText>Configuration</ListItemText>\n *         </MenuItem>\n *     );\n * });\n *\n * export const MyUserMenu = () => (\n *     <UserMenu>\n *         <ConfigurationMenu />\n *         <Logout />\n *     </UserMenu>\n * );\n * @param props\n * @param {ReactNode} props.children React node/s to be rendered as children of the UserMenu. Must be Mui MenuItem components\n * @param {string} props.className CSS class applied to the MuiAppBar component\n * @param {string} props.label The label of the UserMenu button. Accepts translation keys\n * @param {Element} props.icon The icon of the UserMenu button.\n *\n */\nexport var UserMenu = function (props) {\n  var _a = useState(null),\n    anchorEl = _a[0],\n    setAnchorEl = _a[1];\n  var translate = useTranslate();\n  var _b = useGetIdentity(),\n    isLoading = _b.isLoading,\n    identity = _b.identity;\n  var authProvider = useAuthProvider();\n  var isLargeEnough = useMediaQuery(function (theme) {\n    return theme.breakpoints.up('sm');\n  });\n  var _c = props.children,\n    children = _c === void 0 ? !!authProvider ? React.createElement(Logout, null) : null : _c,\n    className = props.className,\n    _d = props.label,\n    label = _d === void 0 ? 'ra.auth.user_menu' : _d,\n    _e = props.icon,\n    icon = _e === void 0 ? defaultIcon : _e;\n  var handleMenu = function (event) {\n    return setAnchorEl(event.currentTarget);\n  };\n  var handleClose = useCallback(function () {\n    return setAnchorEl(null);\n  }, []);\n  var context = useMemo(function () {\n    return {\n      onClose: handleClose\n    };\n  }, [handleClose]);\n  if (!children) return null;\n  var open = Boolean(anchorEl);\n  return React.createElement(Root, {\n    className: className\n  }, isLargeEnough && !isLoading && (identity === null || identity === void 0 ? void 0 : identity.fullName) ? React.createElement(Button, {\n    \"aria-label\": label && translate(label, {\n      _: label\n    }),\n    className: UserMenuClasses.userButton,\n    color: \"inherit\",\n    startIcon: identity.avatar ? React.createElement(Avatar, {\n      className: UserMenuClasses.avatar,\n      src: identity.avatar,\n      alt: identity.fullName\n    }) : icon,\n    onClick: handleMenu\n  }, identity.fullName) : React.createElement(Tooltip, {\n    title: label && translate(label, {\n      _: label\n    })\n  }, React.createElement(IconButton, {\n    \"aria-label\": label && translate(label, {\n      _: label\n    }),\n    \"aria-owns\": open ? 'menu-appbar' : null,\n    \"aria-haspopup\": true,\n    color: \"inherit\",\n    onClick: handleMenu\n  }, !isLoading && (identity === null || identity === void 0 ? void 0 : identity.avatar) ? React.createElement(Avatar, {\n    className: UserMenuClasses.avatar,\n    src: identity.avatar,\n    alt: identity.fullName\n  }) : icon)), React.createElement(UserMenuContextProvider, {\n    value: context\n  }, React.createElement(Menu, {\n    id: \"menu-appbar\",\n    disableScrollLock: true,\n    anchorEl: anchorEl,\n    anchorOrigin: AnchorOrigin,\n    transformOrigin: TransformOrigin,\n    open: open,\n    onClose: handleClose\n  }, children)));\n};\nUserMenu.propTypes = {\n  children: PropTypes.node,\n  classes: PropTypes.object,\n  label: PropTypes.string,\n  icon: PropTypes.node\n};\nvar PREFIX = 'RaUserMenu';\nexport var UserMenuClasses = {\n  userButton: \"\".concat(PREFIX, \"-userButton\"),\n  avatar: \"\".concat(PREFIX, \"-avatar\")\n};\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .\".concat(UserMenuClasses.userButton)] = {\n    textTransform: 'none'\n  }, _b[\"& .\".concat(UserMenuClasses.avatar)] = {\n    width: theme.spacing(4),\n    height: theme.spacing(4)\n  }, _b;\n});\nvar defaultIcon = React.createElement(AccountCircle, null);\nvar AnchorOrigin = {\n  vertical: 'bottom',\n  horizontal: 'right'\n};\nvar TransformOrigin = {\n  vertical: 'top',\n  horizontal: 'right'\n};","map":{"version":3,"mappings":"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","names":["React","useCallback","useMemo","useState","styled","PropTypes","useAuthProvider","useGetIdentity","useTranslate","Tooltip","IconButton","Menu","Button","Avatar","useMediaQuery","AccountCircle","UserMenuContextProvider","Logout","UserMenu","props","anchorEl","setAnchorEl","translate","isLoading","identity","authProvider","isLargeEnough","breakpoints","up","children","className","_d","label","_e","icon","defaultIcon","handleMenu","event","currentTarget","handleClose","context","onClose","open","Boolean","Root","fullName","_","UserMenuClasses","userButton","color","startIcon","avatar","src","alt","onClick","title","value","id","disableScrollLock","anchorOrigin","AnchorOrigin","transformOrigin","TransformOrigin","propTypes","node","classes","object","string","PREFIX","name","overridesResolver","styles","root","_a","theme","_b","textTransform","width","spacing","height","vertical","horizontal"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/ra-ui-materialui/src/layout/UserMenu.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactNode, useCallback, useMemo, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { useAuthProvider, useGetIdentity, useTranslate } from 'ra-core';\nimport {\n    Tooltip,\n    IconButton,\n    Menu,\n    Button,\n    Avatar,\n    PopoverOrigin,\n    useMediaQuery,\n    Theme,\n} from '@mui/material';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport { UserMenuContextProvider } from './UserMenuContextProvider';\nimport { Logout } from '../auth/Logout';\n\n/**\n * The UserMenu component renders a Mui Button that shows a Menu.\n * It accepts children that must be Mui MenuItem components.\n *\n * @example\n * import { Logout, UserMenu, useUserMenu } from 'react-admin';\n * import MenuItem from '@mui/material/MenuItem';\n * import ListItemIcon from '@mui/material/ListItemIcon';\n * import ListItemText from '@mui/material/ListItemText';\n * import SettingsIcon from '@mui/icons-material/Settings';\n\n * const ConfigurationMenu = React.forwardRef((props, ref) => {\n *     const { onClose } = useUserMenu();\n *     return (\n *         <MenuItem\n *             ref={ref}\n *             {...props}\n *             to=\"/configuration\"\n *             onClick={onClose}\n *         >\n *             <ListItemIcon>\n *                 <SettingsIcon />\n *             </ListItemIcon>\n *             <ListItemText>Configuration</ListItemText>\n *         </MenuItem>\n *     );\n * });\n *\n * export const MyUserMenu = () => (\n *     <UserMenu>\n *         <ConfigurationMenu />\n *         <Logout />\n *     </UserMenu>\n * );\n * @param props\n * @param {ReactNode} props.children React node/s to be rendered as children of the UserMenu. Must be Mui MenuItem components\n * @param {string} props.className CSS class applied to the MuiAppBar component\n * @param {string} props.label The label of the UserMenu button. Accepts translation keys\n * @param {Element} props.icon The icon of the UserMenu button.\n *\n */\nexport const UserMenu = (props: UserMenuProps) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const translate = useTranslate();\n    const { isLoading, identity } = useGetIdentity();\n    const authProvider = useAuthProvider();\n    const isLargeEnough = useMediaQuery<Theme>(theme =>\n        theme.breakpoints.up('sm')\n    );\n\n    const {\n        children = !!authProvider ? <Logout /> : null,\n        className,\n        label = 'ra.auth.user_menu',\n        icon = defaultIcon,\n    } = props;\n\n    const handleMenu = event => setAnchorEl(event.currentTarget);\n    const handleClose = useCallback(() => setAnchorEl(null), []);\n    const context = useMemo(() => ({ onClose: handleClose }), [handleClose]);\n    if (!children) return null;\n    const open = Boolean(anchorEl);\n\n    return (\n        <Root className={className}>\n            {isLargeEnough && !isLoading && identity?.fullName ? (\n                <Button\n                    aria-label={label && translate(label, { _: label })}\n                    className={UserMenuClasses.userButton}\n                    color=\"inherit\"\n                    startIcon={\n                        identity.avatar ? (\n                            <Avatar\n                                className={UserMenuClasses.avatar}\n                                src={identity.avatar}\n                                alt={identity.fullName}\n                            />\n                        ) : (\n                            icon\n                        )\n                    }\n                    onClick={handleMenu}\n                >\n                    {identity.fullName}\n                </Button>\n            ) : (\n                <Tooltip title={label && translate(label, { _: label })}>\n                    <IconButton\n                        aria-label={label && translate(label, { _: label })}\n                        aria-owns={open ? 'menu-appbar' : null}\n                        aria-haspopup={true}\n                        color=\"inherit\"\n                        onClick={handleMenu}\n                    >\n                        {!isLoading && identity?.avatar ? (\n                            <Avatar\n                                className={UserMenuClasses.avatar}\n                                src={identity.avatar}\n                                alt={identity.fullName}\n                            />\n                        ) : (\n                            icon\n                        )}\n                    </IconButton>\n                </Tooltip>\n            )}\n            <UserMenuContextProvider value={context}>\n                <Menu\n                    id=\"menu-appbar\"\n                    disableScrollLock\n                    anchorEl={anchorEl}\n                    anchorOrigin={AnchorOrigin}\n                    transformOrigin={TransformOrigin}\n                    open={open}\n                    onClose={handleClose}\n                >\n                    {children}\n                </Menu>\n            </UserMenuContextProvider>\n        </Root>\n    );\n};\n\nUserMenu.propTypes = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    label: PropTypes.string,\n    icon: PropTypes.node,\n};\n\nexport interface UserMenuProps {\n    children?: ReactNode;\n    className?: string;\n    label?: string;\n    icon?: ReactNode;\n}\n\nconst PREFIX = 'RaUserMenu';\n\nexport const UserMenuClasses = {\n    userButton: `${PREFIX}-userButton`,\n    avatar: `${PREFIX}-avatar`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${UserMenuClasses.userButton}`]: {\n        textTransform: 'none',\n    },\n\n    [`& .${UserMenuClasses.avatar}`]: {\n        width: theme.spacing(4),\n        height: theme.spacing(4),\n    },\n}));\n\nconst defaultIcon = <AccountCircle />;\n\nconst AnchorOrigin: PopoverOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right',\n};\n\nconst TransformOrigin: PopoverOrigin = {\n    vertical: 'top',\n    horizontal: 'right',\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Children, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { AppBar as MuiAppBar, Toolbar, Typography, useMediaQuery } from '@mui/material';\nimport { ComponentPropType, useLocales } from 'ra-core';\nimport { SidebarToggleButton } from './SidebarToggleButton';\nimport { LoadingIndicator } from './LoadingIndicator';\nimport { UserMenu } from './UserMenu';\nimport { HideOnScroll } from './HideOnScroll';\nimport { LocalesMenuButton } from '../button';\n/**\n * The AppBar component renders a custom MuiAppBar.\n *\n * @param {Object} props\n * @param {ReactNode} props.children React node/s to be rendered as children of the AppBar\n * @param {string} props.className CSS class applied to the MuiAppBar component\n * @param {string} props.color The color of the AppBar\n * @param {boolean} props.open State of the <Admin/> Sidebar\n * @param {Element | boolean} props.userMenu A custom user menu component for the AppBar. <UserMenu/> component by default. Pass false to disable.\n *\n * @example\n *\n * const MyAppBar = props => {\n\n *   return (\n *       <AppBar {...props}>\n *           <Typography\n *               variant=\"h6\"\n *               color=\"inherit\"\n *               className={classes.title}\n *               id=\"react-admin-title\"\n *           />\n *       </AppBar>\n *   );\n *};\n *\n * @example Without a user menu\n *\n * const MyAppBar = props => {\n\n *   return (\n *       <AppBar {...props} userMenu={false} />\n *   );\n *};\n */\nexport var AppBar = memo(function (props) {\n  var children = props.children,\n    className = props.className,\n    _a = props.color,\n    color = _a === void 0 ? 'secondary' : _a,\n    open = props.open,\n    title = props.title,\n    _b = props.userMenu,\n    userMenu = _b === void 0 ? DefaultUserMenu : _b,\n    _c = props.container,\n    Container = _c === void 0 ? HideOnScroll : _c,\n    rest = __rest(props, [\"children\", \"className\", \"color\", \"open\", \"title\", \"userMenu\", \"container\"]);\n  var locales = useLocales();\n  var isXSmall = useMediaQuery(function (theme) {\n    return theme.breakpoints.down('sm');\n  });\n  return React.createElement(Container, {\n    className: className\n  }, React.createElement(StyledAppBar, __assign({\n    className: AppBarClasses.appBar,\n    color: color\n  }, rest), React.createElement(Toolbar, {\n    disableGutters: true,\n    variant: isXSmall ? 'regular' : 'dense',\n    className: AppBarClasses.toolbar\n  }, React.createElement(SidebarToggleButton, {\n    className: AppBarClasses.menuButton\n  }), Children.count(children) === 0 ? React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"inherit\",\n    className: AppBarClasses.title,\n    id: \"react-admin-title\"\n  }) : children, locales && locales.length > 1 ? React.createElement(LocalesMenuButton, null) : null, React.createElement(LoadingIndicator, null), typeof userMenu === 'boolean' ? userMenu === true ? React.createElement(UserMenu, null) : null : userMenu)));\n});\nAppBar.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary', 'transparent']),\n  container: ComponentPropType,\n  // @deprecated\n  open: PropTypes.bool,\n  userMenu: PropTypes.oneOfType([PropTypes.element, PropTypes.bool])\n};\nvar DefaultUserMenu = React.createElement(UserMenu, null);\nvar PREFIX = 'RaAppBar';\nexport var AppBarClasses = {\n  appBar: \"\".concat(PREFIX, \"-appBar\"),\n  toolbar: \"\".concat(PREFIX, \"-toolbar\"),\n  menuButton: \"\".concat(PREFIX, \"-menuButton\"),\n  menuButtonIconClosed: \"\".concat(PREFIX, \"-menuButtonIconClosed\"),\n  menuButtonIconOpen: \"\".concat(PREFIX, \"-menuButtonIconOpen\"),\n  title: \"\".concat(PREFIX, \"-title\")\n};\nvar StyledAppBar = styled(MuiAppBar, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b, _c;\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .\".concat(AppBarClasses.toolbar)] = (_c = {\n    padding: \"0 \".concat(theme.spacing(1))\n  }, _c[theme.breakpoints.down('md')] = {\n    minHeight: theme.spacing(6)\n  }, _c), _b[\"& .\".concat(AppBarClasses.menuButton)] = {\n    marginRight: '0.2em'\n  }, _b[\"& .\".concat(AppBarClasses.title)] = {\n    flex: 1,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden'\n  }, _b;\n});","map":{"version":3,"mappings":"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","names":["React","styled","Children","memo","PropTypes","AppBar","MuiAppBar","Toolbar","Typography","useMediaQuery","ComponentPropType","useLocales","SidebarToggleButton","LoadingIndicator","UserMenu","HideOnScroll","LocalesMenuButton","props","className","_a","color","open","title","_b","userMenu","DefaultUserMenu","_c","Container","rest","locales","isXSmall","breakpoints","down","StyledAppBar","AppBarClasses","appBar","disableGutters","variant","toolbar","menuButton","count","children","id","length","propTypes","node","string","oneOf","container","bool","oneOfType","element","PREFIX","menuButtonIconClosed","menuButtonIconOpen","name","overridesResolver","styles","root","theme","padding","spacing","minHeight","marginRight","flex","textOverflow","whiteSpace","overflow"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/ra-ui-materialui/src/layout/AppBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { FC } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Children, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    AppBar as MuiAppBar,\n    AppBarProps as MuiAppBarProps,\n    Toolbar,\n    Typography,\n    useMediaQuery,\n    Theme,\n} from '@mui/material';\nimport { ComponentPropType, useLocales } from 'ra-core';\n\nimport { SidebarToggleButton } from './SidebarToggleButton';\nimport { LoadingIndicator } from './LoadingIndicator';\nimport { UserMenu } from './UserMenu';\nimport { HideOnScroll } from './HideOnScroll';\nimport { LocalesMenuButton } from '../button';\n\n/**\n * The AppBar component renders a custom MuiAppBar.\n *\n * @param {Object} props\n * @param {ReactNode} props.children React node/s to be rendered as children of the AppBar\n * @param {string} props.className CSS class applied to the MuiAppBar component\n * @param {string} props.color The color of the AppBar\n * @param {boolean} props.open State of the <Admin/> Sidebar\n * @param {Element | boolean} props.userMenu A custom user menu component for the AppBar. <UserMenu/> component by default. Pass false to disable.\n *\n * @example\n *\n * const MyAppBar = props => {\n\n *   return (\n *       <AppBar {...props}>\n *           <Typography\n *               variant=\"h6\"\n *               color=\"inherit\"\n *               className={classes.title}\n *               id=\"react-admin-title\"\n *           />\n *       </AppBar>\n *   );\n *};\n *\n * @example Without a user menu\n *\n * const MyAppBar = props => {\n\n *   return (\n *       <AppBar {...props} userMenu={false} />\n *   );\n *};\n */\nexport const AppBar: FC<AppBarProps> = memo(props => {\n    const {\n        children,\n        className,\n        color = 'secondary',\n        open,\n        title,\n        userMenu = DefaultUserMenu,\n        container: Container = HideOnScroll,\n        ...rest\n    } = props;\n\n    const locales = useLocales();\n    const isXSmall = useMediaQuery<Theme>(theme =>\n        theme.breakpoints.down('sm')\n    );\n\n    return (\n        <Container className={className}>\n            <StyledAppBar\n                className={AppBarClasses.appBar}\n                color={color}\n                {...rest}\n            >\n                <Toolbar\n                    disableGutters\n                    variant={isXSmall ? 'regular' : 'dense'}\n                    className={AppBarClasses.toolbar}\n                >\n                    <SidebarToggleButton className={AppBarClasses.menuButton} />\n                    {Children.count(children) === 0 ? (\n                        <Typography\n                            variant=\"h6\"\n                            color=\"inherit\"\n                            className={AppBarClasses.title}\n                            id=\"react-admin-title\"\n                        />\n                    ) : (\n                        children\n                    )}\n                    {locales && locales.length > 1 ? (\n                        <LocalesMenuButton />\n                    ) : null}\n                    <LoadingIndicator />\n                    {typeof userMenu === 'boolean' ? (\n                        userMenu === true ? (\n                            <UserMenu />\n                        ) : null\n                    ) : (\n                        userMenu\n                    )}\n                </Toolbar>\n            </StyledAppBar>\n        </Container>\n    );\n});\n\nAppBar.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    color: PropTypes.oneOf([\n        'default',\n        'inherit',\n        'primary',\n        'secondary',\n        'transparent',\n    ]),\n    container: ComponentPropType,\n    // @deprecated\n    open: PropTypes.bool,\n    userMenu: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n};\n\nconst DefaultUserMenu = <UserMenu />;\n\nexport interface AppBarProps extends Omit<MuiAppBarProps, 'title'> {\n    container?: React.ElementType<any>;\n    // @deprecated\n    open?: boolean;\n    title?: string | JSX.Element;\n    userMenu?: JSX.Element | boolean;\n}\n\nconst PREFIX = 'RaAppBar';\n\nexport const AppBarClasses = {\n    appBar: `${PREFIX}-appBar`,\n    toolbar: `${PREFIX}-toolbar`,\n    menuButton: `${PREFIX}-menuButton`,\n    menuButtonIconClosed: `${PREFIX}-menuButtonIconClosed`,\n    menuButtonIconOpen: `${PREFIX}-menuButtonIconOpen`,\n    title: `${PREFIX}-title`,\n};\n\nconst StyledAppBar = styled(MuiAppBar, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${AppBarClasses.toolbar}`]: {\n        padding: `0 ${theme.spacing(1)}`,\n        [theme.breakpoints.down('md')]: {\n            minHeight: theme.spacing(6),\n        },\n    },\n    [`& .${AppBarClasses.menuButton}`]: {\n        marginRight: '0.2em',\n    },\n    [`& .${AppBarClasses.title}`]: {\n        flex: 1,\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    },\n}));\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
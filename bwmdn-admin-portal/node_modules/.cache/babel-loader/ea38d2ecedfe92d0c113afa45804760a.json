{"ast":null,"code":"import * as React from 'react';\nimport { Children, isValidElement, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useListContext, useResourceContext, useTranslate } from 'ra-core';\nimport { Checkbox, TableCell, TableHead, TableRow } from '@mui/material';\nimport clsx from 'clsx';\nimport DatagridHeaderCell from './DatagridHeaderCell';\nimport { DatagridClasses } from './useDatagridStyles';\nimport ExpandAllButton from './ExpandAllButton';\nimport { useDatagridContext } from './useDatagridContext';\n/**\n * The default Datagrid Header component.\n *\n * Renders select all checkbox as well as column header buttons used for sorting.\n */\nexport var DatagridHeader = function (props) {\n  var children = props.children,\n    className = props.className,\n    _a = props.hasExpand,\n    hasExpand = _a === void 0 ? false : _a,\n    _b = props.hasBulkActions,\n    hasBulkActions = _b === void 0 ? false : _b,\n    isRowSelectable = props.isRowSelectable;\n  var resource = useResourceContext(props);\n  var translate = useTranslate();\n  var _c = useListContext(props),\n    sort = _c.sort,\n    data = _c.data,\n    onSelect = _c.onSelect,\n    selectedIds = _c.selectedIds,\n    setSort = _c.setSort;\n  var expandSingle = useDatagridContext().expandSingle;\n  var updateSortCallback = useCallback(function (event) {\n    event.stopPropagation();\n    var newField = event.currentTarget.dataset.field;\n    var newOrder = sort.field === newField ? sort.order === 'ASC' ? 'DESC' : 'ASC' : event.currentTarget.dataset.order;\n    setSort({\n      field: newField,\n      order: newOrder\n    });\n  }, [sort.field, sort.order, setSort]);\n  var updateSort = setSort ? updateSortCallback : null;\n  var handleSelectAll = useCallback(function (event) {\n    return onSelect(event.target.checked ? selectedIds.concat(data.filter(function (record) {\n      return !selectedIds.includes(record.id);\n    }).filter(function (record) {\n      return isRowSelectable ? isRowSelectable(record) : true;\n    }).map(function (record) {\n      return record.id;\n    })) : []);\n  }, [data, onSelect, isRowSelectable, selectedIds]);\n  var selectableIds = Array.isArray(data) ? isRowSelectable ? data.filter(function (record) {\n    return isRowSelectable(record);\n  }).map(function (record) {\n    return record.id;\n  }) : data.map(function (record) {\n    return record.id;\n  }) : [];\n  return React.createElement(TableHead, {\n    className: clsx(className, DatagridClasses.thead)\n  }, React.createElement(TableRow, {\n    className: clsx(DatagridClasses.row, DatagridClasses.headerRow)\n  }, hasExpand && React.createElement(TableCell, {\n    padding: \"none\",\n    className: clsx(DatagridClasses.headerCell, DatagridClasses.expandHeader)\n  }, !expandSingle ? React.createElement(ExpandAllButton, {\n    resource: resource,\n    ids: data.map(function (record) {\n      return record.id;\n    })\n  }) : null), hasBulkActions && selectedIds && React.createElement(TableCell, {\n    padding: \"checkbox\",\n    className: DatagridClasses.headerCell\n  }, React.createElement(Checkbox, {\n    \"aria-label\": translate('ra.action.select_all', {\n      _: 'Select all'\n    }),\n    className: \"select-all\",\n    color: \"primary\",\n    checked: selectedIds.length > 0 && selectableIds.length > 0 && selectableIds.every(function (id) {\n      return selectedIds.includes(id);\n    }),\n    onChange: handleSelectAll\n  })), Children.map(children, function (field, index) {\n    return isValidElement(field) ? React.createElement(DatagridHeaderCell, {\n      className: clsx(DatagridClasses.headerCell, \"column-\".concat(field.props.source)),\n      sort: sort,\n      field: field,\n      isSorting: sort.field === (field.props.sortBy || field.props.source),\n      key: field.props.source || index,\n      resource: resource,\n      updateSort: updateSort\n    }) : null;\n  })));\n};\nDatagridHeader.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  sort: PropTypes.exact({\n    field: PropTypes.string,\n    order: PropTypes.string\n  }),\n  data: PropTypes.arrayOf(PropTypes.any),\n  hasExpand: PropTypes.bool,\n  hasBulkActions: PropTypes.bool,\n  isRowSelectable: PropTypes.func,\n  isRowExpandable: PropTypes.func,\n  onSelect: PropTypes.func,\n  onToggleItem: PropTypes.func,\n  resource: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  setSort: PropTypes.func\n};\nDatagridHeader.displayName = 'DatagridHeader';","map":{"version":3,"mappings":"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","names":["React","Children","isValidElement","useCallback","PropTypes","useListContext","useResourceContext","useTranslate","Checkbox","TableCell","TableHead","TableRow","clsx","DatagridHeaderCell","DatagridClasses","ExpandAllButton","useDatagridContext","DatagridHeader","props","className","_a","hasExpand","_b","hasBulkActions","isRowSelectable","resource","translate","sort","data","onSelect","selectedIds","setSort","updateSortCallback","event","stopPropagation","newField","currentTarget","dataset","field","newOrder","order","updateSort","handleSelectAll","target","checked","concat","filter","includes","record","id","map","selectableIds","Array","isArray","thead","row","headerRow","padding","headerCell","expandHeader","expandSingle","ids","_","color","length","every","onChange","children","index","source","isSorting","sortBy","key","propTypes","node","string","exact","arrayOf","any","bool","func","isRowExpandable","onToggleItem","displayName"],"sourceRoot":"","sources":["../../../../src/list/datagrid/DatagridHeader.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { useEffect } from 'react';\nimport { useCheckAuth } from './useCheckAuth';\n/**\n * Restrict access to authenticated users.\n * Redirect anonymous users to the login page.\n *\n * Use it in your custom page components to require\n * authentication.\n *\n * You can set additional `authParams` at will if your authProvider\n * requires it.\n *\n * @example\n *     import { Admin, CustomRoutes, useAuthenticated } from 'react-admin';\n *     const FooPage = () => {\n *         useAuthenticated();\n *         return <Foo />;\n *     }\n *     const customRoutes = [\n *         <Route path=\"/foo\" element={<FooPage />} />\n *     ];\n *     const App = () => (\n *         <Admin>\n *             <CustomRoutes>{customRoutes}</CustomRoutes>\n *         </Admin>\n *     );\n */\nexport var useAuthenticated = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _a = options.enabled,\n    enabled = _a === void 0 ? true : _a,\n    _b = options.params,\n    params = _b === void 0 ? emptyParams : _b;\n  var checkAuth = useCheckAuth();\n  useEffect(function () {\n    if (enabled) {\n      checkAuth(params).catch(function () {});\n    }\n  }, [checkAuth, enabled, params]);\n};\nvar emptyParams = {};","map":{"version":3,"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,YAAY,QAAQ,gBAAgB;AAE7C;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAO,IAAMC,gBAAgB,GAAG,UAC5BC,OAAiD;EAAjD;IAAAA,YAAiD;EAAA;EAEzC,SAAyCA,OAAO,QAAlC;IAAdC,OAAO,mBAAG,IAAI;IAAEC,KAAyBF,OAAO,OAAZ;IAApBG,MAAM,mBAAGC,WAAW;EAC5C,IAAMC,SAAS,GAAGP,YAAY,EAAE;EAChCD,SAAS,CAAC;IACN,IAAII,OAAO,EAAE;MACTI,SAAS,CAACF,MAAM,CAAC,CAACG,KAAK,CAAC,aAAO,CAAC,CAAC;;EAEzC,CAAC,EAAE,CAACD,SAAS,EAAEJ,OAAO,EAAEE,MAAM,CAAC,CAAC;AACpC,CAAC;AAOD,IAAMC,WAAW,GAAG,EAAE","names":["useEffect","useCheckAuth","useAuthenticated","options","enabled","_b","params","emptyParams","checkAuth","catch"],"sourceRoot":"","sources":["../../../src/auth/useAuthenticated.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
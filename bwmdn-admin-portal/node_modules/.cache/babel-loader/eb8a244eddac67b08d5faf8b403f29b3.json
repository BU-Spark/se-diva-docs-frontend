{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@mui/material';\nimport { useReferenceOneFieldController, useRecordContext, ResourceContextProvider, useCreatePath, useTranslate } from 'ra-core';\nimport { fieldPropTypes } from './types';\nimport { ReferenceFieldView } from './ReferenceField';\n/**\n * Render the related record in a one-to-one relationship\n *\n * Expects a single field as child\n *\n * @example // display the bio of the current author\n * <ReferenceOneField reference=\"bios\" target=\"author_id\">\n *     <TextField source=\"body\" />\n * </ReferenceOneField>\n */\nexport var ReferenceOneField = function (props) {\n  var children = props.children,\n    reference = props.reference,\n    source = props.source,\n    target = props.target,\n    emptyText = props.emptyText,\n    sort = props.sort,\n    filter = props.filter,\n    _a = props.link,\n    link = _a === void 0 ? false : _a,\n    queryOptions = props.queryOptions;\n  var record = useRecordContext(props);\n  var createPath = useCreatePath();\n  var translate = useTranslate();\n  var _b = useReferenceOneFieldController({\n      record: record,\n      reference: reference,\n      source: source,\n      target: target,\n      sort: sort,\n      filter: filter,\n      queryOptions: queryOptions\n    }),\n    isLoading = _b.isLoading,\n    isFetching = _b.isFetching,\n    referenceRecord = _b.referenceRecord,\n    error = _b.error,\n    refetch = _b.refetch;\n  var resourceLinkPath = link === false ? false : createPath({\n    resource: reference,\n    id: referenceRecord === null || referenceRecord === void 0 ? void 0 : referenceRecord.id,\n    type: typeof link === 'function' ? link(record, reference) : link\n  });\n  return !record || !isLoading && referenceRecord == null ? emptyText ? React.createElement(Typography, {\n    component: \"span\",\n    variant: \"body2\"\n  }, emptyText && translate(emptyText, {\n    _: emptyText\n  })) : null : React.createElement(ResourceContextProvider, {\n    value: reference\n  }, React.createElement(ReferenceFieldView, {\n    isLoading: isLoading,\n    isFetching: isFetching,\n    referenceRecord: referenceRecord,\n    resourceLinkPath: resourceLinkPath,\n    reference: reference,\n    refetch: refetch,\n    error: error\n  }, children));\n};\nReferenceOneField.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  label: fieldPropTypes.label,\n  record: PropTypes.any,\n  reference: PropTypes.string.isRequired,\n  source: PropTypes.string.isRequired,\n  target: PropTypes.string.isRequired,\n  queryOptions: PropTypes.any\n};\nReferenceOneField.defaultProps = {\n  source: 'id'\n};","map":{"version":3,"mappings":"AAAA,OAAOA,KAAoB,MAAM,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SACIC,8BAA8B,EAC9BC,gBAAgB,EAChBC,uBAAuB,EAEvBC,aAAa,EACbC,YAAY,QAGT,SAAS;AAEhB,SAA2BC,cAAc,QAA4B,SAAS;AAC9E,SAASC,kBAAkB,QAAQ,kBAAkB;AAErD;;;;;;;;;;AAUA,OAAO,IAAMC,iBAAiB,GAAG,UAC7BC,KAAyC;EAGrC,YAAQ,GASRA,KAAK,SATG;IACRC,SAAS,GAQTD,KAAK,UARI;IACTE,MAAM,GAONF,KAAK,OAPC;IACNG,MAAM,GAMNH,KAAK,OANC;IACNI,SAAS,GAKTJ,KAAK,UALI;IACTK,IAAI,GAIJL,KAAK,KAJD;IACJM,MAAM,GAGNN,KAAK,OAHC;IACNO,KAEAP,KAAK,KAFO;IAAZQ,IAAI,mBAAG,KAAK;IACZC,YAAY,GACZT,KAAK,aADO;EAEhB,IAAMU,MAAM,GAAGjB,gBAAgB,CAACO,KAAK,CAAC;EACtC,IAAMW,UAAU,GAAGhB,aAAa,EAAE;EAClC,IAAMiB,SAAS,GAAGhB,YAAY,EAAE;EAE1B,SAMFJ,8BAA8B,CAAa;MAC3CkB,MAAM;MACNT,SAAS;MACTC,MAAM;MACNC,MAAM;MACNE,IAAI;MACJC,MAAM;MACNG,YAAY;KACf,CAAC;IAbEI,SAAS;IACTC,UAAU;IACVC,eAAe;IACfC,KAAK;IACLC,OAAO,aAST;EAEF,IAAMC,gBAAgB,GAClBV,IAAI,KAAK,KAAK,GACR,KAAK,GACLG,UAAU,CAAC;IACPQ,QAAQ,EAAElB,SAAS;IACnBmB,EAAE,EAAEL,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEK,EAAE;IACvBC,IAAI,EACA,OAAOb,IAAI,KAAK,UAAU,GACpBA,IAAI,CAACE,MAAM,EAAET,SAAS,CAAC,GACvBO;GACb,CAAC;EAEZ,OAAO,CAACE,MAAM,IAAK,CAACG,SAAS,IAAIE,eAAe,IAAI,IAAK,GACrDX,SAAS,GACLf,oBAACE,UAAU;IAAC+B,SAAS,EAAC,MAAM;IAACC,OAAO,EAAC;EAAO,GACvCnB,SAAS,IAAIQ,SAAS,CAACR,SAAS,EAAE;IAAEoB,CAAC,EAAEpB;EAAS,CAAE,CAAC,CAC3C,GACb,IAAI,GAERf,oBAACK,uBAAuB;IAAC+B,KAAK,EAAExB;EAAS,GACrCZ,oBAACS,kBAAkB;IACfe,SAAS,EAAEA,SAAS;IACpBC,UAAU,EAAEA,UAAU;IACtBC,eAAe,EAAEA,eAAe;IAChCG,gBAAgB,EAAEA,gBAAgB;IAClCjB,SAAS,EAAEA,SAAS;IACpBgB,OAAO,EAAEA,OAAO;IAChBD,KAAK,EAAEA;EAAK,GAEXU,QAAQ,CACQ,CAE5B;AACL,CAAC;AAiBD3B,iBAAiB,CAAC4B,SAAS,GAAG;EAC1BD,QAAQ,EAAEpC,SAAS,CAACsC,IAAI;EACxBC,SAAS,EAAEvC,SAAS,CAACwC,MAAM;EAC3BC,KAAK,EAAElC,cAAc,CAACkC,KAAK;EAC3BrB,MAAM,EAAEpB,SAAS,CAAC0C,GAAG;EACrB/B,SAAS,EAAEX,SAAS,CAACwC,MAAM,CAACG,UAAU;EACtC/B,MAAM,EAAEZ,SAAS,CAACwC,MAAM,CAACG,UAAU;EACnC9B,MAAM,EAAEb,SAAS,CAACwC,MAAM,CAACG,UAAU;EACnCxB,YAAY,EAAEnB,SAAS,CAAC0C;CAC3B;AAEDjC,iBAAiB,CAACmC,YAAY,GAAG;EAC7BhC,MAAM,EAAE;CACX","names":["React","PropTypes","Typography","useReferenceOneFieldController","useRecordContext","ResourceContextProvider","useCreatePath","useTranslate","fieldPropTypes","ReferenceFieldView","ReferenceOneField","props","reference","source","target","emptyText","sort","filter","_a","link","queryOptions","record","createPath","translate","isLoading","isFetching","referenceRecord","error","refetch","resourceLinkPath","resource","id","type","component","variant","_","value","children","propTypes","node","className","string","label","any","isRequired","defaultProps"],"sourceRoot":"","sources":["../../../src/field/ReferenceOneField.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
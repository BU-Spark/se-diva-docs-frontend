{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { useFormState } from 'react-hook-form';\nimport { useNotify } from '../notification';\n/**\n * This hook display an error message on submit in Form and SaveButton.\n *\n * We can't do the form validity check in the form submit handler\n * as the form state may not have been updated yet when onSubmit validation mode is enabled\n * or when the form hasn't been touched at all.\n */\nexport var useNotifyIsFormInvalid = function (control) {\n  var _a = useFormState(control ? {\n      control: control\n    } : undefined),\n    submitCount = _a.submitCount,\n    errors = _a.errors;\n  var submitCountRef = useRef(submitCount);\n  var notify = useNotify();\n  useEffect(function () {\n    // Checking the submit count allows us to only display the notification after users\n    // tried to submit\n    if (submitCount > submitCountRef.current) {\n      submitCountRef.current = submitCount;\n      if (Object.keys(errors).length > 0) {\n        notify('ra.message.invalid_form', {\n          type: 'error'\n        });\n      }\n    }\n  }, [errors, submitCount, notify]);\n};","map":{"version":3,"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,YAAY,QAAiB,iBAAiB;AACvD,SAASC,SAAS,QAAQ,iBAAiB;AAE3C;;;;;;;AAOA,OAAO,IAAMC,sBAAsB,GAAG,UAACC,OAAiB;EAC9C,SAA0BH,YAAY,CACxCG,OAAO,GAAG;MAAEA,OAAO;IAAA,CAAE,GAAGC,SAAS,CACpC;IAFOC,WAAW;IAAEC,MAAM,YAE1B;EACD,IAAMC,cAAc,GAAGR,MAAM,CAACM,WAAW,CAAC;EAC1C,IAAMG,MAAM,GAAGP,SAAS,EAAE;EAE1BH,SAAS,CAAC;IACN;IACA;IACA,IAAIO,WAAW,GAAGE,cAAc,CAACE,OAAO,EAAE;MACtCF,cAAc,CAACE,OAAO,GAAGJ,WAAW;MAEpC,IAAIK,MAAM,CAACC,IAAI,CAACL,MAAM,CAAC,CAACM,MAAM,GAAG,CAAC,EAAE;QAChCJ,MAAM,CAAC,yBAAyB,EAAE;UAAEK,IAAI,EAAE;QAAO,CAAE,CAAC;;;EAGhE,CAAC,EAAE,CAACP,MAAM,EAAED,WAAW,EAAEG,MAAM,CAAC,CAAC;AACrC,CAAC","names":["useEffect","useRef","useFormState","useNotify","useNotifyIsFormInvalid","control","undefined","submitCount","errors","submitCountRef","notify","current","Object","keys","length","type"],"sources":["/Users/paigedeveau/node_modules/ra-core/src/form/useNotifyIsFormInvalid.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useFormState, Control } from 'react-hook-form';\nimport { useNotify } from '../notification';\n\n/**\n * This hook display an error message on submit in Form and SaveButton.\n *\n * We can't do the form validity check in the form submit handler\n * as the form state may not have been updated yet when onSubmit validation mode is enabled\n * or when the form hasn't been touched at all.\n */\nexport const useNotifyIsFormInvalid = (control?: Control) => {\n    const { submitCount, errors } = useFormState(\n        control ? { control } : undefined\n    );\n    const submitCountRef = useRef(submitCount);\n    const notify = useNotify();\n\n    useEffect(() => {\n        // Checking the submit count allows us to only display the notification after users\n        // tried to submit\n        if (submitCount > submitCountRef.current) {\n            submitCountRef.current = submitCount;\n\n            if (Object.keys(errors).length > 0) {\n                notify('ra.message.invalid_form', { type: 'error' });\n            }\n        }\n    }, [errors, submitCount, notify]);\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
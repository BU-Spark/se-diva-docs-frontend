{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport * as React from 'react';\nimport { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { MenuItem } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useChoicesContext, useInput, FieldTitle, useTranslate, useChoices, useGetRecordRepresentation } from 'ra-core';\nimport { ResettableTextField, ResettableTextFieldStyles } from './ResettableTextField';\nimport { InputHelperText } from './InputHelperText';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\nimport { useSupportCreateSuggestion } from './useSupportCreateSuggestion';\nimport { LoadingInput } from './LoadingInput';\n/**\n * An Input component for a select box, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <SelectInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <SelectInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <SelectInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that can access\n * the related choice through the `useRecordContext` hook. You can use Field components there.\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const FullNameField = () => {\n *     const record = useRecordContext();\n *     return <span>{record.first_name} {record.last_name}</span>;\n * }\n * <SelectInput source=\"author\" choices={choices} optionText={<FullNameField />}/>\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <SelectInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the MUI <Select> component\n *\n * You can disable some choices by providing a `disableValue` field which name is `disabled` by default\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n *    { id: 976, first_name: 'William', last_name: 'Rinkerd', disabled: true },\n * ];\n *\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n *    { id: 976, first_name: 'William', last_name: 'Rinkerd', not_available: true },\n * ];\n * <SelectInput source=\"gender\" choices={choices} disableValue=\"not_available\" />\n *\n */\nexport var SelectInput = function (props) {\n  var choicesProp = props.choices,\n    className = props.className,\n    create = props.create,\n    createLabel = props.createLabel,\n    createValue = props.createValue,\n    defaultValue = props.defaultValue,\n    disableValue = props.disableValue,\n    emptyText = props.emptyText,\n    emptyValue = props.emptyValue,\n    format = props.format,\n    filter = props.filter,\n    helperText = props.helperText,\n    isFetchingProp = props.isFetching,\n    isLoadingProp = props.isLoading,\n    label = props.label,\n    _a = props.margin,\n    margin = _a === void 0 ? 'dense' : _a,\n    onBlur = props.onBlur,\n    onChange = props.onChange,\n    onCreate = props.onCreate,\n    optionText = props.optionText,\n    optionValue = props.optionValue,\n    parse = props.parse,\n    resourceProp = props.resource,\n    sourceProp = props.source,\n    translateChoice = props.translateChoice,\n    validate = props.validate,\n    rest = __rest(props, [\"choices\", \"className\", \"create\", \"createLabel\", \"createValue\", \"defaultValue\", \"disableValue\", \"emptyText\", \"emptyValue\", \"format\", \"filter\", \"helperText\", \"isFetching\", \"isLoading\", \"label\", \"margin\", \"onBlur\", \"onChange\", \"onCreate\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"source\", \"translateChoice\", \"validate\"]);\n  var translate = useTranslate();\n  useEffect(function () {\n    // eslint-disable-next-line eqeqeq\n    if (emptyValue == null) {\n      throw new Error(\"emptyValue being set to null or undefined is not supported. Use parse to turn the empty string into null.\");\n    }\n  }, [emptyValue]);\n  var _b = useChoicesContext({\n      choices: choicesProp,\n      isLoading: isLoadingProp,\n      isFetching: isFetchingProp,\n      resource: resourceProp,\n      source: sourceProp\n    }),\n    allChoices = _b.allChoices,\n    isLoading = _b.isLoading,\n    fetchError = _b.error,\n    source = _b.source,\n    resource = _b.resource,\n    isFromReference = _b.isFromReference;\n  if (source === undefined) {\n    throw new Error(\"If you're not wrapping the SelectInput inside a ReferenceInput, you must provide the source prop\");\n  }\n  if (!isLoading && !fetchError && allChoices === undefined) {\n    throw new Error(\"If you're not wrapping the SelectInput inside a ReferenceInput, you must provide the choices prop\");\n  }\n  var getRecordRepresentation = useGetRecordRepresentation(resource);\n  var _c = useChoices({\n      optionText: optionText !== null && optionText !== void 0 ? optionText : isFromReference ? getRecordRepresentation : undefined,\n      optionValue: optionValue,\n      disableValue: disableValue,\n      translateChoice: translateChoice\n    }),\n    getChoiceText = _c.getChoiceText,\n    getChoiceValue = _c.getChoiceValue,\n    getDisableValue = _c.getDisableValue;\n  var _d = useInput(__assign({\n      defaultValue: defaultValue,\n      parse: parse,\n      format: format,\n      onBlur: onBlur,\n      onChange: onChange,\n      resource: resource,\n      source: source,\n      validate: validate\n    }, rest)),\n    field = _d.field,\n    fieldState = _d.fieldState,\n    id = _d.id,\n    isRequired = _d.isRequired,\n    isSubmitted = _d.formState.isSubmitted;\n  var error = fieldState.error,\n    invalid = fieldState.invalid,\n    isTouched = fieldState.isTouched;\n  var renderEmptyItemOption = useCallback(function () {\n    return React.isValidElement(emptyText) ? emptyText : emptyText === '' ? ' ' // em space, forces the display of an empty line of normal height\n    : translate(emptyText, {\n      _: emptyText\n    });\n  }, [emptyText, translate]);\n  var renderMenuItemOption = useCallback(function (choice) {\n    return getChoiceText(choice);\n  }, [getChoiceText]);\n  var handleChange = useCallback(function (eventOrChoice) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        // We might receive an event from the mui component\n        // In this case, it will be the choice id\n        if (eventOrChoice === null || eventOrChoice === void 0 ? void 0 : eventOrChoice.target) {\n          field.onChange(eventOrChoice);\n        } else {\n          // Or we might receive a choice directly, for instance a newly created one\n          field.onChange(getChoiceValue(eventOrChoice));\n        }\n        return [2 /*return*/];\n      });\n    });\n  }, [field, getChoiceValue]);\n  var _e = useSupportCreateSuggestion({\n      create: create,\n      createLabel: createLabel,\n      createValue: createValue,\n      handleChange: handleChange,\n      onCreate: onCreate,\n      optionText: optionText\n    }),\n    getCreateItem = _e.getCreateItem,\n    handleChangeWithCreateSupport = _e.handleChange,\n    createElement = _e.createElement;\n  var createItem = create || onCreate ? getCreateItem() : null;\n  var finalChoices = allChoices;\n  if (create || onCreate) {\n    finalChoices = __spreadArray(__spreadArray([], finalChoices, true), [createItem], false);\n  }\n  var renderMenuItem = useCallback(function (choice) {\n    return choice ? React.createElement(MenuItem, {\n      key: getChoiceValue(choice),\n      value: getChoiceValue(choice),\n      disabled: getDisableValue(choice)\n    }, renderMenuItemOption(!!createItem && (choice === null || choice === void 0 ? void 0 : choice.id) === createItem.id ? createItem : choice)) : null;\n  }, [getChoiceValue, getDisableValue, renderMenuItemOption, createItem]);\n  if (isLoading) {\n    return React.createElement(LoadingInput, {\n      label: label !== '' && label !== false && React.createElement(FieldTitle, {\n        label: label,\n        source: source,\n        resource: resourceProp,\n        isRequired: isRequired\n      }),\n      sx: props.sx,\n      helperText: React.createElement(InputHelperText, {\n        touched: isTouched || isSubmitted,\n        error: error === null || error === void 0 ? void 0 : error.message,\n        helperText: helperText\n      }),\n      variant: props.variant,\n      size: props.size,\n      margin: props.margin,\n      fullWidth: props.fullWidth\n    });\n  }\n  return React.createElement(React.Fragment, null, React.createElement(StyledResettableTextField, __assign({\n    id: id\n  }, field, {\n    className: clsx('ra-input', \"ra-input-\".concat(source), className),\n    onChange: handleChangeWithCreateSupport,\n    select: true,\n    label: label !== '' && label !== false && React.createElement(FieldTitle, {\n      label: label,\n      source: source,\n      resource: resourceProp,\n      isRequired: isRequired\n    }),\n    clearAlwaysVisible: true,\n    error: !!fetchError || (isTouched || isSubmitted) && invalid,\n    helperText: React.createElement(InputHelperText, {\n      touched: isTouched || isSubmitted || fetchError,\n      error: (error === null || error === void 0 ? void 0 : error.message) || (fetchError === null || fetchError === void 0 ? void 0 : fetchError.message),\n      helperText: helperText\n    }),\n    margin: margin\n  }, sanitizeRestProps(rest)), !isRequired && React.createElement(MenuItem, {\n    value: emptyValue,\n    key: \"null\",\n    \"aria-label\": translate('ra.action.clear_input_value'),\n    title: translate('ra.action.clear_input_value')\n  }, renderEmptyItemOption()), finalChoices.map(renderMenuItem)), createElement);\n};\nSelectInput.propTypes = {\n  emptyText: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  emptyValue: PropTypes.any,\n  choices: PropTypes.arrayOf(PropTypes.object),\n  className: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.element]),\n  options: PropTypes.object,\n  optionText: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.element]),\n  optionValue: PropTypes.string,\n  disableValue: PropTypes.string,\n  resettable: PropTypes.bool,\n  resource: PropTypes.string,\n  source: PropTypes.string,\n  translateChoice: PropTypes.bool\n};\nSelectInput.defaultProps = {\n  emptyText: '',\n  emptyValue: '',\n  options: {},\n  translateChoice: true,\n  disableValue: 'disabled'\n};\nvar sanitizeRestProps = function (_a) {\n  var afterSubmit = _a.afterSubmit,\n    allowNull = _a.allowNull,\n    beforeSubmit = _a.beforeSubmit,\n    choices = _a.choices,\n    className = _a.className,\n    crudGetMatching = _a.crudGetMatching,\n    crudGetOne = _a.crudGetOne,\n    data = _a.data,\n    field = _a.field,\n    fieldState = _a.fieldState,\n    formState = _a.formState,\n    filter = _a.filter,\n    filterToQuery = _a.filterToQuery,\n    formatOnBlur = _a.formatOnBlur,\n    isEqual = _a.isEqual,\n    limitChoicesToValue = _a.limitChoicesToValue,\n    multiple = _a.multiple,\n    name = _a.name,\n    pagination = _a.pagination,\n    perPage = _a.perPage,\n    ref = _a.ref,\n    reference = _a.reference,\n    refetch = _a.refetch,\n    render = _a.render,\n    setFilter = _a.setFilter,\n    setPagination = _a.setPagination,\n    setSort = _a.setSort,\n    shouldUnregister = _a.shouldUnregister,\n    sort = _a.sort,\n    subscription = _a.subscription,\n    type = _a.type,\n    validateFields = _a.validateFields,\n    validation = _a.validation,\n    value = _a.value,\n    rest = __rest(_a, [\"afterSubmit\", \"allowNull\", \"beforeSubmit\", \"choices\", \"className\", \"crudGetMatching\", \"crudGetOne\", \"data\", \"field\", \"fieldState\", \"formState\", \"filter\", \"filterToQuery\", \"formatOnBlur\", \"isEqual\", \"limitChoicesToValue\", \"multiple\", \"name\", \"pagination\", \"perPage\", \"ref\", \"reference\", \"refetch\", \"render\", \"setFilter\", \"setPagination\", \"setSort\", \"shouldUnregister\", \"sort\", \"subscription\", \"type\", \"validateFields\", \"validation\", \"value\"]);\n  return sanitizeInputRestProps(rest);\n};\nvar PREFIX = 'RaSelectInput';\nvar StyledResettableTextField = styled(ResettableTextField, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var theme = _a.theme;\n  return __assign(__assign({}, ResettableTextFieldStyles), {\n    minWidth: theme.spacing(20),\n    '& .MuiFilledInput-root': {\n      paddingRight: 0\n    }\n  });\n});","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","PropTypes","clsx","MenuItem","styled","useChoicesContext","useInput","FieldTitle","useTranslate","useChoices","useGetRecordRepresentation","ResettableTextField","ResettableTextFieldStyles","InputHelperText","sanitizeInputRestProps","useSupportCreateSuggestion","LoadingInput","SelectInput","props","choicesProp","className","create","createLabel","createValue","defaultValue","disableValue","emptyText","emptyValue","format","filter","helperText","isFetchingProp","isLoadingProp","label","_a","margin","onBlur","onChange","onCreate","optionText","optionValue","parse","resourceProp","sourceProp","translateChoice","validate","rest","translate","Error","choices","isLoading","isFetching","resource","source","allChoices","fetchError","isFromReference","undefined","getRecordRepresentation","getChoiceText","getChoiceValue","getDisableValue","field","fieldState","id","isRequired","isSubmitted","invalid","isTouched","renderEmptyItemOption","isValidElement","_","renderMenuItemOption","choice","handleChange","eventOrChoice","target","getCreateItem","handleChangeWithCreateSupport","createElement","createItem","finalChoices","renderMenuItem","key","value","disabled","sx","touched","error","message","variant","size","fullWidth","StyledResettableTextField","select","clearAlwaysVisible","sanitizeRestProps","title","map","propTypes","oneOfType","string","element","any","arrayOf","object","bool","options","func","resettable","defaultProps","allowNull","beforeSubmit","crudGetMatching","crudGetOne","data","formState","filterToQuery","formatOnBlur","isEqual","limitChoicesToValue","multiple","name","pagination","perPage","ref","reference","refetch","render","setFilter","setPagination","setSort","shouldUnregister","sort","subscription","type","validateFields","validation","PREFIX","overridesResolver","styles","root","theme","minWidth","spacing","paddingRight"],"sourceRoot":"","sources":["../../../src/input/SelectInput.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
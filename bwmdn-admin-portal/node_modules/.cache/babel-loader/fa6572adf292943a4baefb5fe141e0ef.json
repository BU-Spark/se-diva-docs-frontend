{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $String = GetIntrinsic('%String%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-tostring\n\nmodule.exports = function ToString(argument) {\n  if (typeof argument === 'symbol') {\n    throw new $TypeError('Cannot convert a Symbol value to a string');\n  }\n  return $String(argument);\n};","map":{"version":3,"names":["GetIntrinsic","require","$String","$TypeError","module","exports","ToString","argument"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/es-abstract/2022/ToString.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $String = GetIntrinsic('%String%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-tostring\n\nmodule.exports = function ToString(argument) {\n\tif (typeof argument === 'symbol') {\n\t\tthrow new $TypeError('Cannot convert a Symbol value to a string');\n\t}\n\treturn $String(argument);\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE3C,IAAIC,OAAO,GAAGF,YAAY,CAAC,UAAU,CAAC;AACtC,IAAIG,UAAU,GAAGH,YAAY,CAAC,aAAa,CAAC;;AAE5C;;AAEAI,MAAM,CAACC,OAAO,GAAG,SAASC,QAAQ,CAACC,QAAQ,EAAE;EAC5C,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IACjC,MAAM,IAAIJ,UAAU,CAAC,2CAA2C,CAAC;EAClE;EACA,OAAOD,OAAO,CAACK,QAAQ,CAAC;AACzB,CAAC"},"metadata":{},"sourceType":"script"}
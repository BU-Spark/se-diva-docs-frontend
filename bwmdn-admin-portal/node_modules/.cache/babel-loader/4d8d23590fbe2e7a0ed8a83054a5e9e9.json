{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { FieldTitle, useInput, useChoicesContext } from 'ra-core';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\nimport { CheckboxGroupInputItem } from './CheckboxGroupInputItem';\nimport { InputHelperText } from './InputHelperText';\nimport { Labeled } from '../Labeled';\nimport { LinearProgress } from '../layout';\n/**\n * An Input component for a checkbox group, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * The expected input must be an array of identifiers (e.g. [12, 31]) which correspond to\n * the 'optionValue' of 'choices' attribute objects.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *     { id: 12, name: 'Ray Hakt' },\n *     { id: 31, name: 'Ann Gullar' },\n *     { id: 42, name: 'Sean Phonee' },\n * ];\n * <CheckboxGroupInput source=\"recipients\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi' },\n *    { _id: 456, full_name: 'Jane Austen' },\n * ];\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that can access\n * the related choice through the `useRecordContext` hook. You can use Field components there.\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const FullNameField = () => {\n *     const record = useRecordContext();\n *     return <span>{record.first_name} {record.last_name}</span>;\n * };\n *\n * <CheckboxGroupInput source=\"recipients\" choices={choices} optionText={<FullNameField />}/>\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'programming', name: 'myroot.category.programming' },\n *    { id: 'lifestyle', name: 'myroot.category.lifestyle' },\n *    { id: 'photography', name: 'myroot.category.photography' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceArrayInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <CheckboxGroupInput source=\"tags\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the MUI <Checkbox> components\n */\nexport var CheckboxGroupInput = function (props) {\n  var choicesProp = props.choices,\n    className = props.className,\n    classesOverride = props.classes,\n    format = props.format,\n    helperText = props.helperText,\n    label = props.label,\n    labelPlacement = props.labelPlacement,\n    isLoadingProp = props.isLoading,\n    isFetchingProp = props.isFetching,\n    _a = props.margin,\n    margin = _a === void 0 ? 'dense' : _a,\n    onBlur = props.onBlur,\n    onChange = props.onChange,\n    options = props.options,\n    _b = props.optionText,\n    optionText = _b === void 0 ? 'name' : _b,\n    _c = props.optionValue,\n    optionValue = _c === void 0 ? 'id' : _c,\n    parse = props.parse,\n    resourceProp = props.resource,\n    _d = props.row,\n    row = _d === void 0 ? true : _d,\n    sourceProp = props.source,\n    _e = props.translateChoice,\n    translateChoice = _e === void 0 ? true : _e,\n    validate = props.validate,\n    rest = __rest(props, [\"choices\", \"className\", \"classes\", \"format\", \"helperText\", \"label\", \"labelPlacement\", \"isLoading\", \"isFetching\", \"margin\", \"onBlur\", \"onChange\", \"options\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"row\", \"source\", \"translateChoice\", \"validate\"]);\n  var _f = useChoicesContext({\n      choices: choicesProp,\n      isFetching: isFetchingProp,\n      isLoading: isLoadingProp,\n      resource: resourceProp,\n      source: sourceProp\n    }),\n    allChoices = _f.allChoices,\n    isLoading = _f.isLoading,\n    fetchError = _f.error,\n    resource = _f.resource,\n    source = _f.source;\n  if (source === undefined) {\n    throw new Error(\"If you're not wrapping the CheckboxGroupInput inside a ReferenceArrayInput, you must provide the source prop\");\n  }\n  if (!isLoading && !fetchError && allChoices === undefined) {\n    throw new Error(\"If you're not wrapping the CheckboxGroupInput inside a ReferenceArrayInput, you must provide the choices prop\");\n  }\n  var _g = useInput(__assign({\n      format: format,\n      parse: parse,\n      resource: resource,\n      source: source,\n      validate: validate,\n      onChange: onChange,\n      onBlur: onBlur\n    }, rest)),\n    _h = _g.field,\n    formOnChange = _h.onChange,\n    formOnBlur = _h.onBlur,\n    value = _h.value,\n    _j = _g.fieldState,\n    error = _j.error,\n    invalid = _j.invalid,\n    isTouched = _j.isTouched,\n    isSubmitted = _g.formState.isSubmitted,\n    id = _g.id,\n    isRequired = _g.isRequired;\n  var handleCheck = useCallback(function (event, isChecked) {\n    var newValue;\n    if (allChoices.every(function (item) {\n      return typeof get(item, optionValue) === 'number';\n    })) {\n      try {\n        // try to convert string value to number, e.g. '123'\n        newValue = JSON.parse(event.target.value);\n      } catch (e) {\n        // impossible to convert value, e.g. 'abc'\n        newValue = event.target.value;\n      }\n    } else {\n      newValue = event.target.value;\n    }\n    if (isChecked) {\n      formOnChange(__spreadArray(__spreadArray([], value || [], true), [newValue], false));\n    } else {\n      formOnChange(value.filter(function (v) {\n        return v != newValue;\n      })); // eslint-disable-line eqeqeq\n    }\n\n    formOnBlur(); // Ensure field is flagged as touched\n  }, [allChoices, formOnChange, formOnBlur, optionValue, value]);\n  if (isLoading && (!allChoices || allChoices.length === 0)) {\n    return React.createElement(Labeled, __assign({\n      id: id,\n      label: label,\n      source: source,\n      resource: resource,\n      className: clsx('ra-input', \"ra-input-\".concat(source), className),\n      isRequired: isRequired\n    }, rest), React.createElement(LinearProgress, null));\n  }\n  return React.createElement(StyledFormControl, __assign({\n    component: \"fieldset\",\n    margin: margin,\n    error: fetchError || (isTouched || isSubmitted) && invalid,\n    className: clsx('ra-input', \"ra-input-\".concat(source), className)\n  }, sanitizeRestProps(rest)), React.createElement(FormLabel, {\n    component: \"legend\",\n    className: CheckboxGroupInputClasses.label\n  }, React.createElement(FieldTitle, {\n    label: label,\n    source: source,\n    resource: resource,\n    isRequired: isRequired\n  })), React.createElement(FormGroup, {\n    row: row\n  }, allChoices === null || allChoices === void 0 ? void 0 : allChoices.map(function (choice) {\n    return React.createElement(CheckboxGroupInputItem, __assign({\n      key: get(choice, optionValue),\n      choice: choice,\n      id: id,\n      onChange: handleCheck,\n      options: options,\n      optionText: optionText,\n      optionValue: optionValue,\n      translateChoice: translateChoice,\n      value: value,\n      labelPlacement: labelPlacement\n    }, sanitizeRestProps(rest)));\n  })), React.createElement(FormHelperText, {\n    error: fetchError || isTouched && !!error\n  }, React.createElement(InputHelperText, {\n    touched: isTouched || isSubmitted || fetchError,\n    error: (error === null || error === void 0 ? void 0 : error.message) || (fetchError === null || fetchError === void 0 ? void 0 : fetchError.message),\n    helperText: helperText\n  })));\n};\nvar sanitizeRestProps = function (_a) {\n  var refetch = _a.refetch,\n    setFilter = _a.setFilter,\n    setPagination = _a.setPagination,\n    setSort = _a.setSort,\n    loaded = _a.loaded,\n    touched = _a.touched,\n    rest = __rest(_a, [\"refetch\", \"setFilter\", \"setPagination\", \"setSort\", \"loaded\", \"touched\"]);\n  return sanitizeInputRestProps(rest);\n};\nCheckboxGroupInput.propTypes = {\n  choices: PropTypes.arrayOf(PropTypes.any),\n  className: PropTypes.string,\n  source: PropTypes.string,\n  optionText: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.element]),\n  optionValue: PropTypes.string,\n  row: PropTypes.bool,\n  resource: PropTypes.string,\n  translateChoice: PropTypes.bool\n};\nvar PREFIX = 'RaCheckboxGroupInput';\nexport var CheckboxGroupInputClasses = {\n  label: \"\".concat(PREFIX, \"-label\")\n};\nvar StyledFormControl = styled(FormControl, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .\".concat(CheckboxGroupInputClasses.label)] = {\n    transform: 'translate(0, 4px) scale(0.75)',\n    transformOrigin: \"top \".concat(theme.direction === 'ltr' ? 'left' : 'right')\n  }, _b;\n});","map":{"version":3,"mappings":"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","names":["React","styled","clsx","useCallback","PropTypes","get","FormLabel","FormControl","FormGroup","FormHelperText","FieldTitle","useInput","useChoicesContext","sanitizeInputRestProps","CheckboxGroupInputItem","InputHelperText","Labeled","LinearProgress","CheckboxGroupInput","choicesProp","props","className","classesOverride","format","helperText","label","labelPlacement","isLoadingProp","isFetchingProp","_a","margin","onBlur","onChange","options","_b","optionText","_c","optionValue","parse","resourceProp","_d","row","sourceProp","_e","translateChoice","validate","rest","choices","isFetching","isLoading","resource","source","allChoices","fetchError","undefined","Error","_h","formOnChange","formOnBlur","value","_j","error","invalid","isTouched","isSubmitted","id","isRequired","handleCheck","event","isChecked","newValue","every","item","JSON","target","e","filter","length","StyledFormControl","component","sanitizeRestProps","CheckboxGroupInputClasses","map","key","choice","touched","message","setFilter","setPagination","setSort","loaded","propTypes","arrayOf","any","string","oneOfType","func","element","bool","PREFIX","name","overridesResolver","styles","root","theme","transform","transformOrigin","direction"],"sourceRoot":"","sources":["../../../src/input/CheckboxGroupInput.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
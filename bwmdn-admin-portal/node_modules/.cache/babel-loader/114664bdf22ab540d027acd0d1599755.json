{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { useCallback, isValidElement } from 'react';\nimport set from 'lodash/set';\nimport { useChoices } from './useChoices';\nimport { useTranslate } from '../i18n';\n/*\n * Returns helper functions for suggestions handling.\n *\n * @param allowDuplicates A boolean indicating whether a suggestion can be added several times\n * @param choices An array of available choices\n * @param limitChoicesToValue A boolean indicating whether the initial suggestions should be limited to the currently selected one(s)\n * @param matchSuggestion Optional unless `optionText` is a React element. Function which check whether a choice matches a filter. Must return a boolean.\n * @param optionText Either a string defining the property to use to get the choice text, a function or a React element\n * @param optionValue The property to use to get the choice value\n * @param selectedItem The currently selected item. Maybe an array of selected items\n * @param suggestionLimit The maximum number of suggestions returned\n * @param translateChoice A boolean indicating whether to option text should be translated\n *\n * @returns An object with helper functions:\n * - getChoiceText: Returns the choice text or a React element\n * - getChoiceValue: Returns the choice value\n * - getSuggestions: A function taking a filter value (string) and returning the matching suggestions\n */\nexport var useSuggestions = function (_a) {\n  var allowCreate = _a.allowCreate,\n    choices = _a.choices,\n    _b = _a.createText,\n    createText = _b === void 0 ? 'ra.action.create' : _b,\n    _c = _a.createValue,\n    createValue = _c === void 0 ? '@@create' : _c,\n    limitChoicesToValue = _a.limitChoicesToValue,\n    matchSuggestion = _a.matchSuggestion,\n    optionText = _a.optionText,\n    optionValue = _a.optionValue,\n    selectedItem = _a.selectedItem,\n    _d = _a.suggestionLimit,\n    suggestionLimit = _d === void 0 ? 0 : _d,\n    translateChoice = _a.translateChoice;\n  var translate = useTranslate();\n  var _e = useChoices({\n      optionText: optionText,\n      optionValue: optionValue,\n      translateChoice: translateChoice\n    }),\n    getChoiceText = _e.getChoiceText,\n    getChoiceValue = _e.getChoiceValue;\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  var getSuggestions = useCallback(getSuggestionsFactory({\n    allowCreate: allowCreate,\n    choices: choices,\n    createText: createText,\n    createValue: createValue,\n    getChoiceText: getChoiceText,\n    getChoiceValue: getChoiceValue,\n    limitChoicesToValue: limitChoicesToValue,\n    matchSuggestion: matchSuggestion,\n    optionText: optionText,\n    optionValue: optionValue,\n    selectedItem: selectedItem,\n    suggestionLimit: suggestionLimit\n  }), [allowCreate, choices, createText, createValue, getChoiceText, getChoiceValue, limitChoicesToValue, matchSuggestion, optionText, optionValue, selectedItem, suggestionLimit, translate]);\n  return {\n    getChoiceText: getChoiceText,\n    getChoiceValue: getChoiceValue,\n    getSuggestions: getSuggestions\n  };\n};\nvar escapeRegExp = function (value) {\n  return value ? value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') : '';\n}; // $& means the whole matched string\n/**\n * Default matcher implementation which check whether the suggestion text matches the filter.\n */\nvar defaultMatchSuggestion = function (getChoiceText) {\n  return function (filter, suggestion, exact) {\n    if (exact === void 0) {\n      exact = false;\n    }\n    var suggestionText = getChoiceText(suggestion);\n    var isReactElement = isValidElement(suggestionText);\n    var regex = escapeRegExp(filter);\n    return isReactElement ? false : suggestionText && !!suggestionText.match(\n    // We must escape any RegExp reserved characters to avoid errors\n    // For example, the filter might contain * which must be escaped as \\*\n    new RegExp(exact ? \"^\".concat(regex, \"$\") : regex, 'i'));\n  };\n};\n/**\n * Get the suggestions to display after applying a fuzzy search on the available choices\n *\n * @example\n *\n * getSuggestions({\n *   choices: [{ id: 1, name: 'admin' }, { id: 2, name: 'publisher' }],\n *   optionText: 'name',\n *   optionValue: 'id',\n *   getSuggestionText: choice => choice[optionText],\n * })('pub')\n *\n * // Will return [{ id: 2, name: 'publisher' }]\n * getSuggestions({\n *   choices: [{ id: 1, name: 'admin' }, { id: 2, name: 'publisher' }],\n *   optionText: 'name',\n *   optionValue: 'id',\n *   getSuggestionText: choice => choice[optionText],\n * })('pub')\n *\n * // Will return [{ id: 2, name: 'publisher' }]\n */\nexport var getSuggestionsFactory = function (_a) {\n  var _b = _a.allowCreate,\n    allowCreate = _b === void 0 ? false : _b,\n    _c = _a.choices,\n    choices = _c === void 0 ? [] : _c,\n    _d = _a.createText,\n    createText = _d === void 0 ? 'ra.action.create' : _d,\n    _e = _a.createValue,\n    createValue = _e === void 0 ? '@@create' : _e,\n    _f = _a.optionText,\n    optionText = _f === void 0 ? 'name' : _f,\n    _g = _a.optionValue,\n    optionValue = _g === void 0 ? 'id' : _g,\n    getChoiceText = _a.getChoiceText,\n    getChoiceValue = _a.getChoiceValue,\n    _h = _a.limitChoicesToValue,\n    limitChoicesToValue = _h === void 0 ? false : _h,\n    _j = _a.matchSuggestion,\n    matchSuggestion = _j === void 0 ? defaultMatchSuggestion(getChoiceText) : _j,\n    selectedItem = _a.selectedItem,\n    _k = _a.suggestionLimit,\n    suggestionLimit = _k === void 0 ? 0 : _k;\n  return function (filter) {\n    var suggestions = [];\n    // if an item is selected and matches the filter\n    if (selectedItem && !Array.isArray(selectedItem) && matchSuggestion(filter, selectedItem)) {\n      if (limitChoicesToValue) {\n        // display only the selected item\n        suggestions = choices.filter(function (choice) {\n          return getChoiceValue(choice) === getChoiceValue(selectedItem);\n        });\n      } else {\n        suggestions = __spreadArray([], choices, true);\n      }\n    } else {\n      suggestions = choices.filter(function (choice) {\n        return matchSuggestion(filter, choice) || selectedItem != null && (!Array.isArray(selectedItem) ? getChoiceValue(choice) === getChoiceValue(selectedItem) : selectedItem.some(function (selected) {\n          return getChoiceValue(choice) === getChoiceValue(selected);\n        }));\n      });\n    }\n    suggestions = limitSuggestions(suggestions, suggestionLimit);\n    var hasExactMatch = suggestions.some(function (suggestion) {\n      return matchSuggestion(filter, suggestion, true);\n    });\n    if (allowCreate) {\n      var filterIsSelectedItem =\n      // If the selectedItem is an array (for example AutocompleteArrayInput)\n      // we shouldn't try to match\n      !!selectedItem && !Array.isArray(selectedItem) ? matchSuggestion(filter, selectedItem, true) : false;\n      if (!hasExactMatch && !filterIsSelectedItem) {\n        suggestions.push(getSuggestion({\n          optionText: optionText,\n          optionValue: optionValue,\n          text: createText,\n          value: createValue\n        }));\n      }\n    }\n    // Only keep unique items. Necessary because we might have fetched\n    // the currently selected choice in addition of the possible choices\n    // that may also contain it\n    var result = suggestions.filter(function (suggestion, index) {\n      return suggestions.indexOf(suggestion) === index;\n    });\n    return result;\n  };\n};\n/**\n * @example\n *\n * limitSuggestions(\n *  [{ id: 1, name: 'foo'}, { id: 2, name: 'bar' }],\n *  1\n * );\n *\n * // Will return [{ id: 1, name: 'foo' }]\n *\n * @param suggestions List of suggestions\n * @param limit\n */\nvar limitSuggestions = function (suggestions, limit) {\n  if (limit === void 0) {\n    limit = 0;\n  }\n  return Number.isInteger(limit) && limit > 0 ? suggestions.slice(0, limit) : suggestions;\n};\n/**\n * addSuggestion(\n *  [{ id: 1, name: 'foo'}, { id: 2, name: 'bar' }],\n * );\n *\n * // Will return [{ id: null, name: '' }, { id: 1, name: 'foo' }, { id: 2, name: 'bar' }]\n *\n * @param suggestions List of suggestions\n * @param options\n * @param options.optionText\n */\nvar getSuggestion = function (_a) {\n  var _b = _a.optionText,\n    optionText = _b === void 0 ? 'name' : _b,\n    _c = _a.optionValue,\n    optionValue = _c === void 0 ? 'id' : _c,\n    _d = _a.text,\n    text = _d === void 0 ? '' : _d,\n    _e = _a.value,\n    value = _e === void 0 ? null : _e;\n  var suggestion = {};\n  set(suggestion, optionValue, value);\n  if (typeof optionText === 'string') {\n    set(suggestion, optionText, text);\n  }\n  return suggestion;\n};","map":{"version":3,"mappings":"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","names":["useCallback","isValidElement","set","useChoices","useTranslate","useSuggestions","_a","allowCreate","choices","_b","createText","_c","createValue","limitChoicesToValue","matchSuggestion","optionText","optionValue","selectedItem","_d","suggestionLimit","translateChoice","translate","getChoiceText","getChoiceValue","getSuggestions","getSuggestionsFactory","escapeRegExp","value","replace","defaultMatchSuggestion","filter","suggestion","exact","suggestionText","isReactElement","regex","match","RegExp","_e","_f","_g","_h","_j","_k","suggestions","Array","isArray","choice","some","selected","limitSuggestions","hasExactMatch","filterIsSelectedItem","push","getSuggestion","text","result","index","indexOf","limit","isInteger","slice"],"sourceRoot":"","sources":["../../../src/form/useSuggestions.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
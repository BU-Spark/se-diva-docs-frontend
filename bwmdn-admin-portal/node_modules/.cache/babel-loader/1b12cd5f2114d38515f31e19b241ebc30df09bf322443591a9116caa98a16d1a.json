{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { Datagrid } from './datagrid';\nimport { SingleFieldList } from './SingleFieldList';\nimport { ArrayField, BooleanField, ChipField, DateField, EmailField, NumberField, ReferenceField, ReferenceArrayField, TextField, UrlField } from '../field';\nexport var listFieldTypes = {\n  table: {\n    component: function (props) {\n      var hasEdit = props.hasEdit,\n        hasShow = props.hasShow,\n        rest = __rest(props, [\"hasEdit\", \"hasShow\"]);\n      return React.createElement(Datagrid, __assign({\n        rowClick: !hasEdit && hasShow ? 'show' : 'edit'\n      }, rest));\n    },\n    representation: function (props, children) {\n      return \"        <Datagrid rowClick=\\\"\".concat(!props.hasEdit && props.hasShow ? 'show' : 'edit', \"\\\">\\n\").concat(children.map(function (child) {\n        return \"            \".concat(child.getRepresentation());\n      }).join('\\n'), \"\\n        </Datagrid>\");\n    }\n  },\n  array: {\n    // eslint-disable-next-line react/display-name\n    component: function (_a) {\n      var children = _a.children,\n        props = __rest(_a, [\"children\"]);\n      return React.createElement(ArrayField, __assign({}, props), React.createElement(SingleFieldList, null, React.createElement(ChipField, {\n        source: children.length > 0 && children[0].props.source\n      })));\n    },\n    representation: function (props, children) {\n      return \"<ArrayField source=\\\"\".concat(props.source, \"\\\"><SingleFieldList><ChipField source=\\\"\").concat(children.length > 0 && children[0].getProps().source, \"\\\" /></SingleFieldList></ArrayField>\");\n    }\n  },\n  boolean: {\n    component: BooleanField,\n    representation: function (props) {\n      return \"<BooleanField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  },\n  date: {\n    component: DateField,\n    representation: function (props) {\n      return \"<DateField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  },\n  email: {\n    component: EmailField,\n    representation: function (props) {\n      return \"<EmailField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  },\n  id: {\n    component: TextField,\n    representation: function (props) {\n      return \"<TextField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  },\n  number: {\n    component: NumberField,\n    representation: function (props) {\n      return \"<NumberField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  },\n  reference: {\n    component: ReferenceField,\n    representation: function (props) {\n      return \"<ReferenceField source=\\\"\".concat(props.source, \"\\\" reference=\\\"\").concat(props.reference, \"\\\" />\");\n    }\n  },\n  referenceChild: {\n    component: function () {\n      return React.createElement(TextField, {\n        source: \"id\"\n      });\n    },\n    representation: function () {\n      return \"<TextField source=\\\"id\\\" />\";\n    }\n  },\n  referenceArray: {\n    component: ReferenceArrayField,\n    representation: function (props) {\n      return \"<ReferenceArrayField source=\\\"\".concat(props.source, \"\\\" reference=\\\"\").concat(props.reference, \"\\\" />\");\n    }\n  },\n  referenceArrayChild: {\n    component: function () {\n      return React.createElement(SingleFieldList, null, React.createElement(ChipField, {\n        source: \"id\"\n      }));\n    },\n    representation: function () {\n      return \"<SingleFieldList><ChipField source=\\\"id\\\" /></SingleFieldList>\";\n    }\n  },\n  richText: undefined,\n  string: {\n    component: TextField,\n    representation: function (props) {\n      return \"<TextField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  },\n  url: {\n    component: UrlField,\n    representation: function (props) {\n      return \"<UrlField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["React","Datagrid","SingleFieldList","ArrayField","BooleanField","ChipField","DateField","EmailField","NumberField","ReferenceField","ReferenceArrayField","TextField","UrlField","listFieldTypes","table","component","props","hasShow","rest","rowClick","hasEdit","representation","children","map","child","getRepresentation","join","array","_a","source","length","getProps","boolean","date","email","id","number","reference","referenceChild","referenceArray","referenceArrayChild","richText","undefined","string","url"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/ra-ui-materialui/src/list/listFieldTypes.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Datagrid } from './datagrid';\nimport { SingleFieldList } from './SingleFieldList';\nimport {\n    ArrayField,\n    BooleanField,\n    ChipField,\n    DateField,\n    EmailField,\n    NumberField,\n    ReferenceField,\n    ReferenceArrayField,\n    TextField,\n    UrlField,\n} from '../field';\n\nexport const listFieldTypes = {\n    table: {\n        component: props => {\n            const { hasEdit, hasShow, ...rest } = props;\n            return (\n                <Datagrid\n                    rowClick={!hasEdit && hasShow ? 'show' : 'edit'}\n                    {...rest}\n                />\n            );\n        }, // eslint-disable-line react/display-name\n        representation: (props, children) => `        <Datagrid rowClick=\"${\n            !props.hasEdit && props.hasShow ? 'show' : 'edit'\n        }\">\n${children.map(child => `            ${child.getRepresentation()}`).join('\\n')}\n        </Datagrid>`,\n    },\n    array: {\n        // eslint-disable-next-line react/display-name\n        component: ({ children, ...props }) => (\n            <ArrayField {...props}>\n                <SingleFieldList>\n                    <ChipField\n                        source={children.length > 0 && children[0].props.source}\n                    />\n                </SingleFieldList>\n            </ArrayField>\n        ),\n        representation: (props, children) =>\n            `<ArrayField source=\"${\n                props.source\n            }\"><SingleFieldList><ChipField source=\"${\n                children.length > 0 && children[0].getProps().source\n            }\" /></SingleFieldList></ArrayField>`,\n    },\n    boolean: {\n        component: BooleanField,\n        representation: props => `<BooleanField source=\"${props.source}\" />`,\n    },\n    date: {\n        component: DateField,\n        representation: props => `<DateField source=\"${props.source}\" />`,\n    },\n    email: {\n        component: EmailField,\n        representation: props => `<EmailField source=\"${props.source}\" />`,\n    },\n    id: {\n        component: TextField,\n        representation: props => `<TextField source=\"${props.source}\" />`,\n    },\n    number: {\n        component: NumberField,\n        representation: props => `<NumberField source=\"${props.source}\" />`,\n    },\n    reference: {\n        component: ReferenceField,\n        representation: props =>\n            `<ReferenceField source=\"${props.source}\" reference=\"${props.reference}\" />`,\n    },\n    referenceChild: {\n        component: () => <TextField source=\"id\" />, // eslint-disable-line react/display-name\n        representation: () => `<TextField source=\"id\" />`,\n    },\n    referenceArray: {\n        component: ReferenceArrayField,\n        representation: props =>\n            `<ReferenceArrayField source=\"${props.source}\" reference=\"${props.reference}\" />`,\n    },\n    referenceArrayChild: {\n        component: () => (\n            <SingleFieldList>\n                <ChipField source=\"id\" />\n            </SingleFieldList>\n        ), // eslint-disable-line react/display-name\n        representation: () =>\n            `<SingleFieldList><ChipField source=\"id\" /></SingleFieldList>`,\n    },\n    richText: undefined, // never display a rich text field in a datagrid\n    string: {\n        component: TextField,\n        representation: props => `<TextField source=\"${props.source}\" />`,\n    },\n    url: {\n        component: UrlField,\n        representation: props => `<UrlField source=\"${props.source}\" />`,\n    },\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
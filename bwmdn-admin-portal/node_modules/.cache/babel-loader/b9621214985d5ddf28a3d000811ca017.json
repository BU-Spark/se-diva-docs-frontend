{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useTheme } from '@mui/material/styles';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useLoading } from 'ra-core';\nimport { RefreshIconButton } from '../button';\nexport var LoadingIndicator = function (props) {\n  var className = props.className,\n    sx = props.sx,\n    rest = __rest(props, [\"className\", \"sx\"]);\n  var loading = useLoading();\n  var theme = useTheme();\n  return React.createElement(Root, {\n    className: className,\n    sx: sx\n  }, loading ? React.createElement(CircularProgress, __assign({\n    className: clsx('app-loader', LoadingIndicatorClasses.loader),\n    color: \"inherit\",\n    size: theme.spacing(2),\n    thickness: 6\n  }, rest)) : React.createElement(RefreshIconButton, {\n    className: LoadingIndicatorClasses.loadedIcon\n  }));\n};\nLoadingIndicator.propTypes = {\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  width: PropTypes.string\n};\nvar PREFIX = 'RaLoadingIndicator';\nexport var LoadingIndicatorClasses = {\n  loader: \"\".concat(PREFIX, \"-loader\"),\n  loadedIcon: \"\".concat(PREFIX, \"-loadedIcon\")\n};\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .\".concat(LoadingIndicatorClasses.loader)] = {\n    marginLeft: theme.spacing(1.5),\n    marginRight: theme.spacing(1.5)\n  }, _b[\"& .\".concat(LoadingIndicatorClasses.loadedIcon)] = {}, _b;\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,SAASC,UAAU,QAAQ,SAAS;AAEpC,SAASC,iBAAiB,QAAQ,WAAW;AAG7C,OAAO,IAAMC,gBAAgB,GAAG,UAACC,KAA4B;EACjD,aAAS,GAAkBA,KAAK,UAAvB;IAAEC,EAAE,GAAcD,KAAK,GAAnB;IAAKE,IAAI,UAAKF,KAAK,EAAlC,mBAA0B,CAAF;EAC9B,IAAMG,OAAO,GAAGN,UAAU,EAAE;EAE5B,IAAMO,KAAK,GAAGT,QAAQ,EAAE;EACxB,OACIJ,oBAACc,IAAI;IAACC,SAAS,EAAEA,SAAS;IAAEL,EAAE,EAAEA;EAAE,GAC7BE,OAAO,GACJZ,oBAACK,gBAAgB;IACbU,SAAS,EAAEZ,IAAI,CACX,YAAY,EACZa,uBAAuB,CAACC,MAAM,CACjC;IACDC,KAAK,EAAC,SAAS;IACfC,IAAI,EAAEN,KAAK,CAACO,OAAO,CAAC,CAAC,CAAC;IACtBC,SAAS,EAAE;EAAC,GACRV,IAAI,EACV,GAEFX,oBAACO,iBAAiB;IACdQ,SAAS,EAAEC,uBAAuB,CAACM;EAAU,EAEpD,CACE;AAEf,CAAC;AAEDd,gBAAgB,CAACe,SAAS,GAAG;EACzBC,OAAO,EAAEtB,SAAS,CAACuB,MAAM;EACzBV,SAAS,EAAEb,SAAS,CAACwB,MAAM;EAC3BC,KAAK,EAAEzB,SAAS,CAACwB;CACpB;AAOD,IAAME,MAAM,GAAG,oBAAoB;AAEnC,OAAO,IAAMZ,uBAAuB,GAAG;EACnCC,MAAM,EAAE,UAAGW,MAAM,YAAS;EAC1BN,UAAU,EAAE,UAAGM,MAAM;CACxB;AAED,IAAMd,IAAI,GAAGb,MAAM,CAAC,KAAK,EAAE;EACvB4B,IAAI,EAAED,MAAM;EACZE,iBAAiB,EAAE,UAACrB,KAAK,EAAEsB,MAAM;IAAK,aAAM,CAACC,IAAI;EAAX;CACzC,CAAC,CAAC,UAACC,EAAS;;MAAPpB,KAAK;EAAO,gBACdqB,GAAC,aAAMlB,uBAAuB,CAACC,MAAM,CAAE,IAAG;IACtCkB,UAAU,EAAEtB,KAAK,CAACO,OAAO,CAAC,GAAG,CAAC;IAC9BgB,WAAW,EAAEvB,KAAK,CAACO,OAAO,CAAC,GAAG;GACjC,EAEDc,GAAC,aAAMlB,uBAAuB,CAACM,UAAU,CAAE,IAAG,EAAE;AANlC,CAOhB,CAAC","names":["React","styled","PropTypes","clsx","useTheme","CircularProgress","useLoading","RefreshIconButton","LoadingIndicator","props","sx","rest","loading","theme","Root","className","LoadingIndicatorClasses","loader","color","size","spacing","thickness","loadedIcon","propTypes","classes","object","string","width","PREFIX","name","overridesResolver","styles","root","_a","_b","marginLeft","marginRight"],"sourceRoot":"","sources":["../../../src/layout/LoadingIndicator.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
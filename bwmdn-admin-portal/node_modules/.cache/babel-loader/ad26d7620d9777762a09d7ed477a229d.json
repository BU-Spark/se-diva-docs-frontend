{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport ActionUpdate from '@mui/icons-material/Update';\nimport { alpha } from '@mui/material/styles';\nimport { useUpdateMany, useRefresh, useNotify, useUnselectAll, useResourceContext, useListContext } from 'ra-core';\nimport { Button } from './Button';\nexport var BulkUpdateWithUndoButton = function (props) {\n  var selectedIds = useListContext(props).selectedIds;\n  var notify = useNotify();\n  var resource = useResourceContext(props);\n  var unselectAll = useUnselectAll(resource);\n  var refresh = useRefresh();\n  var data = props.data,\n    _a = props.label,\n    label = _a === void 0 ? 'ra.action.update' : _a,\n    _b = props.icon,\n    icon = _b === void 0 ? defaultIcon : _b,\n    onClick = props.onClick,\n    _c = props.onSuccess,\n    onSuccess = _c === void 0 ? function () {\n      notify('ra.notification.updated', {\n        type: 'info',\n        messageArgs: {\n          smart_count: selectedIds.length\n        },\n        undoable: true\n      });\n      unselectAll();\n      refresh();\n    } : _c,\n    _d = props.onError,\n    onError = _d === void 0 ? function (error) {\n      notify(typeof error === 'string' ? error : error.message || 'ra.notification.http_error', {\n        type: 'warning',\n        messageArgs: {\n          _: typeof error === 'string' ? error : error && error.message ? error.message : undefined\n        }\n      });\n      refresh();\n    } : _d,\n    rest = __rest(props, [\"data\", \"label\", \"icon\", \"onClick\", \"onSuccess\", \"onError\"]);\n  var _e = useUpdateMany(resource, {\n      ids: selectedIds,\n      data: data\n    }, {\n      onSuccess: onSuccess,\n      onError: onError,\n      mutationMode: 'undoable'\n    }),\n    updateMany = _e[0],\n    isLoading = _e[1].isLoading;\n  var handleClick = function (e) {\n    updateMany();\n    if (typeof onClick === 'function') {\n      onClick(e);\n    }\n  };\n  return React.createElement(StyledButton, __assign({\n    onClick: handleClick,\n    label: label,\n    disabled: isLoading\n  }, sanitizeRestProps(rest)), icon);\n};\nvar defaultIcon = React.createElement(ActionUpdate, null);\nvar sanitizeRestProps = function (_a) {\n  var filterValues = _a.filterValues,\n    label = _a.label,\n    selectedIds = _a.selectedIds,\n    onSuccess = _a.onSuccess,\n    onError = _a.onError,\n    rest = __rest(_a, [\"filterValues\", \"label\", \"selectedIds\", \"onSuccess\", \"onError\"]);\n  return rest;\n};\nBulkUpdateWithUndoButton.propTypes = {\n  label: PropTypes.string,\n  resource: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  icon: PropTypes.element,\n  data: PropTypes.any.isRequired\n};\nvar PREFIX = 'RaBulkUpdateWithUndoButton';\nvar StyledButton = styled(Button, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var theme = _a.theme;\n  return {\n    color: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, 0.12),\n      // Reset on mouse devices\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  };\n});","map":{"version":3,"mappings":"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","names":["React","styled","PropTypes","ActionUpdate","alpha","useUpdateMany","useRefresh","useNotify","useUnselectAll","useResourceContext","useListContext","Button","BulkUpdateWithUndoButton","props","notify","resource","unselectAll","refresh","_a","label","_b","icon","defaultIcon","onClick","_c","onSuccess","type","messageArgs","smart_count","selectedIds","length","undoable","_d","onError","error","message","_","undefined","rest","ids","data","mutationMode","updateMany","isLoading","handleClick","e","StyledButton","disabled","sanitizeRestProps","propTypes","string","arrayOf","any","element","isRequired","PREFIX","name","overridesResolver","styles","root","theme","color","palette","primary","main","backgroundColor"],"sourceRoot":"","sources":["../../../src/button/BulkUpdateWithUndoButton.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
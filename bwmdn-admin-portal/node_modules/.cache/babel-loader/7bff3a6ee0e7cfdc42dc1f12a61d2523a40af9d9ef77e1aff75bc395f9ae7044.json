{"ast":null,"code":"import { useMemo } from 'react';\nimport defaults from 'lodash/defaults';\nimport { useResourceDefinitions } from './useResourceDefinitions';\nimport { useResourceContext } from './useResourceContext';\n/**\n * Hook to get the definition of a given resource\n *\n * @example // Get the current resource definition (based on ResourceContext)\n *\n * const definition = useResourceDefinition();\n * console.log(definition);\n * // {\n * //   name: 'posts',\n * //   hasList: true,\n * //   hasEdit: true,\n * //   hasShow: true,\n * //   hasCreate: true,\n * //   options: {},\n * //   icon: PostIcon,\n * // }\n *\n * @example // Pass a resource prop to check a different resource definition\n *\n * const definition = useResourceDefinition({ resource: 'posts' });\n */\nexport var useResourceDefinition = function (props) {\n  var resource = useResourceContext(props);\n  var resourceDefinitions = useResourceDefinitions();\n  var _a = props || {},\n    hasCreate = _a.hasCreate,\n    hasEdit = _a.hasEdit,\n    hasList = _a.hasList,\n    hasShow = _a.hasShow,\n    recordRepresentation = _a.recordRepresentation;\n  var definition = useMemo(function () {\n    return defaults({}, {\n      hasCreate: hasCreate,\n      hasEdit: hasEdit,\n      hasList: hasList,\n      hasShow: hasShow,\n      recordRepresentation: recordRepresentation\n    }, resourceDefinitions[resource]);\n  }, [resource, resourceDefinitions, hasCreate, hasEdit, hasList, hasShow, recordRepresentation]);\n  return definition;\n};","map":{"version":3,"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,OAAOC,QAAQ,MAAM,iBAAiB;AAEtC,SAASC,sBAAsB,QAAQ,0BAA0B;AACjE,SAASC,kBAAkB,QAAQ,sBAAsB;AAGzD;;;;;;;;;;;;;;;;;;;;;AAqBA,OAAO,IAAMC,qBAAqB,GAAG,UACjCC,KAAoC;EAEpC,IAAMC,QAAQ,GAAGH,kBAAkB,CAACE,KAAK,CAAC;EAC1C,IAAME,mBAAmB,GAAGL,sBAAsB,EAAE;EAC9C,SACFG,KAAK,IAAI,EAAE;IADPG,SAAS;IAAEC,OAAO;IAAEC,OAAO;IAAEC,OAAO;IAAEC,oBAAoB,0BACnD;EAEf,IAAMC,UAAU,GAAGb,OAAO,CAAC;IACvB,OAAOC,QAAQ,CACX,EAAE,EACF;MACIO,SAAS;MACTC,OAAO;MACPC,OAAO;MACPC,OAAO;MACPC,oBAAoB;KACvB,EACDL,mBAAmB,CAACD,QAAQ,CAAC,CAChC;EACL,CAAC,EAAE,CACCA,QAAQ,EACRC,mBAAmB,EACnBC,SAAS,EACTC,OAAO,EACPC,OAAO,EACPC,OAAO,EACPC,oBAAoB,CACvB,CAAC;EAEF,OAAOC,UAAU;AACrB,CAAC","names":["useMemo","defaults","useResourceDefinitions","useResourceContext","useResourceDefinition","props","resource","resourceDefinitions","hasCreate","hasEdit","hasList","hasShow","recordRepresentation","definition"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/ra-core/src/core/useResourceDefinition.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport defaults from 'lodash/defaults';\n\nimport { useResourceDefinitions } from './useResourceDefinitions';\nimport { useResourceContext } from './useResourceContext';\nimport { ResourceDefinition } from '../types';\n\n/**\n * Hook to get the definition of a given resource\n *\n * @example // Get the current resource definition (based on ResourceContext)\n *\n * const definition = useResourceDefinition();\n * console.log(definition);\n * // {\n * //   name: 'posts',\n * //   hasList: true,\n * //   hasEdit: true,\n * //   hasShow: true,\n * //   hasCreate: true,\n * //   options: {},\n * //   icon: PostIcon,\n * // }\n *\n * @example // Pass a resource prop to check a different resource definition\n *\n * const definition = useResourceDefinition({ resource: 'posts' });\n */\nexport const useResourceDefinition = (\n    props?: UseResourceDefinitionOptions\n): ResourceDefinition => {\n    const resource = useResourceContext(props);\n    const resourceDefinitions = useResourceDefinitions();\n    const { hasCreate, hasEdit, hasList, hasShow, recordRepresentation } =\n        props || {};\n\n    const definition = useMemo(() => {\n        return defaults(\n            {},\n            {\n                hasCreate,\n                hasEdit,\n                hasList,\n                hasShow,\n                recordRepresentation,\n            },\n            resourceDefinitions[resource]\n        );\n    }, [\n        resource,\n        resourceDefinitions,\n        hasCreate,\n        hasEdit,\n        hasList,\n        hasShow,\n        recordRepresentation,\n    ]);\n\n    return definition;\n};\n\nexport interface UseResourceDefinitionOptions {\n    readonly resource?: string;\n    readonly hasList?: boolean;\n    readonly hasEdit?: boolean;\n    readonly hasShow?: boolean;\n    readonly hasCreate?: boolean;\n    readonly recordRepresentation?:\n        | string\n        | React.ReactElement\n        | ((record: any) => string);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
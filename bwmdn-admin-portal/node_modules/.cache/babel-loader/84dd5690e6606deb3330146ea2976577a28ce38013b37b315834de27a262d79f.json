{"ast":null,"code":"import { useContext } from 'react';\nimport { BasenameContext } from './BasenameContext';\n/**\n * Get the string to append to all links to the admin app.\n *\n * Useful when the app is mounted on a sub path, e.g. '/admin'.\n *\n * This hook is used internally by all react-admin components that\n * contain a link, and requires that the basename is set via the\n * `<BasenameContextProvider>` component (or via the `<Admin>` component,\n * which calls BasenameContextProvider internally).\n *\n * @see BasenameContextProvider\n *\n * @example\n * import { useBasename } from 'react-admin';\n *\n * const ArticleLink = ({ title, id }) => {\n *    const basename = useBasename();\n *    return <a href={`${basename}/articles/${id}`}>{title}</a>;\n * };\n */\nexport var useBasename = function () {\n  return useContext(BasenameContext);\n};","map":{"version":3,"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,SAASC,eAAe,QAAQ,mBAAmB;AAEnD;;;;;;;;;;;;;;;;;;;;AAoBA,OAAO,IAAMC,WAAW,GAAG;EAAM,iBAAU,CAACD,eAAe,CAAC;AAA3B,CAA2B","names":["useContext","BasenameContext","useBasename"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/ra-core/src/routing/useBasename.ts"],"sourcesContent":["import { useContext } from 'react';\n\nimport { BasenameContext } from './BasenameContext';\n\n/**\n * Get the string to append to all links to the admin app.\n *\n * Useful when the app is mounted on a sub path, e.g. '/admin'.\n *\n * This hook is used internally by all react-admin components that\n * contain a link, and requires that the basename is set via the\n * `<BasenameContextProvider>` component (or via the `<Admin>` component,\n * which calls BasenameContextProvider internally).\n *\n * @see BasenameContextProvider\n *\n * @example\n * import { useBasename } from 'react-admin';\n *\n * const ArticleLink = ({ title, id }) => {\n *    const basename = useBasename();\n *    return <a href={`${basename}/articles/${id}`}>{title}</a>;\n * };\n */\nexport const useBasename = () => useContext(BasenameContext);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
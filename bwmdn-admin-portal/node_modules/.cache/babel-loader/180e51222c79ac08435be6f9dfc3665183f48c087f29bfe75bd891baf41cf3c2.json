{"ast":null,"code":"/* jshint node:true */\n'use strict';\n\n// Escape the textDelimiters contained in the field\n/*(https://tools.ietf.org/html/rfc4180)\n   7.  If double-quotes are used to enclose fields, then a double-quote\n   appearing inside a field must be escaped by preceding it with\n   another double quote.\n   For example: \"aaa\",\"b\"\"bb\",\"ccc\"\n*/\nmodule.exports = function escapedDelimiters(textDelimiter, rowDelimiter, forceTextDelimiter) {\n  var endOfLine = '\\n';\n  if (typeof textDelimiter !== 'string') {\n    throw new TypeError('Invalid param \"textDelimiter\", must be a string.');\n  }\n  if (typeof rowDelimiter !== 'string') {\n    throw new TypeError('Invalid param \"rowDelimiter\", must be a string.');\n  }\n  var textDelimiterRegex = new RegExp(\"\\\\\" + textDelimiter, 'g');\n  var escapedDelimiter = textDelimiter + textDelimiter;\n  var enclosingCondition = textDelimiter === '\"' ? function (value) {\n    return value.indexOf(rowDelimiter) >= 0 || value.indexOf(endOfLine) >= 0 || value.indexOf('\"') >= 0;\n  } : function (value) {\n    return value.indexOf(rowDelimiter) >= 0 || value.indexOf(endOfLine) >= 0;\n  };\n  return function (value) {\n    if (forceTextDelimiter) value = \"\" + value;\n    if (!value.replace) return value;\n    // Escape the textDelimiters contained in the field\n    value = value.replace(textDelimiterRegex, escapedDelimiter);\n\n    // Escape the whole field if it contains a rowDelimiter or a linebreak or double quote\n    if (forceTextDelimiter || enclosingCondition(value)) {\n      value = textDelimiter + value + textDelimiter;\n    }\n    return value;\n  };\n};","map":{"version":3,"names":["module","exports","escapedDelimiters","textDelimiter","rowDelimiter","forceTextDelimiter","endOfLine","TypeError","textDelimiterRegex","RegExp","escapedDelimiter","enclosingCondition","value","indexOf","replace"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/jsonexport/dist/core/escape-delimiters.js"],"sourcesContent":["/* jshint node:true */\n'use strict';\n\n// Escape the textDelimiters contained in the field\n/*(https://tools.ietf.org/html/rfc4180)\n   7.  If double-quotes are used to enclose fields, then a double-quote\n   appearing inside a field must be escaped by preceding it with\n   another double quote.\n   For example: \"aaa\",\"b\"\"bb\",\"ccc\"\n*/\n\nmodule.exports = function escapedDelimiters(textDelimiter, rowDelimiter, forceTextDelimiter) {\n  var endOfLine = '\\n';\n\n  if (typeof textDelimiter !== 'string') {\n    throw new TypeError('Invalid param \"textDelimiter\", must be a string.');\n  }\n\n  if (typeof rowDelimiter !== 'string') {\n    throw new TypeError('Invalid param \"rowDelimiter\", must be a string.');\n  }\n\n  var textDelimiterRegex = new RegExp(\"\\\\\" + textDelimiter, 'g');\n  var escapedDelimiter = textDelimiter + textDelimiter;\n\n  var enclosingCondition = textDelimiter === '\"' ? function (value) {\n    return value.indexOf(rowDelimiter) >= 0 || value.indexOf(endOfLine) >= 0 || value.indexOf('\"') >= 0;\n  } : function (value) {\n    return value.indexOf(rowDelimiter) >= 0 || value.indexOf(endOfLine) >= 0;\n  };\n\n  return function (value) {\n    if (forceTextDelimiter) value = \"\" + value;\n\n    if (!value.replace) return value;\n    // Escape the textDelimiters contained in the field\n    value = value.replace(textDelimiterRegex, escapedDelimiter);\n\n    // Escape the whole field if it contains a rowDelimiter or a linebreak or double quote\n    if (forceTextDelimiter || enclosingCondition(value)) {\n      value = textDelimiter + value + textDelimiter;\n    }\n\n    return value;\n  };\n};"],"mappings":"AAAA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,MAAM,CAACC,OAAO,GAAG,SAASC,iBAAiB,CAACC,aAAa,EAAEC,YAAY,EAAEC,kBAAkB,EAAE;EAC3F,IAAIC,SAAS,GAAG,IAAI;EAEpB,IAAI,OAAOH,aAAa,KAAK,QAAQ,EAAE;IACrC,MAAM,IAAII,SAAS,CAAC,kDAAkD,CAAC;EACzE;EAEA,IAAI,OAAOH,YAAY,KAAK,QAAQ,EAAE;IACpC,MAAM,IAAIG,SAAS,CAAC,iDAAiD,CAAC;EACxE;EAEA,IAAIC,kBAAkB,GAAG,IAAIC,MAAM,CAAC,IAAI,GAAGN,aAAa,EAAE,GAAG,CAAC;EAC9D,IAAIO,gBAAgB,GAAGP,aAAa,GAAGA,aAAa;EAEpD,IAAIQ,kBAAkB,GAAGR,aAAa,KAAK,GAAG,GAAG,UAAUS,KAAK,EAAE;IAChE,OAAOA,KAAK,CAACC,OAAO,CAACT,YAAY,CAAC,IAAI,CAAC,IAAIQ,KAAK,CAACC,OAAO,CAACP,SAAS,CAAC,IAAI,CAAC,IAAIM,KAAK,CAACC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;EACrG,CAAC,GAAG,UAAUD,KAAK,EAAE;IACnB,OAAOA,KAAK,CAACC,OAAO,CAACT,YAAY,CAAC,IAAI,CAAC,IAAIQ,KAAK,CAACC,OAAO,CAACP,SAAS,CAAC,IAAI,CAAC;EAC1E,CAAC;EAED,OAAO,UAAUM,KAAK,EAAE;IACtB,IAAIP,kBAAkB,EAAEO,KAAK,GAAG,EAAE,GAAGA,KAAK;IAE1C,IAAI,CAACA,KAAK,CAACE,OAAO,EAAE,OAAOF,KAAK;IAChC;IACAA,KAAK,GAAGA,KAAK,CAACE,OAAO,CAACN,kBAAkB,EAAEE,gBAAgB,CAAC;;IAE3D;IACA,IAAIL,kBAAkB,IAAIM,kBAAkB,CAACC,KAAK,CAAC,EAAE;MACnDA,KAAK,GAAGT,aAAa,GAAGS,KAAK,GAAGT,aAAa;IAC/C;IAEA,OAAOS,KAAK;EACd,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
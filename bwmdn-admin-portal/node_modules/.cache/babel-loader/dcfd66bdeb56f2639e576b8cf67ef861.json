{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { IconButton, Tooltip } from '@mui/material';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport { useTranslate, usePreferencesEditor } from 'ra-core';\nexport var InspectorButton = React.forwardRef(function (_a, ref) {\n  var _b = _a.label,\n    label = _b === void 0 ? 'ra.configurable.configureMode' : _b,\n    _c = _a.SvgIconProps,\n    SvgIconProps = _c === void 0 ? {} : _c,\n    props = __rest(_a, [\"label\", \"SvgIconProps\"]);\n  var _d = usePreferencesEditor(),\n    enable = _d.enable,\n    disable = _d.disable,\n    setPreferenceKey = _d.setPreferenceKey,\n    isEnabled = _d.isEnabled;\n  var translate = useTranslate();\n  var handleClick = function () {\n    if (isEnabled) {\n      disable();\n      setPreferenceKey(null);\n    } else {\n      enable();\n    }\n  };\n  var translatedLabel = translate(label, {\n    _: 'Configure mode'\n  });\n  return React.createElement(Tooltip, {\n    title: translatedLabel\n  }, React.createElement(IconButton, __assign({\n    \"aria-label\": translatedLabel,\n    onClick: handleClick,\n    color: \"inherit\",\n    ref: ref\n  }, props), React.createElement(SettingsIcon, __assign({\n    fontSize: \"inherit\"\n  }, SvgIconProps))));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,UAAU,EAAmBC,OAAO,QAAQ,eAAe;AACpE,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,YAAY,EAAEC,oBAAoB,QAAQ,SAAS;AAE5D,OAAO,IAAMC,eAAe,GAAGN,KAAK,CAACO,UAAU,CAI3C,UACIC,EAIC,EACDC,GAAG;EAJC,iBAAuC;IAAvCC,KAAK,mBAAG,+BAA+B;IACvCC,oBAAiB;IAAjBC,YAAY,mBAAG,EAAE;IACdC,KAAK,cAHZ,yBAIC,CADW;EAIN,SAKFR,oBAAoB,EAAE;IAJtBS,MAAM;IACNC,OAAO;IACPC,gBAAgB;IAChBC,SAAS,eACa;EAC1B,IAAMC,SAAS,GAAGd,YAAY,EAAE;EAEhC,IAAMe,WAAW,GAAyC;IACtD,IAAIF,SAAS,EAAE;MACXF,OAAO,EAAE;MACTC,gBAAgB,CAAC,IAAI,CAAC;KACzB,MAAM;MACHF,MAAM,EAAE;;EAEhB,CAAC;EAED,IAAMM,eAAe,GAAGF,SAAS,CAACR,KAAK,EAAE;IAAEW,CAAC,EAAE;EAAgB,CAAE,CAAC;EAEjE,OACIrB,oBAACE,OAAO;IAACoB,KAAK,EAAEF;EAAe,GAC3BpB,oBAACC,UAAU;IAAA,cACKmB,eAAe;IAC3BG,OAAO,EAAEJ,WAAW;IACpBK,KAAK,EAAC,SAAS;IACff,GAAG,EAAEA;EAAG,GACJI,KAAK,GAETb,oBAACG,YAAY;IAACsB,QAAQ,EAAC;EAAS,GAAKb,YAAY,EAAI,CAC5C,CACP;AAElB,CAAC,CACJ","names":["React","IconButton","Tooltip","SettingsIcon","useTranslate","usePreferencesEditor","InspectorButton","forwardRef","_a","ref","label","_c","SvgIconProps","props","enable","disable","setPreferenceKey","isEnabled","translate","handleClick","translatedLabel","_","title","onClick","color","fontSize"],"sourceRoot":"","sources":["../../../src/preferences/InspectorButton.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
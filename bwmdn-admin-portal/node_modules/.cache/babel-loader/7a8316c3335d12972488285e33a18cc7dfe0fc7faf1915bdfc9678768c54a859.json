{"ast":null,"code":"import * as React from 'react';\nimport { useCallback, useMemo, useState } from 'react';\nimport { PreferencesEditorContext } from './PreferencesEditorContext';\nexport var PreferencesEditorContextProvider = function (_a) {\n  var children = _a.children;\n  var _b = useState(false),\n    isEnabled = _b[0],\n    setIsEnabled = _b[1];\n  var _c = useState(null),\n    editor = _c[0],\n    setEditor = _c[1];\n  var _d = useState(),\n    preferenceKey = _d[0],\n    setPreferenceKey = _d[1];\n  var _e = useState(null),\n    path = _e[0],\n    setPath = _e[1];\n  var _f = useState(null),\n    title = _f[0],\n    setTitleString = _f[1];\n  var _g = useState(),\n    titleOptions = _g[0],\n    setTitleOptions = _g[1];\n  var enable = useCallback(function () {\n    return setIsEnabled(true);\n  }, []);\n  var disable = useCallback(function () {\n    setIsEnabled(false);\n    setEditor(null);\n  }, []);\n  var setTitle = useCallback(function (title, titleOptions) {\n    setTitleString(title);\n    setTitleOptions(titleOptions);\n  }, []);\n  var context = useMemo(function () {\n    return {\n      editor: editor,\n      setEditor: setEditor,\n      preferenceKey: preferenceKey,\n      setPreferenceKey: setPreferenceKey,\n      title: title,\n      titleOptions: titleOptions,\n      setTitle: setTitle,\n      isEnabled: isEnabled,\n      disable: disable,\n      enable: enable,\n      path: path,\n      setPath: setPath\n    };\n  }, [disable, enable, editor, preferenceKey, isEnabled, path, setPath, title, titleOptions, setTitle]);\n  return React.createElement(PreferencesEditorContext.Provider, {\n    value: context\n  }, children);\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAuBC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACpE,SACIC,wBAAwB,QAErB,4BAA4B;AAEnC,OAAO,IAAMC,gCAAgC,GAAG,UAACC,EAAY;MAAVC,QAAQ;EACjD,SAA4BJ,QAAQ,CAAC,KAAK,CAAC;IAA1CK,SAAS;IAAEC,YAAY,QAAmB;EAC3C,SAAsBN,QAAQ,CAAe,IAAI,CAAC;IAAjDO,MAAM;IAAEC,SAAS,QAAgC;EAClD,SAAoCR,QAAQ,EAAU;IAArDS,aAAa;IAAEC,gBAAgB,QAAsB;EACtD,SAAkBV,QAAQ,CAAS,IAAI,CAAC;IAAvCW,IAAI;IAAEC,OAAO,QAA0B;EACxC,SAA0BZ,QAAQ,CAAS,IAAI,CAAC;IAA/Ca,KAAK;IAAEC,cAAc,QAA0B;EAChD,SAAkCd,QAAQ,EAAO;IAAhDe,YAAY;IAAEC,eAAe,QAAmB;EACvD,IAAMC,MAAM,GAAGnB,WAAW,CAAC;IAAM,mBAAY,CAAC,IAAI,CAAC;EAAlB,CAAkB,EAAE,EAAE,CAAC;EACxD,IAAMoB,OAAO,GAAGpB,WAAW,CAAC;IACxBQ,YAAY,CAAC,KAAK,CAAC;IACnBE,SAAS,CAAC,IAAI,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMW,QAAQ,GAAGrB,WAAW,CAAC,UAACe,KAAa,EAAEE,YAAkB;IAC3DD,cAAc,CAACD,KAAK,CAAC;IACrBG,eAAe,CAACD,YAAY,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMK,OAAO,GAAGrB,OAAO,CAAgC;IACnD,OAAO;MACHQ,MAAM;MACNC,SAAS;MACTC,aAAa;MACbC,gBAAgB;MAChBG,KAAK;MACLE,YAAY;MACZI,QAAQ;MACRd,SAAS;MACTa,OAAO;MACPD,MAAM;MACNN,IAAI;MACJC,OAAO;KACV;EACL,CAAC,EAAE,CACCM,OAAO,EACPD,MAAM,EACNV,MAAM,EACNE,aAAa,EACbJ,SAAS,EACTM,IAAI,EACJC,OAAO,EACPC,KAAK,EACLE,YAAY,EACZI,QAAQ,CACX,CAAC;EAEF,OACItB,oBAACI,wBAAwB,CAACoB,QAAQ;IAACC,KAAK,EAAEF;EAAO,GAC5ChB,QAAQ,CACuB;AAE5C,CAAC","names":["React","useCallback","useMemo","useState","PreferencesEditorContext","PreferencesEditorContextProvider","_a","children","isEnabled","setIsEnabled","editor","setEditor","preferenceKey","setPreferenceKey","path","setPath","title","setTitleString","titleOptions","setTitleOptions","enable","disable","setTitle","context","Provider","value"],"sources":["/Users/paigedeveau/node_modules/ra-core/src/preferences/PreferencesEditorContextProvider.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement, useCallback, useMemo, useState } from 'react';\nimport {\n    PreferencesEditorContext,\n    PreferencesEditorContextValue,\n} from './PreferencesEditorContext';\n\nexport const PreferencesEditorContextProvider = ({ children }) => {\n    const [isEnabled, setIsEnabled] = useState(false);\n    const [editor, setEditor] = useState<ReactElement>(null);\n    const [preferenceKey, setPreferenceKey] = useState<string>();\n    const [path, setPath] = useState<string>(null);\n    const [title, setTitleString] = useState<string>(null);\n    const [titleOptions, setTitleOptions] = useState<any>();\n    const enable = useCallback(() => setIsEnabled(true), []);\n    const disable = useCallback(() => {\n        setIsEnabled(false);\n        setEditor(null);\n    }, []);\n\n    const setTitle = useCallback((title: string, titleOptions?: any) => {\n        setTitleString(title);\n        setTitleOptions(titleOptions);\n    }, []);\n\n    const context = useMemo<PreferencesEditorContextValue>(() => {\n        return {\n            editor,\n            setEditor,\n            preferenceKey,\n            setPreferenceKey,\n            title,\n            titleOptions,\n            setTitle,\n            isEnabled,\n            disable,\n            enable,\n            path,\n            setPath,\n        };\n    }, [\n        disable,\n        enable,\n        editor,\n        preferenceKey,\n        isEnabled,\n        path,\n        setPath,\n        title,\n        titleOptions,\n        setTitle,\n    ]);\n\n    return (\n        <PreferencesEditorContext.Provider value={context}>\n            {children}\n        </PreferencesEditorContext.Provider>\n    );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport DownloadIcon from '@mui/icons-material/GetApp';\nimport { fetchRelatedRecords, useDataProvider, useNotify, useListContext } from 'ra-core';\nimport { Button } from './Button';\n/**\n * Export the selected rows\n *\n * To be used inside the <List bulkActionButtons> prop.\n *\n * @example // basic usage\n * import * as React from 'react';\n * import { Fragment } from 'react';\n * import { BulkDeleteButton, BulkExportButton } from 'react-admin';\n *\n * const PostBulkActionButtons = () => (\n *     <Fragment>\n *         <BulkExportButton />\n *         <BulkDeleteButton />\n *     </Fragment>\n * );\n *\n * export const PostList = (props) => (\n *     <List {...props} bulkActionButtons={<PostBulkActionButtons />}>\n *         ...\n *     </List>\n * );\n */\nexport var BulkExportButton = function (props) {\n  var onClick = props.onClick,\n    _a = props.label,\n    label = _a === void 0 ? 'ra.action.export' : _a,\n    _b = props.icon,\n    icon = _b === void 0 ? defaultIcon : _b,\n    customExporter = props.exporter,\n    rest = __rest(props, [\"onClick\", \"label\", \"icon\", \"exporter\"]);\n  var _c = useListContext(props),\n    exporterFromContext = _c.exporter,\n    resource = _c.resource,\n    selectedIds = _c.selectedIds;\n  var exporter = customExporter || exporterFromContext;\n  var dataProvider = useDataProvider();\n  var notify = useNotify();\n  var handleClick = useCallback(function (event) {\n    exporter && dataProvider.getMany(resource, {\n      ids: selectedIds\n    }).then(function (_a) {\n      var data = _a.data;\n      return exporter(data, fetchRelatedRecords(dataProvider), dataProvider, resource);\n    }).catch(function (error) {\n      console.error(error);\n      notify('ra.notification.http_error', {\n        type: 'warning'\n      });\n    });\n    if (typeof onClick === 'function') {\n      onClick(event);\n    }\n  }, [dataProvider, exporter, notify, onClick, resource, selectedIds]);\n  return React.createElement(Button, __assign({\n    onClick: handleClick,\n    label: label\n  }, sanitizeRestProps(rest)), icon);\n};\nvar defaultIcon = React.createElement(DownloadIcon, null);\nvar sanitizeRestProps = function (_a) {\n  var filterValues = _a.filterValues,\n    selectedIds = _a.selectedIds,\n    resource = _a.resource,\n    rest = __rest(_a, [\"filterValues\", \"selectedIds\", \"resource\"]);\n  return rest;\n};\nBulkExportButton.propTypes = {\n  exporter: PropTypes.func,\n  label: PropTypes.string,\n  resource: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  icon: PropTypes.element\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,WAAW,QAAQ,OAAO;AACnC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SACIC,mBAAmB,EACnBC,eAAe,EACfC,SAAS,EAGTC,cAAc,QACX,SAAS;AAEhB,SAASC,MAAM,QAAqB,UAAU;AAE9C;;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAO,IAAMC,gBAAgB,GAAG,UAACC,KAA4B;EAErD,WAAO,GAKPA,KAAK,QALE;IACPC,KAIAD,KAAK,MAJqB;IAA1BE,KAAK,mBAAG,kBAAkB;IAC1BC,KAGAH,KAAK,KAHa;IAAlBI,IAAI,mBAAGC,WAAW;IACRC,cAAc,GAExBN,KAAK,SAFmB;IACrBO,IAAI,UACPP,KAAK,EANH,wCAML,CADU;EAEL,SAIFH,cAAc,CAACG,KAAK,CAAC;IAHXQ,mBAAmB;IAC7BC,QAAQ;IACRC,WAAW,iBACU;EACzB,IAAMC,QAAQ,GAAGL,cAAc,IAAIE,mBAAmB;EACtD,IAAMI,YAAY,GAAGjB,eAAe,EAAE;EACtC,IAAMkB,MAAM,GAAGjB,SAAS,EAAE;EAC1B,IAAMkB,WAAW,GAAGvB,WAAW,CAC3B,eAAK;IACDoB,QAAQ,IACJC,YAAY,CACPG,OAAO,CAACN,QAAQ,EAAE;MAAEO,GAAG,EAAEN;IAAW,CAAE,CAAC,CACvCO,IAAI,CAAC,UAAChB,EAAQ;UAANiB,IAAI;MACT,eAAQ,CACJA,IAAI,EACJxB,mBAAmB,CAACkB,YAAY,CAAC,EACjCA,YAAY,EACZH,QAAQ,CACX;IALD,CAKC,CACJ,CACAU,KAAK,CAAC,eAAK;MACRC,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;MACpBR,MAAM,CAAC,4BAA4B,EAAE;QACjCS,IAAI,EAAE;OACT,CAAC;IACN,CAAC,CAAC;IACV,IAAI,OAAOC,OAAO,KAAK,UAAU,EAAE;MAC/BA,OAAO,CAACC,KAAK,CAAC;;EAEtB,CAAC,EACD,CAACZ,YAAY,EAAED,QAAQ,EAAEE,MAAM,EAAEU,OAAO,EAAEd,QAAQ,EAAEC,WAAW,CAAC,CACnE;EAED,OACIpB,oBAACQ,MAAM;IACHyB,OAAO,EAAET,WAAW;IACpBZ,KAAK,EAAEA;EAAK,GACRuB,iBAAiB,CAAClB,IAAI,CAAC,GAE1BH,IAAI,CACA;AAEjB,CAAC;AAED,IAAMC,WAAW,GAAGf,oBAACG,YAAY,OAAG;AAEpC,IAAMgC,iBAAiB,GAAG,UAACxB,EAKyB;EAJhD,gBAAY;IACZS,WAAW;IACXD,QAAQ;IACLF,IAAI,cAJgB,2CAK1B,CADU;EAC8C,WAAI;CAAA;AAc7DR,gBAAgB,CAAC2B,SAAS,GAAG;EACzBf,QAAQ,EAAEnB,SAAS,CAACmC,IAAI;EACxBzB,KAAK,EAAEV,SAAS,CAACoC,MAAM;EACvBnB,QAAQ,EAAEjB,SAAS,CAACoC,MAAM;EAC1BlB,WAAW,EAAElB,SAAS,CAACqC,OAAO,CAACrC,SAAS,CAACsC,GAAG,CAAC;EAC7C1B,IAAI,EAAEZ,SAAS,CAACuC;CACnB","names":["React","useCallback","PropTypes","DownloadIcon","fetchRelatedRecords","useDataProvider","useNotify","useListContext","Button","BulkExportButton","props","_a","label","_b","icon","defaultIcon","customExporter","rest","exporterFromContext","resource","selectedIds","exporter","dataProvider","notify","handleClick","getMany","ids","then","data","catch","console","error","type","onClick","event","sanitizeRestProps","propTypes","func","string","arrayOf","any","element"],"sourceRoot":"","sources":["../../../src/button/BulkExportButton.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { LinearProgress, styled } from '@mui/material';\nimport { cloneElement, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { sanitizeListRestProps, useListContext, useResourceContext, RecordContextProvider, ComponentPropType, useCreatePath } from 'ra-core';\nimport { Link } from '../Link';\n/**\n * Iterator component to be used to display a list of entities, using a single field\n *\n * @example Display all the books by the current author\n * <ReferenceManyField reference=\"books\" target=\"author_id\">\n *     <SingleFieldList>\n *         <ChipField source=\"title\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n *\n * By default, it includes a link to the <Edit> page of the related record\n * (`/books/:id` in the previous example).\n *\n * Set the linkType prop to \"show\" to link to the <Show> page instead.\n *\n * @example\n * <ReferenceManyField reference=\"books\" target=\"author_id\" linkType=\"show\">\n *     <SingleFieldList>\n *         <ChipField source=\"title\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n *\n * You can also prevent `<SingleFieldList>` from adding link to children by setting\n * `linkType` to false.\n *\n * @example\n * <ReferenceManyField reference=\"books\" target=\"author_id\" linkType={false}>\n *     <SingleFieldList>\n *         <ChipField source=\"title\" />\n *     </SingleFieldList>\n * </ReferenceManyField>\n */\nexport var SingleFieldList = function (props) {\n  var className = props.className,\n    children = props.children,\n    _a = props.linkType,\n    linkType = _a === void 0 ? 'edit' : _a,\n    _b = props.component,\n    Component = _b === void 0 ? Root : _b,\n    rest = __rest(props, [\"className\", \"children\", \"linkType\", \"component\"]);\n  var _c = useListContext(props),\n    data = _c.data,\n    isLoading = _c.isLoading;\n  var resource = useResourceContext(props);\n  var createPath = useCreatePath();\n  if (isLoading === true) {\n    return React.createElement(LinearProgress, null);\n  }\n  return React.createElement(Component, __assign({\n    className: className\n  }, sanitizeListRestProps(rest)), data.map(function (record, rowIndex) {\n    var _a, _b;\n    var resourceLinkPath = !linkType ? false : createPath({\n      resource: resource,\n      type: linkType,\n      id: record.id\n    });\n    if (resourceLinkPath) {\n      return React.createElement(RecordContextProvider, {\n        value: record,\n        key: (_a = record.id) !== null && _a !== void 0 ? _a : \"row\".concat(rowIndex)\n      }, React.createElement(Link, {\n        className: SingleFieldListClasses.link,\n        to: resourceLinkPath,\n        onClick: stopPropagation\n      }, cloneElement(Children.only(children), {\n        record: record,\n        resource: resource,\n        // Workaround to force ChipField to be clickable\n        onClick: handleClick\n      })));\n    }\n    return React.createElement(RecordContextProvider, {\n      value: record,\n      key: (_b = record.id) !== null && _b !== void 0 ? _b : \"row\".concat(rowIndex)\n    }, children);\n  }));\n};\nSingleFieldList.propTypes = {\n  children: PropTypes.element.isRequired,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  component: ComponentPropType,\n  data: PropTypes.any,\n  ids: PropTypes.array,\n  // @ts-ignore\n  linkType: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  resource: PropTypes.string,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n};\nvar PREFIX = 'RaSingleFieldList';\nexport var SingleFieldListClasses = {\n  link: \"\".concat(PREFIX, \"-link\")\n};\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginTop: theme.spacing(-1),\n    marginBottom: theme.spacing(-1)\n  }, _b[\"& .\".concat(SingleFieldListClasses.link)] = {\n    textDecoration: 'none'\n  }, _b;\n});\n// useful to prevent click bubbling in a datagrid with rowClick\nvar stopPropagation = function (e) {\n  return e.stopPropagation();\n};\n// Our handleClick does nothing as we wrap the children inside a Link but it is\n// required by ChipField, which uses a Chip from MUI.\n// The MUI Chip requires an onClick handler to behave like a clickable element.\nvar handleClick = function () {};","map":{"version":3,"mappings":"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","names":["React","LinearProgress","styled","cloneElement","Children","PropTypes","sanitizeListRestProps","useListContext","useResourceContext","RecordContextProvider","ComponentPropType","useCreatePath","Link","SingleFieldList","props","children","_a","linkType","_b","Component","Root","rest","data","isLoading","resource","createPath","className","map","record","rowIndex","resourceLinkPath","type","id","value","key","SingleFieldListClasses","link","to","onClick","stopPropagation","only","handleClick","propTypes","element","isRequired","classes","object","string","component","any","ids","array","oneOfType","bool","sx","arrayOf","func","PREFIX","name","overridesResolver","styles","root","theme","display","flexWrap","marginTop","spacing","marginBottom","textDecoration"],"sourceRoot":"","sources":["../../../src/list/SingleFieldList.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
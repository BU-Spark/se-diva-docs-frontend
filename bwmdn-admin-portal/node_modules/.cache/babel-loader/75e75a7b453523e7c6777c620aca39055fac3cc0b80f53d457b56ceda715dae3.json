{"ast":null,"code":"import { createContext, useMemo } from 'react';\nimport pick from 'lodash/pick';\n/**\n * Context to store the filter part of the useListController() result.\n *\n * Use the useListFilterContext() hook to read the context. That's what many\n * List components do in react-admin (e.g. <FilterForm>, <FilterListItem>).\n *\n * @typedef {Object} ListFilterContextValue\n * @prop {Object}   filterValues a dictionary of filter values, e.g. { title: 'lorem', nationality: 'fr' }\n * @prop {Function} setFilters a callback to update the filters, e.g. setFilters(filters, displayedFilters)\n * @prop {Object}   displayedFilters a dictionary of the displayed filters, e.g. { title: true, nationality: true }\n * @prop {Function} showFilter a callback to show one of the filters, e.g. showFilter('title', defaultValue)\n * @prop {Function} hideFilter a callback to hide one of the filters, e.g. hideFilter('title')\n * @prop {string}   resource the resource name, deduced from the location. e.g. 'posts'\n *\n * @typedef Props\n * @prop {ListFilterContextValue} value\n *\n * @param {Props}\n *\n * @see useListController\n * @see useListFilterContext\n *\n * @example\n *\n * import { useListController, usePickFilterContext, ListFilterContext } from 'ra-core';\n *\n * const List = props => {\n *     const controllerProps = useListController(props);\n *     return (\n *         <ListFilterContext.Provider value={usePickFilterContext(controllerProps)}>\n *             ...\n *         </ListFilterContext.Provider>\n *     );\n * };\n */\nexport var ListFilterContext = createContext({\n  displayedFilters: null,\n  filterValues: null,\n  hideFilter: null,\n  setFilters: null,\n  showFilter: null,\n  resource: null\n});\nexport var usePickFilterContext = function (context) {\n  return useMemo(function () {\n    return pick(context, ['displayedFilters', 'filterValues', 'hideFilter', 'setFilters', 'showFilter', 'resource']);\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [context.displayedFilters, context.filterValues, context.hideFilter, context.setFilters, context.showFilter]);\n};\nListFilterContext.displayName = 'ListFilterContext';","map":{"version":3,"mappings":"AAAA,SAASA,aAAa,EAAEC,OAAO,QAAQ,OAAO;AAC9C,OAAOC,IAAI,MAAM,aAAa;AAG9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,OAAO,IAAMC,iBAAiB,GAAGH,aAAa,CAAyB;EACnEI,gBAAgB,EAAE,IAAI;EACtBC,YAAY,EAAE,IAAI;EAClBC,UAAU,EAAE,IAAI;EAChBC,UAAU,EAAE,IAAI;EAChBC,UAAU,EAAE,IAAI;EAChBC,QAAQ,EAAE;CACb,CAAC;AAYF,OAAO,IAAMC,oBAAoB,GAAG,UAChCC,OAA6B;EAE7B,cAAO,CACH;IACI,WAAI,CAACA,OAAO,EAAE,CACV,kBAAkB,EAClB,cAAc,EACd,YAAY,EACZ,YAAY,EACZ,YAAY,EACZ,UAAU,CACb,CAAC;EAPF,CAOE;EACN;EACA,CACIA,OAAO,CAACP,gBAAgB,EACxBO,OAAO,CAACN,YAAY,EACpBM,OAAO,CAACL,UAAU,EAClBK,OAAO,CAACJ,UAAU,EAClBI,OAAO,CAACH,UAAU,CACrB,CACJ;AAlBD,CAkBC;AAELL,iBAAiB,CAACS,WAAW,GAAG,mBAAmB","names":["createContext","useMemo","pick","ListFilterContext","displayedFilters","filterValues","hideFilter","setFilters","showFilter","resource","usePickFilterContext","context","displayName"],"sources":["/Users/paigedeveau/node_modules/ra-core/src/controller/list/ListFilterContext.tsx"],"sourcesContent":["import { createContext, useMemo } from 'react';\nimport pick from 'lodash/pick';\nimport { ListControllerResult } from './useListController';\n\n/**\n * Context to store the filter part of the useListController() result.\n *\n * Use the useListFilterContext() hook to read the context. That's what many\n * List components do in react-admin (e.g. <FilterForm>, <FilterListItem>).\n *\n * @typedef {Object} ListFilterContextValue\n * @prop {Object}   filterValues a dictionary of filter values, e.g. { title: 'lorem', nationality: 'fr' }\n * @prop {Function} setFilters a callback to update the filters, e.g. setFilters(filters, displayedFilters)\n * @prop {Object}   displayedFilters a dictionary of the displayed filters, e.g. { title: true, nationality: true }\n * @prop {Function} showFilter a callback to show one of the filters, e.g. showFilter('title', defaultValue)\n * @prop {Function} hideFilter a callback to hide one of the filters, e.g. hideFilter('title')\n * @prop {string}   resource the resource name, deduced from the location. e.g. 'posts'\n *\n * @typedef Props\n * @prop {ListFilterContextValue} value\n *\n * @param {Props}\n *\n * @see useListController\n * @see useListFilterContext\n *\n * @example\n *\n * import { useListController, usePickFilterContext, ListFilterContext } from 'ra-core';\n *\n * const List = props => {\n *     const controllerProps = useListController(props);\n *     return (\n *         <ListFilterContext.Provider value={usePickFilterContext(controllerProps)}>\n *             ...\n *         </ListFilterContext.Provider>\n *     );\n * };\n */\nexport const ListFilterContext = createContext<ListFilterContextValue>({\n    displayedFilters: null,\n    filterValues: null,\n    hideFilter: null,\n    setFilters: null,\n    showFilter: null,\n    resource: null,\n});\n\nexport type ListFilterContextValue = Pick<\n    ListControllerResult,\n    | 'displayedFilters'\n    | 'filterValues'\n    | 'hideFilter'\n    | 'setFilters'\n    | 'showFilter'\n    | 'resource'\n>;\n\nexport const usePickFilterContext = (\n    context: ListControllerResult\n): ListFilterContextValue =>\n    useMemo(\n        () =>\n            pick(context, [\n                'displayedFilters',\n                'filterValues',\n                'hideFilter',\n                'setFilters',\n                'showFilter',\n                'resource',\n            ]),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [\n            context.displayedFilters,\n            context.filterValues,\n            context.hideFilter,\n            context.setFilters,\n            context.showFilter,\n        ]\n    );\n\nListFilterContext.displayName = 'ListFilterContext';\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
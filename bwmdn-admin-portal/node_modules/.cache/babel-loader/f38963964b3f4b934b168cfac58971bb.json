{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Tab as MuiTab } from '@mui/material';\nimport clsx from 'clsx';\nimport { useTranslate, useFormGroup } from 'ra-core';\nimport { useFormState } from 'react-hook-form';\nimport { TabbedFormClasses } from './TabbedFormView';\nexport var FormTabHeader = function (_a) {\n  var _b;\n  var label = _a.label,\n    value = _a.value,\n    icon = _a.icon,\n    className = _a.className,\n    onChange = _a.onChange,\n    syncWithLocation = _a.syncWithLocation,\n    rest = __rest(_a, [\"label\", \"value\", \"icon\", \"className\", \"onChange\", \"syncWithLocation\"]);\n  var translate = useTranslate();\n  var location = useLocation();\n  var isSubmitted = useFormState().isSubmitted;\n  var formGroup = useFormGroup(value.toString());\n  var propsForLink = {\n    component: Link,\n    to: __assign(__assign({}, location), {\n      pathname: value\n    })\n  };\n  return React.createElement(MuiTab, __assign({\n    label: isValidElement(label) ? label : translate(label, {\n      _: label\n    }),\n    value: value,\n    icon: icon,\n    className: clsx('form-tab', className, (_b = {}, _b[TabbedFormClasses.errorTabButton] = !formGroup.isValid && (formGroup.isTouched || isSubmitted), _b.error = !formGroup.isValid && (formGroup.isTouched || isSubmitted), _b))\n  }, syncWithLocation ? propsForLink : {}, {\n    id: \"tabheader-\".concat(value),\n    \"aria-controls\": \"tabpanel-\".concat(value),\n    onChange: onChange\n  }, rest));\n};\nFormTabHeader.propTypes = {\n  className: PropTypes.string,\n  contentClassName: PropTypes.string,\n  children: PropTypes.node,\n  intent: PropTypes.oneOf(['header', 'content']),\n  hidden: PropTypes.bool,\n  icon: PropTypes.element,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  margin: PropTypes.oneOf(['none', 'dense', 'normal']),\n  path: PropTypes.string,\n  // @ts-ignore\n  record: PropTypes.object,\n  resource: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n};","map":{"version":3,"mappings":"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","names":["React","isValidElement","PropTypes","Link","useLocation","Tab","MuiTab","clsx","useTranslate","useFormGroup","useFormState","TabbedFormClasses","FormTabHeader","_a","value","icon","className","onChange","syncWithLocation","rest","translate","location","formGroup","toString","propsForLink","component","to","pathname","label","_","_b","errorTabButton","isValid","isTouched","isSubmitted","id","propTypes","string","contentClassName","children","node","intent","oneOf","hidden","bool","element","oneOfType","isRequired","margin","path","record","object","resource","number","variant"],"sourceRoot":"","sources":["../../../src/form/FormTabHeader.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
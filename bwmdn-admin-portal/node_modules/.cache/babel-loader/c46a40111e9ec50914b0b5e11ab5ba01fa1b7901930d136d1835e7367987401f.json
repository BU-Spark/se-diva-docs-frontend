{"ast":null,"code":"import { createContext } from 'react';\n/**\n * Context for the notification state and modifiers\n *\n * @example // display notifications\n * import { useNotificationContext } from 'react-admin';\n *\n * const App = () => {\n *    const { notifications } = useNotificationContext();\n *    return (\n *        <ul>\n *            {notifications.map(({ message }) => (\n *                <li key={index}>{ message }</li>\n *            ))}\n *        </ul>\n *    );\n * };\n *\n * @example // reset notifications\n * import { useNotificationContext } from 'react-admin';\n *\n * const ResetNotificationsButton = () => {\n *    const { resetNotifications } = useNotificationContext();\n *    return (\n *        <button onClick={() => resetNotifications()}>Reset notifications</button>\n *    );\n * };\n */\nexport var NotificationContext = createContext({\n  notifications: [],\n  addNotification: function () {},\n  takeNotification: function () {},\n  resetNotifications: function () {}\n});","map":{"version":3,"mappings":"AAAA,SAASA,aAAa,QAAQ,OAAO;AAWrC;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,OAAO,IAAMC,mBAAmB,GAAGD,aAAa,CAA0B;EACtEE,aAAa,EAAE,EAAE;EACjBC,eAAe,EAAE,aAAO,CAAC;EACzBC,gBAAgB,EAAE,aAAO,CAAC;EAC1BC,kBAAkB,EAAE,aAAO;CAC9B,CAAC","names":["createContext","NotificationContext","notifications","addNotification","takeNotification","resetNotifications"],"sources":["/Users/paigedeveau/node_modules/ra-core/src/notification/NotificationContext.ts"],"sourcesContent":["import { createContext } from 'react';\n\nimport { NotificationPayload } from './types';\n\nexport type NotificationContextType = {\n    notifications: NotificationPayload[];\n    addNotification: (notification: NotificationPayload) => void;\n    takeNotification: () => NotificationPayload | void;\n    resetNotifications: () => void;\n};\n\n/**\n * Context for the notification state and modifiers\n *\n * @example // display notifications\n * import { useNotificationContext } from 'react-admin';\n *\n * const App = () => {\n *    const { notifications } = useNotificationContext();\n *    return (\n *        <ul>\n *            {notifications.map(({ message }) => (\n *                <li key={index}>{ message }</li>\n *            ))}\n *        </ul>\n *    );\n * };\n *\n * @example // reset notifications\n * import { useNotificationContext } from 'react-admin';\n *\n * const ResetNotificationsButton = () => {\n *    const { resetNotifications } = useNotificationContext();\n *    return (\n *        <button onClick={() => resetNotifications()}>Reset notifications</button>\n *    );\n * };\n */\nexport const NotificationContext = createContext<NotificationContextType>({\n    notifications: [],\n    addNotification: () => {},\n    takeNotification: () => {},\n    resetNotifications: () => {},\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { cloneElement, Children, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { isRequired, FieldTitle, composeSyncValidators, useApplyInputDefaultValues, useGetValidationErrorMessage, useFormGroupContext, useFormGroups } from 'ra-core';\nimport { useFieldArray, useFormContext } from 'react-hook-form';\nimport { InputLabel, FormControl, FormHelperText, styled } from '@mui/material';\nimport { LinearProgress } from '../../layout';\nimport { InputHelperText } from '../InputHelperText';\nimport { sanitizeInputRestProps } from '../sanitizeInputRestProps';\nimport { Labeled } from '../../Labeled';\nimport { ArrayInputContext } from './ArrayInputContext';\n/**\n * To edit arrays of data embedded inside a record, <ArrayInput> creates a list of sub-forms.\n *\n *  @example\n *\n *      import { ArrayInput, SimpleFormIterator, DateInput, TextInput } from 'react-admin';\n *\n *      <ArrayInput source=\"backlinks\">\n *          <SimpleFormIterator>\n *              <DateInput source=\"date\" />\n *              <TextInput source=\"url\" />\n *          </SimpleFormIterator>\n *      </ArrayInput>\n *\n * <ArrayInput> allows the edition of embedded arrays, like the backlinks field\n * in the following post record:\n *\n * {\n *   id: 123\n *   backlinks: [\n *         {\n *             date: '2012-08-10T00:00:00.000Z',\n *             url: 'http://example.com/foo/bar.html',\n *         },\n *         {\n *             date: '2012-08-14T00:00:00.000Z',\n *             url: 'https://blog.johndoe.com/2012/08/12/foobar.html',\n *         }\n *    ]\n * }\n *\n * <ArrayInput> expects a single child, which must be a *form iterator* component.\n * A form iterator is a component accepting a fields object as passed by\n * react-hook-form-arrays's useFieldArray() hook, and defining a layout for\n * an array of fields. For instance, the <SimpleFormIterator> component\n * displays an array of fields in an unordered list (<ul>), one sub-form by\n * list item (<li>). It also provides controls for adding and removing\n * a sub-record (a backlink in this example).\n *\n * @see {@link https://react-hook-form.com/api/usefieldarray}\n */\nexport var ArrayInput = function (props) {\n  var _a, _b;\n  var className = props.className,\n    defaultValue = props.defaultValue,\n    label = props.label,\n    isFetching = props.isFetching,\n    isLoading = props.isLoading,\n    children = props.children,\n    helperText = props.helperText,\n    record = props.record,\n    resourceFromProps = props.resource,\n    source = props.source,\n    validate = props.validate,\n    variant = props.variant,\n    disabled = props.disabled,\n    _c = props.margin,\n    margin = _c === void 0 ? 'dense' : _c,\n    rest = __rest(props, [\"className\", \"defaultValue\", \"label\", \"isFetching\", \"isLoading\", \"children\", \"helperText\", \"record\", \"resource\", \"source\", \"validate\", \"variant\", \"disabled\", \"margin\"]);\n  var formGroupName = useFormGroupContext();\n  var formGroups = useFormGroups();\n  var sanitizedValidate = Array.isArray(validate) ? composeSyncValidators(validate) : validate;\n  var getValidationErrorMessage = useGetValidationErrorMessage();\n  var _d = useFormContext(),\n    getFieldState = _d.getFieldState,\n    formState = _d.formState,\n    getValues = _d.getValues,\n    register = _d.register,\n    unregister = _d.unregister;\n  var fieldProps = useFieldArray({\n    name: source,\n    rules: {\n      validate: function (value) {\n        return __awaiter(void 0, void 0, void 0, function () {\n          var error;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                if (!sanitizedValidate) return [2 /*return*/, true];\n                return [4 /*yield*/, sanitizedValidate(value, getValues(), props)];\n              case 1:\n                error = _a.sent();\n                if (!error) return [2 /*return*/, true];\n                return [2 /*return*/, getValidationErrorMessage(error)];\n            }\n          });\n        });\n      }\n    }\n  });\n  var isSubmitted = formState.isSubmitted;\n  // We need to register the array itself as a field to enable validation at its level\n  useEffect(function () {\n    register(source);\n    formGroups.registerField(source, formGroupName);\n    return function () {\n      unregister(source, {\n        keepValue: true\n      });\n      formGroups.unregisterField(source, formGroupName);\n    };\n  }, [register, unregister, source, formGroups, formGroupName]);\n  useApplyInputDefaultValues(props);\n  var _e = getFieldState(source, formState),\n    isDirty = _e.isDirty,\n    error = _e.error;\n  if (isLoading) {\n    return React.createElement(Labeled, {\n      label: label,\n      className: className\n    }, React.createElement(LinearProgress, null));\n  }\n  return React.createElement(Root, __assign({\n    fullWidth: true,\n    margin: margin,\n    className: clsx('ra-input', \"ra-input-\".concat(source), ArrayInputClasses.root, className),\n    error: (isDirty || isSubmitted) && !!error\n  }, sanitizeInputRestProps(rest)), React.createElement(InputLabel, {\n    htmlFor: source,\n    className: ArrayInputClasses.label,\n    shrink: true,\n    error: (isDirty || isSubmitted) && !!error\n  }, React.createElement(FieldTitle, {\n    label: label,\n    source: source,\n    resource: resourceFromProps,\n    isRequired: isRequired(validate)\n  })), React.createElement(ArrayInputContext.Provider, {\n    value: fieldProps\n  }, cloneElement(Children.only(children), __assign(__assign({}, fieldProps), {\n    record: record,\n    resource: resourceFromProps,\n    source: source,\n    variant: variant,\n    margin: margin,\n    disabled: disabled\n  }))), !!((isDirty || isSubmitted) && !!error) || helperText ? React.createElement(FormHelperText, {\n    error: (isDirty || isSubmitted) && !!error\n  }, React.createElement(InputHelperText, {\n    touched: isDirty || isSubmitted,\n    // root property is applicable to built-in validation only,\n    // Resolvers are yet to support useFieldArray root level validation.\n    // Reference: https://react-hook-form.com/api/usefieldarray\n    error: (_b = (_a = error === null || error === void 0 ? void 0 : error.root) === null || _a === void 0 ? void 0 : _a.message) !== null && _b !== void 0 ? _b : error === null || error === void 0 ? void 0 : error.message,\n    helperText: helperText\n  })) : null);\n};\nArrayInput.defaultProps = {\n  options: {}\n};\nexport var getArrayInputError = function (error) {\n  if (Array.isArray(error)) {\n    return undefined;\n  }\n  return error;\n};\nvar PREFIX = 'RaArrayInput';\nexport var ArrayInputClasses = {\n  root: \"\".concat(PREFIX, \"-root\"),\n  label: \"\".concat(PREFIX, \"-label\")\n};\nvar Root = styled(FormControl, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {\n    marginTop: 0\n  }, _b[\"& .\".concat(ArrayInputClasses.label)] = {\n    position: 'relative',\n    top: theme.spacing(0.5),\n    left: theme.spacing(-1.5)\n  }, _b[\"& .\".concat(ArrayInputClasses.root)] = {\n    // nested ArrayInput\n    paddingLeft: theme.spacing(2)\n  }, _b;\n});","map":{"version":3,"mappings":"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","names":["React","cloneElement","Children","useEffect","clsx","isRequired","FieldTitle","composeSyncValidators","useApplyInputDefaultValues","useGetValidationErrorMessage","useFormGroupContext","useFormGroups","useFieldArray","useFormContext","InputLabel","FormControl","FormHelperText","styled","LinearProgress","InputHelperText","sanitizeInputRestProps","Labeled","ArrayInputContext","ArrayInput","props","defaultValue","label","isFetching","isLoading","children","helperText","record","resourceFromProps","source","validate","variant","disabled","_c","margin","rest","formGroupName","formGroups","sanitizedValidate","Array","isArray","getValidationErrorMessage","getFieldState","formState","getValues","register","unregister","fieldProps","name","rules","value","error","_a","registerField","keepValue","unregisterField","isDirty","className","Root","fullWidth","ArrayInputClasses","root","isSubmitted","htmlFor","shrink","resource","Provider","only","touched","message","defaultProps","options","getArrayInputError","undefined","PREFIX","overridesResolver","styles","theme","marginTop","_b","position","top","spacing","left","paddingLeft"],"sourceRoot":"","sources":["../../../../src/input/ArrayInput/ArrayInput.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
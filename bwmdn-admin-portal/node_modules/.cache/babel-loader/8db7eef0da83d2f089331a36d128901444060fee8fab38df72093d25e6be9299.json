{"ast":null,"code":"import { fetchActionsWithRecordResponse, fetchActionsWithArrayOfIdentifiedRecordsResponse, fetchActionsWithArrayOfRecordsResponse, fetchActionsWithTotalResponse } from './dataFetchActions';\nfunction validateResponseFormat(response, type, logger // eslint-disable-line no-console\n) {\n  if (logger === void 0) {\n    logger = console.error;\n  }\n  if (!response) {\n    logger(\"The dataProvider returned an empty response for '\".concat(type, \"'.\"));\n    throw new Error('ra.notification.data_provider_error');\n  }\n  if (!response.hasOwnProperty('data')) {\n    logger(\"The response to '\".concat(type, \"' must be like { data: ... }, but the received response does not have a 'data' key. The dataProvider is probably wrong for '\").concat(type, \"'.\"));\n    throw new Error('ra.notification.data_provider_error');\n  }\n  if (fetchActionsWithArrayOfRecordsResponse.includes(type) && !Array.isArray(response.data)) {\n    logger(\"The response to '\".concat(type, \"' must be like { data : [...] }, but the received data is not an array. The dataProvider is probably wrong for '\").concat(type, \"'\"));\n    throw new Error('ra.notification.data_provider_error');\n  }\n  if (fetchActionsWithArrayOfIdentifiedRecordsResponse.includes(type) && Array.isArray(response.data) && response.data.length > 0 && !response.data[0].hasOwnProperty('id')) {\n    logger(\"The response to '\".concat(type, \"' must be like { data : [{ id: 123, ...}, ...] }, but the received data items do not have an 'id' key. The dataProvider is probably wrong for '\").concat(type, \"'\"));\n    throw new Error('ra.notification.data_provider_error');\n  }\n  if (fetchActionsWithRecordResponse.includes(type) && !response.data.hasOwnProperty('id')) {\n    logger(\"The response to '\".concat(type, \"' must be like { data: { id: 123, ... } }, but the received data does not have an 'id' key. The dataProvider is probably wrong for '\").concat(type, \"'\"));\n    throw new Error('ra.notification.data_provider_error');\n  }\n  if (fetchActionsWithTotalResponse.includes(type) && !response.hasOwnProperty('total') && !response.hasOwnProperty('pageInfo')) {\n    logger(\"The response to '\".concat(type, \"' must be like  { data: [...], total: 123 }, but the received response does not have a 'total' key. The dataProvider is probably wrong for '\").concat(type, \"'\"));\n    throw new Error('ra.notification.data_provider_error');\n  }\n}\nexport default validateResponseFormat;","map":{"version":3,"mappings":"AAAA,SACIA,8BAA8B,EAC9BC,gDAAgD,EAChDC,sCAAsC,EACtCC,6BAA6B,QAC1B,oBAAoB;AAE3B,SAASC,sBAAsB,CAC3BC,QAAQ,EACRC,IAAI,EACJC,MAAsB,CAAC;AAAA;EAAvB;IAAAA,SAASC,OAAO,CAACC,KAAK;EAAA;EAEtB,IAAI,CAACJ,QAAQ,EAAE;IACXE,MAAM,CAAC,2DAAoDD,IAAI,OAAI,CAAC;IACpE,MAAM,IAAII,KAAK,CAAC,qCAAqC,CAAC;;EAE1D,IAAI,CAACL,QAAQ,CAACM,cAAc,CAAC,MAAM,CAAC,EAAE;IAClCJ,MAAM,CACF,2BAAoBD,IAAI,yIAA+HA,IAAI,OAAI,CAClK;IACD,MAAM,IAAII,KAAK,CAAC,qCAAqC,CAAC;;EAE1D,IACIR,sCAAsC,CAACU,QAAQ,CAACN,IAAI,CAAC,IACrD,CAACO,KAAK,CAACC,OAAO,CAACT,QAAQ,CAACU,IAAI,CAAC,EAC/B;IACER,MAAM,CACF,2BAAoBD,IAAI,6HAAmHA,IAAI,MAAG,CACrJ;IACD,MAAM,IAAII,KAAK,CAAC,qCAAqC,CAAC;;EAE1D,IACIT,gDAAgD,CAACW,QAAQ,CAACN,IAAI,CAAC,IAC/DO,KAAK,CAACC,OAAO,CAACT,QAAQ,CAACU,IAAI,CAAC,IAC5BV,QAAQ,CAACU,IAAI,CAACC,MAAM,GAAG,CAAC,IACxB,CAACX,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC,CAACJ,cAAc,CAAC,IAAI,CAAC,EACxC;IACEJ,MAAM,CACF,2BAAoBD,IAAI,4JAAkJA,IAAI,MAAG,CACpL;IACD,MAAM,IAAII,KAAK,CAAC,qCAAqC,CAAC;;EAE1D,IACIV,8BAA8B,CAACY,QAAQ,CAACN,IAAI,CAAC,IAC7C,CAACD,QAAQ,CAACU,IAAI,CAACJ,cAAc,CAAC,IAAI,CAAC,EACrC;IACEJ,MAAM,CACF,2BAAoBD,IAAI,iJAAuIA,IAAI,MAAG,CACzK;IACD,MAAM,IAAII,KAAK,CAAC,qCAAqC,CAAC;;EAE1D,IACIP,6BAA6B,CAACS,QAAQ,CAACN,IAAI,CAAC,IAC5C,CAACD,QAAQ,CAACM,cAAc,CAAC,OAAO,CAAC,IACjC,CAACN,QAAQ,CAACM,cAAc,CAAC,UAAU,CAAC,EACtC;IACEJ,MAAM,CACF,2BAAoBD,IAAI,yJAA+IA,IAAI,MAAG,CACjL;IACD,MAAM,IAAII,KAAK,CAAC,qCAAqC,CAAC;;AAE9D;AAEA,eAAeN,sBAAsB","names":["fetchActionsWithRecordResponse","fetchActionsWithArrayOfIdentifiedRecordsResponse","fetchActionsWithArrayOfRecordsResponse","fetchActionsWithTotalResponse","validateResponseFormat","response","type","logger","console","error","Error","hasOwnProperty","includes","Array","isArray","data","length"],"sources":["/Users/paigedeveau/node_modules/ra-core/src/dataProvider/validateResponseFormat.ts"],"sourcesContent":["import {\n    fetchActionsWithRecordResponse,\n    fetchActionsWithArrayOfIdentifiedRecordsResponse,\n    fetchActionsWithArrayOfRecordsResponse,\n    fetchActionsWithTotalResponse,\n} from './dataFetchActions';\n\nfunction validateResponseFormat(\n    response,\n    type,\n    logger = console.error // eslint-disable-line no-console\n) {\n    if (!response) {\n        logger(`The dataProvider returned an empty response for '${type}'.`);\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (!response.hasOwnProperty('data')) {\n        logger(\n            `The response to '${type}' must be like { data: ... }, but the received response does not have a 'data' key. The dataProvider is probably wrong for '${type}'.`\n        );\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (\n        fetchActionsWithArrayOfRecordsResponse.includes(type) &&\n        !Array.isArray(response.data)\n    ) {\n        logger(\n            `The response to '${type}' must be like { data : [...] }, but the received data is not an array. The dataProvider is probably wrong for '${type}'`\n        );\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (\n        fetchActionsWithArrayOfIdentifiedRecordsResponse.includes(type) &&\n        Array.isArray(response.data) &&\n        response.data.length > 0 &&\n        !response.data[0].hasOwnProperty('id')\n    ) {\n        logger(\n            `The response to '${type}' must be like { data : [{ id: 123, ...}, ...] }, but the received data items do not have an 'id' key. The dataProvider is probably wrong for '${type}'`\n        );\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (\n        fetchActionsWithRecordResponse.includes(type) &&\n        !response.data.hasOwnProperty('id')\n    ) {\n        logger(\n            `The response to '${type}' must be like { data: { id: 123, ... } }, but the received data does not have an 'id' key. The dataProvider is probably wrong for '${type}'`\n        );\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (\n        fetchActionsWithTotalResponse.includes(type) &&\n        !response.hasOwnProperty('total') &&\n        !response.hasOwnProperty('pageInfo')\n    ) {\n        logger(\n            `The response to '${type}' must be like  { data: [...], total: 123 }, but the received response does not have a 'total' key. The dataProvider is probably wrong for '${type}'`\n        );\n        throw new Error('ra.notification.data_provider_error');\n    }\n}\n\nexport default validateResponseFormat;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { Children, isValidElement } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Stack } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useRecordContext, OptionalRecordContextProvider } from 'ra-core';\nimport { Labeled } from '../Labeled';\n/**\n * Layout for a Show view showing fields in one column.\n *\n * It pulls the record from the RecordContext. It renders the record fields in\n * a single-column layout (via MUI's `<Stack>` component).\n * `<SimpleShowLayout>` delegates the actual rendering of fields to its children.\n * It wraps each field inside a `<Labeled>` component to add a label.\n *\n * @example\n * // in src/posts.js\n * import * as React from \"react\";\n * import { Show, SimpleShowLayout, TextField } from 'react-admin';\n *\n * export const PostShow = () => (\n *     <Show>\n *         <SimpleShowLayout>\n *             <TextField source=\"title\" />\n *         </SimpleShowLayout>\n *     </Show>\n * );\n *\n * // in src/App.js\n * import * as React from \"react\";\n * import { Admin, Resource } from 'react-admin';\n *\n * import { PostShow } from './posts';\n *\n * const App = () => (\n *     <Admin dataProvider={...}>\n *         <Resource name=\"posts\" show={PostShow} />\n *     </Admin>\n * );\n *\n * @param {SimpleShowLayoutProps} props\n * @param {string} props.className A className to apply to the page content.\n * @param {ElementType} props.component The component to use as root component (div by default).\n * @param {ReactNode} props.divider An optional divider between each field, passed to `<Stack>`.\n * @param {number} props.spacing The spacing to use between each field, passed to `<Stack>`. Defaults to 1.\n * @param {Object} props.sx Custom style object.\n */\nexport var SimpleShowLayout = function (props) {\n  var className = props.className,\n    children = props.children,\n    divider = props.divider,\n    _a = props.spacing,\n    spacing = _a === void 0 ? 1 : _a,\n    rest = __rest(props, [\"className\", \"children\", \"divider\", \"spacing\"]);\n  var record = useRecordContext(props);\n  if (!record) {\n    return null;\n  }\n  return React.createElement(OptionalRecordContextProvider, {\n    value: props.record\n  }, React.createElement(Root, __assign({\n    className: className\n  }, sanitizeRestProps(rest)), React.createElement(Stack, {\n    spacing: spacing,\n    divider: divider,\n    className: SimpleShowLayoutClasses.stack\n  }, Children.map(children, function (field) {\n    return field && isValidElement(field) ? React.createElement(Labeled, {\n      key: field.props.source,\n      className: clsx('ra-field', field.props.source && \"ra-field-\".concat(field.props.source), SimpleShowLayoutClasses.row, field.props.className)\n    }, field) : null;\n  }))));\n};\nSimpleShowLayout.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  record: PropTypes.object,\n  spacing: PropTypes.any,\n  sx: PropTypes.any\n};\nvar PREFIX = 'RaSimpleShowLayout';\nexport var SimpleShowLayoutClasses = {\n  stack: \"\".concat(PREFIX, \"-stack\"),\n  row: \"\".concat(PREFIX, \"-row\")\n};\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {\n    flex: 1,\n    padding: \"\".concat(theme.spacing(1), \" \").concat(theme.spacing(2))\n  }, _b[\"& .\".concat(SimpleShowLayoutClasses.stack)] = {}, _b[\"& .\".concat(SimpleShowLayoutClasses.row)] = {\n    display: 'inline'\n  }, _b;\n});\nvar sanitizeRestProps = function (_a) {\n  var record = _a.record,\n    resource = _a.resource,\n    initialValues = _a.initialValues,\n    translate = _a.translate,\n    rest = __rest(_a, [\"record\", \"resource\", \"initialValues\", \"translate\"]);\n  return rest;\n};","map":{"version":3,"mappings":"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","names":["React","Children","isValidElement","styled","Stack","PropTypes","clsx","useRecordContext","OptionalRecordContextProvider","Labeled","SimpleShowLayout","props","children","divider","_a","spacing","rest","record","value","Root","className","sanitizeRestProps","SimpleShowLayoutClasses","stack","map","field","key","source","row","propTypes","node","string","object","any","sx","PREFIX","name","overridesResolver","styles","root","theme","flex","padding","_b","display","resource","initialValues","translate"],"sourceRoot":"","sources":["../../../src/detail/SimpleShowLayout.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
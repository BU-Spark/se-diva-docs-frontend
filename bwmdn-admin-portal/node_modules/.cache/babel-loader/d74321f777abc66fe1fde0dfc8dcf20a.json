{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { Children, cloneElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport { useParams } from 'react-router-dom';\nexport var TabbedFormTabs = function (props) {\n  var children = props.children,\n    url = props.url,\n    syncWithLocation = props.syncWithLocation,\n    value = props.value,\n    rest = __rest(props, [\"children\", \"url\", \"syncWithLocation\", \"value\"]);\n  var params = useParams();\n  // params will include eventual parameters from the root pathname and * for the remaining part\n  // which should match the tabs paths\n  var tabValue = params['*'];\n  return React.createElement(Tabs, __assign({\n    value: syncWithLocation ? tabValue : value,\n    indicatorColor: \"primary\"\n  }, rest), Children.map(children, function (tab, index) {\n    if (!isValidElement(tab)) return null;\n    // Builds the full tab which is the concatenation of the last matched route in the\n    // TabbedShowLayout hierarchy (ex: '/posts/create', '/posts/12', , '/posts/12/show')\n    // and the tab path.\n    // This will be used as the Tab's value\n    var tabPath = getTabbedFormTabFullPath(tab, index);\n    return cloneElement(tab, {\n      intent: 'header',\n      value: syncWithLocation ? tabPath : index,\n      syncWithLocation: syncWithLocation\n    });\n  }));\n};\nTabbedFormTabs.propTypes = {\n  children: PropTypes.node,\n  url: PropTypes.string,\n  tabsWithErrors: PropTypes.arrayOf(PropTypes.string)\n};\nexport var getTabbedFormTabFullPath = function (tab, index) {\n  return tab.props.path != null ? tab.props.path : index > 0 ? index.toString() : '';\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,YAAY,EAAEC,cAAc,QAAsB,OAAO;AAC5E,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,IAAmB,MAAM,oBAAoB;AACpD,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAO,IAAMC,cAAc,GAAG,UAACC,KAA0B;EAC7C,YAAQ,GAA4CA,KAAK,SAAjD;IAAEC,GAAG,GAAuCD,KAAK,IAA5C;IAAEE,gBAAgB,GAAqBF,KAAK,iBAA1B;IAAEG,KAAK,GAAcH,KAAK,MAAnB;IAAKI,IAAI,UAAKJ,KAAK,EAA3D,gDAAmD,CAAF;EAEvD,IAAMK,MAAM,GAAGP,SAAS,EAAE;EAE1B;EACA;EACA,IAAMQ,QAAQ,GAAGD,MAAM,CAAC,GAAG,CAAC;EAE5B,OACIb,oBAACK,IAAI;IACDM,KAAK,EAAED,gBAAgB,GAAGI,QAAQ,GAAGH,KAAK;IAC1CI,cAAc,EAAC;EAAS,GACpBH,IAAI,GAEPX,QAAQ,CAACe,GAAG,CAACC,QAAQ,EAAE,UAACC,GAAiB,EAAEC,KAAK;IAC7C,IAAI,CAAChB,cAAc,CAAMe,GAAG,CAAC,EAAE,OAAO,IAAI;IAE1C;IACA;IACA;IACA;IACA,IAAME,OAAO,GAAGC,wBAAwB,CAACH,GAAG,EAAEC,KAAK,CAAC;IAEpD,OAAOjB,YAAY,CAACgB,GAAG,EAAE;MACrBI,MAAM,EAAE,QAAQ;MAChBX,KAAK,EAAED,gBAAgB,GAAGU,OAAO,GAAGD,KAAK;MACzCT,gBAAgB;KACnB,CAAC;EACN,CAAC,CAAC,CACC;AAEf,CAAC;AAEDH,cAAc,CAACgB,SAAS,GAAG;EACvBN,QAAQ,EAAEb,SAAS,CAACoB,IAAI;EACxBf,GAAG,EAAEL,SAAS,CAACqB,MAAM;EACrBC,cAAc,EAAEtB,SAAS,CAACuB,OAAO,CAACvB,SAAS,CAACqB,MAAM;CACrD;AAED,OAAO,IAAMJ,wBAAwB,GAAG,UACpCH,GAAiB,EACjBC,KAAa;EAEb,UAAG,CAACX,KAAK,CAACoB,IAAI,IAAI,IAAI,GAAGV,GAAG,CAACV,KAAK,CAACoB,IAAI,GAAGT,KAAK,GAAG,CAAC,GAAGA,KAAK,CAACU,QAAQ,EAAE,GAAG,EAAE;AAA3E,CAA2E","names":["React","Children","cloneElement","isValidElement","PropTypes","Tabs","useParams","TabbedFormTabs","props","url","syncWithLocation","value","rest","params","tabValue","indicatorColor","map","children","tab","index","tabPath","getTabbedFormTabFullPath","intent","propTypes","node","string","tabsWithErrors","arrayOf","path","toString"],"sourceRoot":"","sources":["../../../src/form/TabbedFormTabs.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
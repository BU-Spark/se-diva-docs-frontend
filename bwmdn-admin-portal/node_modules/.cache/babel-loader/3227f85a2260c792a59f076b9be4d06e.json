{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport { alpha } from '@mui/material/styles';\nimport ActionCheck from '@mui/icons-material/CheckCircle';\nimport AlertError from '@mui/icons-material/ErrorOutline';\nimport clsx from 'clsx';\nimport { useTranslate } from 'ra-core';\n/**\n * Confirmation dialog\n *\n * @example\n * <Confirm\n *     isOpen={true}\n *     title=\"Delete Item\"\n *     content=\"Are you sure you want to delete this item?\"\n *     confirm=\"Yes\"\n *     confirmColor=\"primary\"\n *     ConfirmIcon=ActionCheck\n *     CancelIcon=AlertError\n *     cancel=\"Cancel\"\n *     onConfirm={() => { // do something }}\n *     onClose={() => { // do something }}\n * />\n */\nexport var Confirm = function (props) {\n  var _a;\n  var className = props.className,\n    _b = props.isOpen,\n    isOpen = _b === void 0 ? false : _b,\n    loading = props.loading,\n    title = props.title,\n    content = props.content,\n    _c = props.cancel,\n    cancel = _c === void 0 ? 'ra.action.cancel' : _c,\n    _d = props.confirm,\n    confirm = _d === void 0 ? 'ra.action.confirm' : _d,\n    _e = props.confirmColor,\n    confirmColor = _e === void 0 ? 'primary' : _e,\n    _f = props.ConfirmIcon,\n    ConfirmIcon = _f === void 0 ? ActionCheck : _f,\n    _g = props.CancelIcon,\n    CancelIcon = _g === void 0 ? AlertError : _g,\n    onClose = props.onClose,\n    onConfirm = props.onConfirm,\n    _h = props.translateOptions,\n    translateOptions = _h === void 0 ? {} : _h,\n    rest = __rest(props, [\"className\", \"isOpen\", \"loading\", \"title\", \"content\", \"cancel\", \"confirm\", \"confirmColor\", \"ConfirmIcon\", \"CancelIcon\", \"onClose\", \"onConfirm\", \"translateOptions\"]);\n  var translate = useTranslate();\n  var handleConfirm = useCallback(function (e) {\n    e.stopPropagation();\n    onConfirm(e);\n  }, [onConfirm]);\n  var handleClick = useCallback(function (e) {\n    e.stopPropagation();\n  }, []);\n  return React.createElement(StyledDialog, __assign({\n    className: className,\n    open: isOpen,\n    onClose: onClose,\n    onClick: handleClick,\n    \"aria-labelledby\": \"alert-dialog-title\"\n  }, rest), React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\"\n  }, translate(title, __assign({\n    _: title\n  }, translateOptions))), React.createElement(DialogContent, null, typeof content === 'string' ? React.createElement(DialogContentText, null, translate(content, __assign({\n    _: content\n  }, translateOptions))) : content), React.createElement(DialogActions, null, React.createElement(Button, {\n    disabled: loading,\n    onClick: onClose,\n    startIcon: React.createElement(CancelIcon, null)\n  }, translate(cancel, {\n    _: cancel\n  })), React.createElement(Button, {\n    disabled: loading,\n    onClick: handleConfirm,\n    className: clsx('ra-confirm', (_a = {}, _a[ConfirmClasses.confirmWarning] = confirmColor === 'warning', _a[ConfirmClasses.confirmPrimary] = confirmColor === 'primary', _a)),\n    autoFocus: true,\n    startIcon: React.createElement(ConfirmIcon, null)\n  }, translate(confirm, {\n    _: confirm\n  }))));\n};\nConfirm.propTypes = {\n  cancel: PropTypes.string,\n  className: PropTypes.string,\n  confirm: PropTypes.string,\n  confirmColor: PropTypes.string,\n  ConfirmIcon: PropTypes.elementType,\n  CancelIcon: PropTypes.elementType,\n  content: PropTypes.node.isRequired,\n  isOpen: PropTypes.bool,\n  loading: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  sx: PropTypes.any\n};\nvar PREFIX = 'RaConfirm';\nexport var ConfirmClasses = {\n  confirmPrimary: \"\".concat(PREFIX, \"-confirmPrimary\"),\n  confirmWarning: \"\".concat(PREFIX, \"-confirmWarning\")\n};\nvar StyledDialog = styled(Dialog, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .\".concat(ConfirmClasses.confirmPrimary)] = {\n    color: theme.palette.primary.main\n  }, _b[\"& .\".concat(ConfirmClasses.confirmWarning)] = {\n    color: theme.palette.error.main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.error.main, 0.12),\n      // Reset on mouse devices\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  }, _b;\n});","map":{"version":3,"mappings":"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","names":["React","styled","useCallback","PropTypes","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","alpha","ActionCheck","AlertError","clsx","useTranslate","Confirm","props","_b","isOpen","loading","title","content","_c","cancel","_d","confirm","_e","confirmColor","_f","ConfirmIcon","_g","CancelIcon","onClose","onConfirm","_h","translateOptions","rest","translate","handleConfirm","e","stopPropagation","handleClick","StyledDialog","className","open","onClick","id","_","disabled","startIcon","_a","ConfirmClasses","confirmWarning","confirmPrimary","autoFocus","propTypes","string","elementType","node","isRequired","bool","func","sx","any","PREFIX","name","overridesResolver","styles","root","theme","color","palette","primary","main","error","backgroundColor"],"sourceRoot":"","sources":["../../../src/layout/Confirm.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { BulkDeleteWithConfirmButton } from './BulkDeleteWithConfirmButton';\nimport { BulkDeleteWithUndoButton } from './BulkDeleteWithUndoButton';\n/**\n * Deletes the selected rows.\n *\n * To be used inside the <List bulkActionButtons> prop (where it's enabled by default).\n *\n * @example // basic usage\n * import * as React from 'react';\n * import { Fragment } from 'react';\n * import { BulkDeleteButton, BulkExportButton } from 'react-admin';\n *\n * const PostBulkActionButtons = () => (\n *     <Fragment>\n *         <BulkExportButton />\n *         <BulkDeleteButton />\n *     </Fragment>\n * );\n *\n * export const PostList = (props) => (\n *     <List {...props} bulkActionButtons={<PostBulkActionButtons />}>\n *         ...\n *     </List>\n * );\n */\nexport var BulkDeleteButton = function (_a) {\n  var _b = _a.mutationMode,\n    mutationMode = _b === void 0 ? 'undoable' : _b,\n    props = __rest(_a, [\"mutationMode\"]);\n  return mutationMode === 'undoable' ? React.createElement(BulkDeleteWithUndoButton, __assign({}, props)) : React.createElement(BulkDeleteWithConfirmButton, __assign({\n    mutationMode: mutationMode\n  }, props));\n};\nBulkDeleteButton.propTypes = {\n  label: PropTypes.string,\n  resource: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n  icon: PropTypes.element\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SACIC,2BAA2B,QAExB,+BAA+B;AACtC,SACIC,wBAAwB,QAErB,4BAA4B;AAGnC;;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAO,IAAMC,gBAAgB,GAAG,UAACC,EAGT;EAFpB,wBAAyB;IAAzBC,YAAY,mBAAG,UAAU;IACtBC,KAAK,cAFqB,gBAGhC,CADW;EAER,mBAAY,KAAK,UAAU,GACvBP,oBAACG,wBAAwB,eAAKI,KAAK,EAAI,GAEvCP,oBAACE,2BAA2B;IAACI,YAAY,EAAEA;EAAY,GAAMC,KAAK,EACrE;CAAA;AASLH,gBAAgB,CAACI,SAAS,GAAG;EACzBC,KAAK,EAAER,SAAS,CAACS,MAAM;EACvBC,QAAQ,EAAEV,SAAS,CAACS,MAAM;EAC1BE,WAAW,EAAEX,SAAS,CAACY,OAAO,CAACZ,SAAS,CAACa,GAAG,CAAC;EAC7CR,YAAY,EAAEL,SAAS,CAACc,KAAK,CAAC,CAAC,aAAa,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;EACxEC,IAAI,EAAEf,SAAS,CAACgB;CACnB","names":["React","PropTypes","BulkDeleteWithConfirmButton","BulkDeleteWithUndoButton","BulkDeleteButton","_a","mutationMode","props","propTypes","label","string","resource","selectedIds","arrayOf","any","oneOf","icon","element"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/ra-ui-materialui/src/button/BulkDeleteButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    BulkDeleteWithConfirmButton,\n    BulkDeleteWithConfirmButtonProps,\n} from './BulkDeleteWithConfirmButton';\nimport {\n    BulkDeleteWithUndoButton,\n    BulkDeleteWithUndoButtonProps,\n} from './BulkDeleteWithUndoButton';\nimport { MutationMode } from 'ra-core';\n\n/**\n * Deletes the selected rows.\n *\n * To be used inside the <List bulkActionButtons> prop (where it's enabled by default).\n *\n * @example // basic usage\n * import * as React from 'react';\n * import { Fragment } from 'react';\n * import { BulkDeleteButton, BulkExportButton } from 'react-admin';\n *\n * const PostBulkActionButtons = () => (\n *     <Fragment>\n *         <BulkExportButton />\n *         <BulkDeleteButton />\n *     </Fragment>\n * );\n *\n * export const PostList = (props) => (\n *     <List {...props} bulkActionButtons={<PostBulkActionButtons />}>\n *         ...\n *     </List>\n * );\n */\nexport const BulkDeleteButton = ({\n    mutationMode = 'undoable',\n    ...props\n}: BulkDeleteButtonProps) =>\n    mutationMode === 'undoable' ? (\n        <BulkDeleteWithUndoButton {...props} />\n    ) : (\n        <BulkDeleteWithConfirmButton mutationMode={mutationMode} {...props} />\n    );\n\ninterface Props {\n    mutationMode?: MutationMode;\n}\n\nexport type BulkDeleteButtonProps = Props &\n    (BulkDeleteWithUndoButtonProps | BulkDeleteWithConfirmButtonProps);\n\nBulkDeleteButton.propTypes = {\n    label: PropTypes.string,\n    resource: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n    icon: PropTypes.element,\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
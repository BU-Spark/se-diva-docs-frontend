{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar _a;\nimport * as React from 'react';\nimport { forwardRef, useCallback } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { InputAdornment, IconButton, TextField as MuiTextField } from '@mui/material';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { useTranslate } from 'ra-core';\n/**\n * An override of the default MUI TextField which is resettable\n */\nexport var ResettableTextField = forwardRef(function (props, ref) {\n  var clearAlwaysVisible = props.clearAlwaysVisible,\n    InputProps = props.InputProps,\n    value = props.value,\n    resettable = props.resettable,\n    disabled = props.disabled,\n    variant = props.variant,\n    margin = props.margin,\n    className = props.className,\n    rest = __rest(props, [\"clearAlwaysVisible\", \"InputProps\", \"value\", \"resettable\", \"disabled\", \"variant\", \"margin\", \"className\"]);\n  var translate = useTranslate();\n  var onChange = props.onChange,\n    onFocus = props.onFocus,\n    onBlur = props.onBlur;\n  var handleClickClearButton = useCallback(function (event) {\n    event.preventDefault();\n    onChange('');\n  }, [onChange]);\n  var handleFocus = useCallback(function (event) {\n    onFocus && onFocus(event);\n  }, [onFocus]);\n  var handleBlur = useCallback(function (event) {\n    onBlur && onBlur(event);\n  }, [onBlur]);\n  var clearButton = ResettableTextFieldClasses.clearButton,\n    clearIcon = ResettableTextFieldClasses.clearIcon,\n    inputAdornedEnd = ResettableTextFieldClasses.inputAdornedEnd,\n    selectAdornment = ResettableTextFieldClasses.selectAdornment,\n    visibleClearIcon = ResettableTextFieldClasses.visibleClearIcon;\n  var _a = InputProps || {},\n    endAdornment = _a.endAdornment,\n    InputPropsWithoutEndAdornment = __rest(_a, [\"endAdornment\"]);\n  if (clearAlwaysVisible && endAdornment) {\n    throw new Error('ResettableTextField cannot display both an endAdornment and a clear button always visible');\n  }\n  var getEndAdornment = function () {\n    var _a;\n    if (!resettable) {\n      return endAdornment;\n    } else if (!value) {\n      if (clearAlwaysVisible) {\n        // show clear button, inactive\n        return React.createElement(InputAdornment, {\n          position: \"end\",\n          classes: {\n            root: props.select ? selectAdornment : null\n          }\n        }, React.createElement(IconButton, {\n          className: clearButton,\n          \"aria-label\": translate('ra.action.clear_input_value'),\n          title: translate('ra.action.clear_input_value'),\n          disabled: true,\n          size: \"large\"\n        }, React.createElement(ClearIcon, {\n          className: clsx(clearIcon, visibleClearIcon)\n        })));\n      } else {\n        if (endAdornment) {\n          return endAdornment;\n        } else {\n          // show spacer\n          return React.createElement(InputAdornment, {\n            position: \"end\",\n            classes: {\n              root: props.select ? selectAdornment : null\n            }\n          }, React.createElement(\"span\", {\n            className: clearButton\n          }, \"\\u00A0\"));\n        }\n      }\n    } else {\n      // show clear\n      return React.createElement(InputAdornment, {\n        position: \"end\",\n        classes: {\n          root: props.select ? selectAdornment : null\n        }\n      }, React.createElement(IconButton, {\n        className: clearButton,\n        \"aria-label\": translate('ra.action.clear_input_value'),\n        title: translate('ra.action.clear_input_value'),\n        onClick: handleClickClearButton,\n        onMouseDown: handleMouseDownClearButton,\n        disabled: disabled,\n        size: \"large\"\n      }, React.createElement(ClearIcon, {\n        className: clsx(clearIcon, (_a = {}, _a[visibleClearIcon] = clearAlwaysVisible || value, _a))\n      })));\n    }\n  };\n  return React.createElement(StyledTextField, __assign({\n    value: value,\n    InputProps: __assign({\n      classes: props.select && variant === 'filled' ? {\n        adornedEnd: inputAdornedEnd\n      } : {},\n      endAdornment: getEndAdornment()\n    }, InputPropsWithoutEndAdornment),\n    disabled: disabled,\n    variant: variant,\n    margin: margin,\n    className: className,\n    size: \"small\"\n  }, rest, {\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    inputRef: ref\n  }));\n});\nResettableTextField.displayName = 'ResettableTextField';\nvar handleMouseDownClearButton = function (event) {\n  event.preventDefault();\n};\nResettableTextField.propTypes = {\n  clearAlwaysVisible: PropTypes.bool,\n  disabled: PropTypes.bool,\n  InputProps: PropTypes.object,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func.isRequired,\n  onFocus: PropTypes.func,\n  resettable: PropTypes.bool,\n  value: PropTypes.any\n};\nvar PREFIX = 'RaResettableTextField';\nexport var ResettableTextFieldClasses = {\n  clearIcon: \"\".concat(PREFIX, \"-clearIcon\"),\n  visibleClearIcon: \"\".concat(PREFIX, \"-visibleClearIcon\"),\n  clearButton: \"\".concat(PREFIX, \"-clearButton\"),\n  selectAdornment: \"\".concat(PREFIX, \"-selectAdornment\"),\n  inputAdornedEnd: \"\".concat(PREFIX, \"-inputAdornedEnd\")\n};\nexport var ResettableTextFieldStyles = (_a = {}, _a[\"& .\".concat(ResettableTextFieldClasses.clearIcon)] = {\n  height: 16,\n  width: 0\n}, _a[\"& .\".concat(ResettableTextFieldClasses.visibleClearIcon)] = {\n  width: 16\n}, _a[\"& .\".concat(ResettableTextFieldClasses.clearButton)] = {\n  height: 24,\n  width: 24,\n  padding: 0\n}, _a[\"& .\".concat(ResettableTextFieldClasses.selectAdornment)] = {\n  position: 'absolute',\n  right: 24\n}, _a[\"& .\".concat(ResettableTextFieldClasses.inputAdornedEnd)] = {\n  paddingRight: 0\n}, _a);\nvar StyledTextField = styled(MuiTextField, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(ResettableTextFieldStyles);","map":{"version":3,"mappings":"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","names":["React","forwardRef","useCallback","styled","PropTypes","clsx","InputAdornment","IconButton","TextField","MuiTextField","ClearIcon","useTranslate","ResettableTextField","props","ref","InputProps","value","resettable","disabled","variant","margin","className","rest","translate","onFocus","onBlur","handleClickClearButton","event","preventDefault","onChange","handleFocus","handleBlur","ResettableTextFieldClasses","clearIcon","inputAdornedEnd","selectAdornment","visibleClearIcon","_a","endAdornment","InputPropsWithoutEndAdornment","clearAlwaysVisible","Error","getEndAdornment","position","classes","root","select","clearButton","title","size","onClick","onMouseDown","handleMouseDownClearButton","StyledTextField","adornedEnd","inputRef","displayName","propTypes","bool","object","func","isRequired","any","PREFIX","ResettableTextFieldStyles","height","width","padding","right","paddingRight","name","overridesResolver","styles"],"sourceRoot":"","sources":["../../../src/input/ResettableTextField.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
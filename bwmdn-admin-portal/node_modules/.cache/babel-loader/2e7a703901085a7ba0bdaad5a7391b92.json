{"ast":null,"code":"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { TranslatableContextProvider, useTranslatable } from 'ra-core';\nimport { TranslatableInputsTabs } from './TranslatableInputsTabs';\nimport { TranslatableInputsTabContent } from './TranslatableInputsTabContent';\n/**\n * Provides a way to edit multiple languages for any input passed as children.\n * It expects the translatable values to have the following structure:\n * {\n *     name: {\n *         en: 'The english value',\n *         fr: 'The french value',\n *         tlh: 'The klingon value',\n *     },\n *     description: {\n *         en: 'The english value',\n *         fr: 'The french value',\n *         tlh: 'The klingon value',\n *     }\n * }\n *\n * @example <caption>Basic usage</caption>\n * <TranslatableInputs locales={['en', 'fr']}>\n *     <TextInput source=\"title\" />\n *     <RichTextInput source=\"description\" />\n * </Translatable>\n *\n * @example <caption>With a custom language selector</caption>\n * <TranslatableInputs\n *     selector={<MyLanguageSelector />}\n *     locales={['en', 'fr']}\n * >\n *     <TextInput source=\"title\" />\n * </Translatable>\n *\n * const MyLanguageSelector = () => {\n *     const {\n *         locales,\n *         selectedLocale,\n *         selectLocale,\n *     } = useTranslatableContext();\n *\n *     return (\n *         <select onChange={event => selectLocale(event.target.value)}>\n *             {locales.map((locale) => (\n *                 <option selected={locale === selectedLocale}>\n *                     {locale}\n *                 </option>\n *             ))}\n *        </select>\n *     );\n * }\n *\n * @param props The component props\n * @param {string} props.defaultLocale The locale selected by default. Default to 'en'.\n * @param {string[]} props.locales An array of the possible locales. For example: `['en', 'fr'].\n * @param {ReactElement} props.selector The element responsible for selecting a locale. Defaults to MUI tabs.\n */\nexport var TranslatableInputs = function (props) {\n  var className = props.className,\n    defaultLocale = props.defaultLocale,\n    locales = props.locales,\n    _a = props.groupKey,\n    groupKey = _a === void 0 ? '' : _a,\n    _b = props.selector,\n    selector = _b === void 0 ? React.createElement(TranslatableInputsTabs, {\n      groupKey: groupKey\n    }) : _b,\n    children = props.children,\n    variant = props.variant,\n    margin = props.margin;\n  var context = useTranslatable({\n    defaultLocale: defaultLocale,\n    locales: locales\n  });\n  return React.createElement(Root, {\n    className: className\n  }, React.createElement(TranslatableContextProvider, {\n    value: context\n  }, selector, locales.map(function (locale) {\n    return React.createElement(TranslatableInputsTabContent, {\n      key: locale,\n      locale: locale,\n      groupKey: groupKey,\n      variant: variant,\n      margin: margin\n    }, children);\n  })));\n};\nvar PREFIX = 'RaTranslatableInputs';\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var theme = _a.theme;\n  return {\n    flexGrow: 1,\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(0.5)\n  };\n});","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,QAAQ,sBAAsB;AAE7C,SACIC,2BAA2B,EAC3BC,eAAe,QAEZ,SAAS;AAChB,SAASC,sBAAsB,QAAQ,0BAA0B;AACjE,SAASC,4BAA4B,QAAQ,gCAAgC;AAE7E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA,OAAO,IAAMC,kBAAkB,GAAG,UAC9BC,KAA8B;EAG1B,aAAS,GAQTA,KAAK,UARI;IACTC,aAAa,GAObD,KAAK,cAPQ;IACbE,OAAO,GAMPF,KAAK,QANE;IACPG,KAKAH,KAAK,SALQ;IAAbI,QAAQ,mBAAG,EAAE;IACbC,KAIAL,KAAK,SAJoD;IAAzDM,QAAQ,mBAAGb,oBAACI,sBAAsB;MAACO,QAAQ,EAAEA;IAAQ,EAAI;IACzDG,QAAQ,GAGRP,KAAK,SAHG;IACRQ,OAAO,GAEPR,KAAK,QAFE;IACPS,MAAM,GACNT,KAAK,OADC;EAEV,IAAMU,OAAO,GAAGd,eAAe,CAAC;IAAEK,aAAa;IAAEC,OAAO;EAAA,CAAE,CAAC;EAE3D,OACIT,oBAACkB,IAAI;IAACC,SAAS,EAAEA;EAAS,GACtBnB,oBAACE,2BAA2B;IAACkB,KAAK,EAAEH;EAAO,GACtCJ,QAAQ,EACRJ,OAAO,CAACY,GAAG,CAAC,gBAAM;IAAI,OACnBrB,oBAACK,4BAA4B;MACzBiB,GAAG,EAAEC,MAAM;MACXA,MAAM,EAAEA,MAAM;MACdZ,QAAQ,EAAEA,QAAQ;MAClBI,OAAO,EAAEA,OAAO;MAChBC,MAAM,EAAEA;IAAM,GAEbF,QAAQ,CACkB;EATZ,CAUtB,CAAC,CACwB,CAC3B;AAEf,CAAC;AAWD,IAAMU,MAAM,GAAG,sBAAsB;AAErC,IAAMN,IAAI,GAAGjB,MAAM,CAAC,KAAK,EAAE;EACvBwB,IAAI,EAAED,MAAM;EACZE,iBAAiB,EAAE,UAACnB,KAAK,EAAEoB,MAAM;IAAK,aAAM,CAACC,IAAI;EAAX;CACzC,CAAC,CAAC,UAAClB,EAAS;MAAPmB,KAAK;EAAO,OAAC;IACfC,QAAQ,EAAE,CAAC;IACXC,SAAS,EAAEF,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC;IAC3BC,YAAY,EAAEJ,KAAK,CAACG,OAAO,CAAC,GAAG;GAClC;AAJiB,CAIhB,CAAC","names":["React","styled","TranslatableContextProvider","useTranslatable","TranslatableInputsTabs","TranslatableInputsTabContent","TranslatableInputs","props","defaultLocale","locales","_a","groupKey","_b","selector","children","variant","margin","context","Root","className","value","map","key","locale","PREFIX","name","overridesResolver","styles","root","theme","flexGrow","marginTop","spacing","marginBottom"],"sourceRoot":"","sources":["../../../src/input/TranslatableInputs.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
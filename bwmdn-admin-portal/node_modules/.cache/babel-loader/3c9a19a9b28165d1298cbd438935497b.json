{"ast":null,"code":"import { useContext } from 'react';\nimport { ResourceContext } from './ResourceContext';\n/**\n * Hook to read the resource from the ResourceContext.\n *\n * Must be used within a <ResourceContextProvider> (e.g. as a descendent of <Resource>\n * or any reference related components), or called with a resource prop.\n *\n * @example\n *\n * const ResourceName = (props) => {\n *   const resource = useResourceContext(props);\n *   const getResourceLabel = useGetResourceLabel();\n *   return <>{getResourceLabel(resource, 1)}</>;\n * }\n *\n * // use it in a resource context\n * const MyComponent = () => (\n *   <ResourceContextProvider value=\"posts\">\n *     <ResourceName />\n *     ...\n *   </ResourceContextProvider>\n * );\n *\n * // override resource via props\n * const MyComponent = () => (\n *   <>\n *     <ResourceName resource=\"posts\"/>\n *     ...\n *   </>\n * );\n *\n * @returns {ResourceContextValue} The resource name, e.g. 'posts'\n */\nexport var useResourceContext = function (props) {\n  var context = useContext(ResourceContext);\n  return props && props.resource || context;\n};","map":{"version":3,"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,eAAe,QAA8B,mBAAmB;AAEzE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,OAAO,IAAMC,kBAAkB,GAAG,UAG9BC,KAAgC;EAEhC,IAAMC,OAAO,GAAGJ,UAAU,CAACC,eAAe,CAAC;EAC3C,OAAQE,KAAK,IAAIA,KAAK,CAACE,QAAQ,IAAKD,OAAO;AAC/C,CAAC","names":["useContext","ResourceContext","useResourceContext","props","context","resource"],"sourceRoot":"","sources":["../../../src/core/useResourceContext.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
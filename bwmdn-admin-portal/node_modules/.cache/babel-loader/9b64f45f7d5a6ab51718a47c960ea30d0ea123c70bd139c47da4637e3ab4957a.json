{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Fab, useMediaQuery } from '@mui/material';\nimport ContentAdd from '@mui/icons-material/Add';\nimport clsx from 'clsx';\nimport { Link } from 'react-router-dom';\nimport { useTranslate, useResourceContext, useCreatePath } from 'ra-core';\nimport { Button } from './Button';\n/**\n * Opens the Create view of a given resource\n *\n * Renders as a regular button on desktop, and a Floating Action Button\n * on mobile.\n *\n * @example // basic usage\n * import { CreateButton } from 'react-admin';\n *\n * const CommentCreateButton = () => (\n *     <CreateButton label=\"Create comment\" />\n * );\n */\nvar CreateButton = function (props) {\n  var className = props.className,\n    _a = props.icon,\n    icon = _a === void 0 ? defaultIcon : _a,\n    _b = props.label,\n    label = _b === void 0 ? 'ra.action.create' : _b,\n    resourceProp = props.resource,\n    _c = props.scrollToTop,\n    scrollToTop = _c === void 0 ? true : _c,\n    variant = props.variant,\n    rest = __rest(props, [\"className\", \"icon\", \"label\", \"resource\", \"scrollToTop\", \"variant\"]);\n  var resource = useResourceContext(props);\n  var createPath = useCreatePath();\n  var translate = useTranslate();\n  var isSmall = useMediaQuery(function (theme) {\n    return theme.breakpoints.down('md');\n  });\n  return isSmall ? React.createElement(StyledFab, __assign({\n    component: Link,\n    to: createPath({\n      resource: resource,\n      type: 'create'\n    }),\n    state: scrollStates[String(scrollToTop)],\n    color: \"primary\",\n    className: clsx(CreateButtonClasses.floating, className),\n    \"aria-label\": label && translate(label)\n  }, rest), icon) : React.createElement(Button, __assign({\n    component: Link,\n    to: createPath({\n      resource: resource,\n      type: 'create'\n    }),\n    state: scrollStates[String(scrollToTop)],\n    className: className,\n    label: label,\n    variant: variant\n  }, rest), icon);\n};\n// avoids using useMemo to get a constant value for the link state\nvar scrollStates = {\n  true: {\n    _scrollToTop: true\n  },\n  false: {}\n};\nvar defaultIcon = React.createElement(ContentAdd, null);\nCreateButton.propTypes = {\n  resource: PropTypes.string,\n  className: PropTypes.string,\n  icon: PropTypes.element,\n  label: PropTypes.string\n};\nvar PREFIX = 'RaCreateButton';\nexport var CreateButtonClasses = {\n  floating: \"\".concat(PREFIX, \"-floating\")\n};\nvar StyledFab = styled(Fab, {\n  name: PREFIX,\n  overridesResolver: function (_props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n  var theme = _a.theme;\n  return _b = {}, _b[\"&.\".concat(CreateButtonClasses.floating)] = {\n    color: theme.palette.getContrastText(theme.palette.primary.main),\n    margin: 0,\n    top: 'auto',\n    right: 20,\n    bottom: 60,\n    left: 'auto',\n    position: 'fixed',\n    zIndex: 1000\n  }, _b;\n});\nexport default memo(CreateButton, function (prevProps, nextProps) {\n  return prevProps.resource === nextProps.resource && prevProps.label === nextProps.label && prevProps.translate === nextProps.translate && prevProps.disabled === nextProps.disabled;\n});","map":{"version":3,"mappings":"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","names":["React","styled","memo","PropTypes","Fab","useMediaQuery","ContentAdd","clsx","Link","useTranslate","useResourceContext","useCreatePath","Button","CreateButton","props","_a","icon","defaultIcon","_b","label","resourceProp","_c","scrollToTop","variant","rest","resource","createPath","translate","isSmall","theme","breakpoints","down","StyledFab","component","to","type","state","scrollStates","String","color","className","CreateButtonClasses","floating","true","_scrollToTop","false","propTypes","string","element","PREFIX","name","overridesResolver","_props","styles","root","palette","getContrastText","primary","main","margin","top","right","bottom","left","position","zIndex","prevProps","nextProps","disabled"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/ra-ui-materialui/src/button/CreateButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { ReactElement, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Fab, useMediaQuery, Theme } from '@mui/material';\nimport ContentAdd from '@mui/icons-material/Add';\nimport clsx from 'clsx';\nimport { Link } from 'react-router-dom';\nimport { useTranslate, useResourceContext, useCreatePath } from 'ra-core';\n\nimport { Button, ButtonProps } from './Button';\n\n/**\n * Opens the Create view of a given resource\n *\n * Renders as a regular button on desktop, and a Floating Action Button\n * on mobile.\n *\n * @example // basic usage\n * import { CreateButton } from 'react-admin';\n *\n * const CommentCreateButton = () => (\n *     <CreateButton label=\"Create comment\" />\n * );\n */\nconst CreateButton = (props: CreateButtonProps) => {\n    const {\n        className,\n        icon = defaultIcon,\n        label = 'ra.action.create',\n        resource: resourceProp,\n        scrollToTop = true,\n        variant,\n        ...rest\n    } = props;\n\n    const resource = useResourceContext(props);\n    const createPath = useCreatePath();\n    const translate = useTranslate();\n    const isSmall = useMediaQuery((theme: Theme) =>\n        theme.breakpoints.down('md')\n    );\n\n    return isSmall ? (\n        <StyledFab\n            component={Link}\n            to={createPath({ resource, type: 'create' })}\n            state={scrollStates[String(scrollToTop)]}\n            color=\"primary\"\n            className={clsx(CreateButtonClasses.floating, className)}\n            aria-label={label && translate(label)}\n            {...rest}\n        >\n            {icon}\n        </StyledFab>\n    ) : (\n        <Button\n            component={Link}\n            to={createPath({ resource, type: 'create' })}\n            state={scrollStates[String(scrollToTop)]}\n            className={className}\n            label={label}\n            variant={variant}\n            {...(rest as any)}\n        >\n            {icon}\n        </Button>\n    );\n};\n\n// avoids using useMemo to get a constant value for the link state\nconst scrollStates = {\n    true: { _scrollToTop: true },\n    false: {},\n};\n\nconst defaultIcon = <ContentAdd />;\n\ninterface Props {\n    resource?: string;\n    icon?: ReactElement;\n    scrollToTop?: boolean;\n}\n\nexport type CreateButtonProps = Props & ButtonProps;\n\nCreateButton.propTypes = {\n    resource: PropTypes.string,\n    className: PropTypes.string,\n    icon: PropTypes.element,\n    label: PropTypes.string,\n};\n\nconst PREFIX = 'RaCreateButton';\n\nexport const CreateButtonClasses = {\n    floating: `${PREFIX}-floating`,\n};\n\nconst StyledFab = (styled(Fab, {\n    name: PREFIX,\n    overridesResolver: (_props, styles) => styles.root,\n})(({ theme }) => ({\n    [`&.${CreateButtonClasses.floating}`]: {\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n        margin: 0,\n        top: 'auto',\n        right: 20,\n        bottom: 60,\n        left: 'auto',\n        position: 'fixed',\n        zIndex: 1000,\n    },\n})) as unknown) as typeof Fab;\n\nexport default memo(CreateButton, (prevProps, nextProps) => {\n    return (\n        prevProps.resource === nextProps.resource &&\n        prevProps.label === nextProps.label &&\n        prevProps.translate === nextProps.translate &&\n        prevProps.disabled === nextProps.disabled\n    );\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
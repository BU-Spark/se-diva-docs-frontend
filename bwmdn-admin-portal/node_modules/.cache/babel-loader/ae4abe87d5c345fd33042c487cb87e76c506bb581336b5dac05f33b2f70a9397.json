{"ast":null,"code":"import { useCallback } from 'react';\nimport { useTranslate } from './useTranslate';\nimport { useLabelPrefix, getFieldLabelTranslationArgs } from '../util';\nimport { useResourceContext } from '../core';\nexport var useTranslateLabel = function () {\n  var translate = useTranslate();\n  var prefix = useLabelPrefix();\n  var resourceFromContext = useResourceContext();\n  return useCallback(function (_a) {\n    var source = _a.source,\n      label = _a.label,\n      resource = _a.resource;\n    if (label === false || label === '') {\n      return null;\n    }\n    if (label && typeof label !== 'string') {\n      return label;\n    }\n    return translate.apply(void 0, getFieldLabelTranslationArgs({\n      label: label,\n      prefix: prefix,\n      resource: resource,\n      resourceFromContext: resourceFromContext,\n      source: source\n    }));\n  }, [prefix, resourceFromContext, translate]);\n};","map":{"version":3,"mappings":"AAAA,SAASA,WAAW,QAAsB,OAAO;AAEjD,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,cAAc,EAAEC,4BAA4B,QAAQ,SAAS;AACtE,SAASC,kBAAkB,QAAQ,SAAS;AAE5C,OAAO,IAAMC,iBAAiB,GAAG;EAC7B,IAAMC,SAAS,GAAGL,YAAY,EAAE;EAChC,IAAMM,MAAM,GAAGL,cAAc,EAAE;EAC/B,IAAMM,mBAAmB,GAAGJ,kBAAkB,EAAE;EAEhD,OAAOJ,WAAW,CACd,UAACS,EAQA;QAPGC,MAAM;MACNC,KAAK;MACLC,QAAQ;IAMR,IAAID,KAAK,KAAK,KAAK,IAAIA,KAAK,KAAK,EAAE,EAAE;MACjC,OAAO,IAAI;;IAGf,IAAIA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MACpC,OAAOA,KAAK;;IAGhB,OAAOL,SAAS,eACTH,4BAA4B,CAAC;MAC5BQ,KAAK,EAAEA,KAAe;MACtBJ,MAAM;MACNK,QAAQ;MACRJ,mBAAmB;MACnBE,MAAM;KACT,CAAC;EAEV,CAAC,EACD,CAACH,MAAM,EAAEC,mBAAmB,EAAEF,SAAS,CAAC,CAC3C;AACL,CAAC","names":["useCallback","useTranslate","useLabelPrefix","getFieldLabelTranslationArgs","useResourceContext","useTranslateLabel","translate","prefix","resourceFromContext","_a","source","label","resource"],"sources":["/Users/paigedeveau/Desktop/se-diva-docs-frontend/bwmdn-admin-portal/node_modules/ra-core/src/i18n/useTranslateLabel.ts"],"sourcesContent":["import { useCallback, ReactElement } from 'react';\n\nimport { useTranslate } from './useTranslate';\nimport { useLabelPrefix, getFieldLabelTranslationArgs } from '../util';\nimport { useResourceContext } from '../core';\n\nexport const useTranslateLabel = () => {\n    const translate = useTranslate();\n    const prefix = useLabelPrefix();\n    const resourceFromContext = useResourceContext();\n\n    return useCallback(\n        ({\n            source,\n            label,\n            resource,\n        }: {\n            source?: string;\n            label?: string | false | ReactElement;\n            resource?: string;\n        }) => {\n            if (label === false || label === '') {\n                return null;\n            }\n\n            if (label && typeof label !== 'string') {\n                return label;\n            }\n\n            return translate(\n                ...getFieldLabelTranslationArgs({\n                    label: label as string,\n                    prefix,\n                    resource,\n                    resourceFromContext,\n                    source,\n                })\n            );\n        },\n        [prefix, resourceFromContext, translate]\n    );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}